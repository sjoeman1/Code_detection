 Here is a Python3 solution for the problem:

```python
import sys
input = sys.stdin.readline

mod = 1000000007

def power(x, y):
    res = 1
    while y > 0:
        if y & 1:
            res = (res * x) % mod
        x = (x * x) % mod
        y >>= 1
    return res

def solve(n, a):
    dp = [0] * (n + 1)
    dp[0] = 1
    for i in range(n):
        for j in range(i):
            if a[i] % a[j] == 0:
                dp[i + 1] = (dp[i + 1] + dp[j]) % mod
    return dp[n]

def main():
    n = int(input().strip())
    a = list(map(int, input().strip().split()))

    # Count the number of multiples of each number
    freq = [0] * 61
    for x in a:
        freq[x] += 1

    # Calculate the answer
    ans = 0
    for i in range(1, 61):
        if freq[i] > 0:
            freq_less_than_i = sum(freq[:i])
            freq[i] -= 1
            ans = (ans + freq_less_than_i * solve(n - i, a)) % mod
            freq[i] += 1
