 Here is a Python3 solution for the problem:

```python
def mex(x, y):
    return (x + 1) % 3 if y == 2 else (x + 2) % 3

N = int(input())
arr = []
for i in range(N):
    arr.append(list(map(int, input().split())))

count = [[0, 0, 0] for _ in range(N)]
count[0][arr[0][0]] += 1

for i in range(1, N):
    count[i][arr[i][0]] += 1
    for j in range(1, N):
        arr[i][j] = mex(arr[i-1][j], arr[i][j-1])
        count[i][arr[i][j]] += 1

print(*map(sum, count))
```

The solution first defines a helper function `mex` that implements the `mex` operation. Then, it reads the input and initializes a 2D list `arr` to store the matrix. A 3D list `count` is also initialized to store the count of 0's, 1's, and 2's in each cell of the matrix.

The solution then iterates over the rows of the matrix, and for each row, it iterates over its elements. For the first element of each row, it updates the count based on its value. For the remaining elements, it computes its value using the `mex` function and updates the count accordingly.

Finally, the solution prints the sum of the counts of 0's, 1's, and 2's in all cells of the matrix.