 Here is a Python3 solution for the problem:

```python
import math

def solve():
    m = int(input())
    max_blocks = 0
    max_volume = 0
    for i in range(1, int(math.sqrt(m)) + 1):
        volume = i ** 3
        blocks = 1
        while volume <= m:
            blocks += 1
            volume += i ** 3
        if blocks > max_blocks:
            max_blocks = blocks
            max_volume = volume
    print(max_blocks, max_volume)

solve()
```

The solution uses a greedy approach. It starts by trying to add blocks with side length `i` to the tower, as long as the total volume does not exceed `m`. It keeps track of the maximum number of blocks and the corresponding volume.

Note that the maximum side length of a block is `sqrt(m)`, hence the loop goes up to `int(sqrt(m)) + 1`.

For the first example input `48`, the output is `9 42`.

For the second example input `6`, the output is `6 6`.