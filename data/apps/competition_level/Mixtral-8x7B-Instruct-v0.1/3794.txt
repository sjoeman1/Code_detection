 Here is a Python3 solution for the problem:

```python
import math

def gcd(a, b):
    return math.gcd(a, b)

def split\_into\_two\_groups(n, a):
    g = gcd(a[0], a[1])
    for i in range(2, n):
        g = gcd(g, a[i])
    if g > 1:
        return "NO"
    group1 = [1] * n
    group2 = [2] * n
    group1[0] = 2
    group2[0] = 1
    for i in range(1, n):
        if gcd(a[i], a[0]) == 1:
            group1[i] = 1
            group2[i] = 2
    return "YES\n" + ' '.join(map(str, group1)) + '\n' + ' '.join(map(str, group2))

n = int(input())
a = list(map(int, input().split()))
print(split\_into\_two\_groups(n, a))
```

The solution works as follows:

1. It first calculates the GCD of the first two elements of the array `a`.
2. It then iterates over the rest of the elements in `a`, and calculates the GCD of the current element and the previously calculated GCD.
3. If the final GCD is greater than 1, it is not possible to split the elements into two groups with GCD 1, and the solution prints "NO".
4. Otherwise, it initializes two arrays `group1` and `group2` with all elements set to 1 and 2, respectively.
5. It then swaps the groups of the first two elements, so that the first element is in the second group and the second element is in the first group.
6. It iterates over the rest of the elements in `a`, and if the GCD of the current element and the first element is 1, it moves the current element to the first group.
7. Finally, it prints "YES" followed by the two arrays `group1` and `group2`, with the