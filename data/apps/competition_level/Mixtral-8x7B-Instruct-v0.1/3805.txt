 Here is a Python3 solution for the problem:

```python
def can_unentangle(seq):
    # Count the number of times the '+' wire goes under the '-' wire
    under = 0
    for i in range(1, len(seq)):
        if seq[i] == '-' and seq[i-1] == '+':
            under += 1
    
    # If the number of times the '+' wire goes under is odd, then it's impossible to unentangle the wires
    if under % 2 != 0:
        return "No"
    
    # If the number of times the '+' wire goes under is even, then it's possible to unentangle the wires
    return "Yes"

# Test cases
print(can_unentangle("-++-"))  # Yes
print(can_unentangle("+-"))    # No
print(can_unentangle("++"))    # Yes
print(can_unentangle("-"))     # No
```

The solution works by counting the number of times the '+' wire goes under the '-' wire. If this number is odd, then it's impossible to unentangle the wires, because the '+' wire will always be on top of the '-' wire at the end, and the wires will be entangled. If this number is even, then it's possible to unentangle the wires, because the '+' wire can be lifted up and moved under the '-' wire to unentangle them.

In the first testcase, the '+' wire goes under the '-' wire twice, so the wires can be unentangled.

In the second testcase, the '+' wire goes under the '-' wire once, so the wires cannot be unentangled.

In the third testcase, the '+' wire does not go under the '-' wire at all, so the wires can be unentangled.

In the fourth testcase, the '-' wire goes under the '+' wire once, so the wires cannot be unentangled.