

Here is the Python 3 code for the given question:

```py
#!/usr/bin/env python3

import sys

n, m = map(int, input().split())

y1 = list(map(int, input().split()))
y2 = list(map(int, input().split()))

def count_destroyed(y1, y2, y):
    cnt = 0
    for x in y1:
        if abs(x - y) <= 100:
            cnt += 1
    for x in y2:
        if abs(x - y) <= 100:
            cnt += 1
    return cnt

ans = 0
for i in range(1, 10001):
    for j in range(i + 1, 10001):
        cnt1 = count_destroyed(y1, y2, i)
        cnt2 = count_destroyed(y1, y2, j)
        ans = max(ans, cnt1 + cnt2)

print(ans)
```

The code first reads the input from the user, which includes the number of enemy spaceships with $x = -100$ and $x = 100$, as well as the $y$-coordinates of the spaceships in both groups.

Then, it defines a function `count_destroyed` that calculates the number of enemy spaceships that can be destroyed given a $y$-coordinate. It iterates through the $y$-coordinates of the spaceships in both groups and checks if the distance between the $y$-coordinate and the given $y$ is less than or equal to $100$. If it is, it increments the counter.

Finally, the code iterates through all possible pairs of $y$-coordinates from $1$ to $10000$ and calculates the maximum number of enemy spaceships that can be destroyed. The code prints the maximum number of destroyed enemy spaceships as the output.