

The Python 3 code for solving the question is provided below:

```py
def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def get_polynomials(n):
    if n < 1:
        return -1
    for i in range(1, n + 1):
        for j in range(1, n + 1):
            for k in range(1, n + 1):
                A = [1] + [0] * (i - 1) + [k]
                B = [1] + [0] * (j - 1)
                steps = 0
                while True:
                    steps += 1
                    if steps > n:
                        break
                    R = [x % 2 for x in A]
                    while R and R[-1] == 0:
                        R.pop()
                    if not R:
                        break
                    A = B
                    B = R
                if steps == n:
                    return A, B
    return -1

def main():
    n = int(input())
    result = get_polynomials(n)
    if result == -1:
        print(-1)
    else:
        A, B = result
        print(len(A) - 1)
        print(*A)
        print(len(B) - 1)
        print(*B)

if __name__ == '__main__':
    main()
```

In this code, the function `gcd` is used to calculate the greatest common divisor of two numbers. The `get_polynomials` function is used to generate polynomials `A` and `B` such that the Euclid's algorithm performs exactly `n` steps when finding their greatest common divisor. The `main` function is used to take input from the user and print the result.