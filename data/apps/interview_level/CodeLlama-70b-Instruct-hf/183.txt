

 Here's a Python3 solution to the problem:

```
def solve(n, k, m):
    def digit_sum(num):
        return sum(int(x) for x in str(num))

    ans = 0
    for x in range(k):
        for y in range(10**(n-1), 10**n):
            if digit_sum(y) == x and y % k == 0:
                ans += 1
    return ans % m


n, k, m = map(int, input().split())
print(solve(n, k, m))
```

The `solve` function takes three arguments: `n`, `k`, and `m`. It defines a nested function `digit_sum` that calculates the sum of the digits of a number.

The main part of the `solve` function iterates over the possible values of `x` and `y`, where `x` ranges from 0 to `k - 1` and `y` ranges from 10^(n-1) to 10^n. If the sum of the digits of `y` equals `x` and `y` is divisible by `k`, the `ans` variable is incremented.

Finally, the function returns the remainder of `ans` divided by `m`.

The input is taken from the user and split into the three variables `n`, `k`, and `m`. The `solve` function is called with these arguments, and the result is printed.

This solution assumes that the input is formatted correctly and contains three space-separated integers. If the input is not in the correct format, you may need to adjust the code accordingly.