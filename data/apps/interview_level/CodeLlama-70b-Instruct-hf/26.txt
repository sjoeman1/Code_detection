


Here is the Python 3 code that meets the requirements:

```
import math

# Function to calculate the power of a number
def power(base, exponent):
    result = math.pow(base, exponent)
    return result

# Function to calculate the max power and the corresponding expression
def max_power_expression(x, y, z):
    # Calculate the powers
    a_1 = power(x, power(y, z))
    a_2 = power(x, power(z, y))
    a_3 = power(power(x, y), z)
    a_4 = power(power(x, z), y)
    a_5 = power(y, power(x, z))
    a_6 = power(y, power(z, x))
    a_7 = power(power(y, x), z)
    a_8 = power(power(y, z), x)
    a_9 = power(z, power(x, y))
    a_10 = power(z, power(y, x))
    a_11 = power(power(z, x), y)
    a_12 = power(power(z, y), x)

    # Create a list of the powers
    powers = [a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, a_9, a_10, a_11, a_12]

    # Find the maximum power and the corresponding index
    max_power = max(powers)
    max_index = powers.index(max_power)

    # Determine the corresponding expression
    if max_index == 0:
        expression = 'x^y^z'
    elif max_index == 1:
        expression = 'x^z^y'
    elif max_index == 2:
        expression = '(x^y)^z'
    elif max_index == 3:
        expression = '(x^z)^y'
    elif max_index == 4:
        expression = 'y^x^z'
    elif max_index ==