
Here is a Python3 solution for the problem:

```python
def get_pairs(n):
    if n <= 1:
        return 0
    elif n == 2:
        return 1
    else:
        max_nines = 0
        sum_nines = 0
        for i in range(1, n+1):
            sum_nines += i
            if sum_nines % 10 == 0:
                max_nines += 1
            elif (sum_nines-1) % 10 == 0:
                max_nines += 1

        pairs = 0
        for i in range(max_nines+1):
            pairs += (n - i) * (n - i - 1) // 2

        return pairs

n = int(input())
pairs = get_pairs(n)
print(pairs)
```

The `get_pairs` function takes `n` as an input and calculates the number of pairs of shovels with the maximum number of nines at the end. The function checks for the maximum number of nines in the sum of the costs of all pairs and then calculates the number of pairs with that maximum number of nines. The function returns the number of pairs.