



 



 



Here is the Python 3 code for solving the problem:

```python
def get_maximum_messiness(n, k):
    # If there is only one cow, the maximum messiness is 0
    if n == 1:
        return 0

    # Calculate the maximum messiness possible with k swaps
    max_messiness = 0
    for i in range(n - 1):
        for j in range(i + 1, n):
            if i < j:
                max_messiness += 1

    # If k is less than the number of possible swaps,
    # then the maximum messiness is reduced by the number of
    # possible swaps that are not performed
    if k < (n - 1) * n // 2:
        max_messiness -= (n - 1) * n // 2 - k

    return max_messiness

# Read input from the user
n, k = map(int, input().split())

# Calculate and print the maximum messiness
max_messiness = get_maximum_messiness(n, k)
print(max_messiness)
```

The code takes input from the user and then calculates the maximum messiness by considering all possible swaps and reducing the number of swaps that are not performed if k is less than the total number of possible swaps.