

The Python 3 code for solving the question is as follows:

```python
# Function to find the minimum number of 90 degrees clockwise turns
def findMinTurns(x):
    # If x is already divisible by 90, then no turns are required
    if x % 90 == 0:
        return 0
    # Calculate the minimum number of turns to reach the nearest multiple of 90
    minTurns = 0
    if x > 0:
        minTurns = (90 - x) % 90
    else:
        minTurns = (-x) % 90
    # If the number of turns is less than 90, return it
    if minTurns <= 90:
        return minTurns
    # If not, return the number of turns required to reach the opposite multiple of 90
    else:
        return 180 - minTurns

# Read the input
x = int(input())

# Call the function to find the minimum number of turns
minTurns = findMinTurns(x)

# Print the output
print(minTurns)
```

This code first checks if the camera angle is already divisible by 90, in which case no turns are required. If it is not, it calculates the minimum number of turns to reach the nearest multiple of 90. If the number of turns is less than 90, it returns this value. Otherwise, it returns the number of turns required to reach the opposite multiple of 90.