

 Here is the Python 3 code for the problem: 

```
x, y = 1, 1
n = int(input())
a = list(map(int, input().split()))

for i in range(1, n):
    if a[i] == a[i-1]:
        print('NO')
        break
    if a[i] < a[i-1]:
        y = (a[i-1] - 1) // y + 1
    else:
        x = (a[i] - 1) // x + 1
else:
    print('YES')
    print(x, y)
```

The code starts by initializing x and y as 1. It then reads the number of cells visited and the integers in the cells on the path.

The code then enters a loop that iterates through the sequence of moves, starting from the second element (index 1). It checks if the current element is equal to the previous element. If it is, it prints 'NO' and breaks from the loop.

If the current element is less than the previous element, it calculates y by dividing the previous element by y and adding 1. This ensures that the path is possible.

If the current element is greater than the previous element, it calculates x by dividing the current element by x and adding 1. This ensures that the path is possible.

If the loop runs successfully without breaking, it prints 'YES' and the values of x and y.