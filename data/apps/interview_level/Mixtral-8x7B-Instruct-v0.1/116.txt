 Here is one way to solve the problem in Python3:

```
l1, r1, l2, r2, k = map(int, input().split())

# Find the minimum and maximum of the overlap
left = max(l1, l2)
right = min(r1, r2)

# Check if there is any overlap
if left > right:
    print(0)
else:
    # Adjust the right endpoint to account for Sonya's prinking
    if k >= left and k <= right:
        right -= 1
    print(right - left + 1)
```

This code first reads in the input values and converts them to integers. It then finds the minimum and maximum of the overlap by taking the maximum of the left endpoints and the minimum of the right endpoints. If the left endpoint of the overlap is greater than the right endpoint, then there is no overlap, so the code prints 0. Otherwise, it adjusts the right endpoint to account for Sonya's prinking by subtracting 1 if necessary, and then prints the length of the overlap.