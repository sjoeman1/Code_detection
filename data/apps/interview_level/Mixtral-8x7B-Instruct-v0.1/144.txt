 Here is a Python3 solution for the problem:

```python
n = int(input())
ticket = input()

# Calculate the sum of all digits
total_sum = sum(int(digit) for digit in ticket)

# Initialize a set to store the sum of segments
segment_sums = set()

# Try to divide the ticket into segments with length from 1 to n/2
for segment_length in range(1, n//2 + 1):
    # Calculate the sum of the current segment
    segment_sum = 0
    for i in range(segment_length):
        segment_sum += int(ticket[i])
    # Add the sum to the set
    segment_sums.add(segment_sum)
    # Try to divide the rest of the ticket
    for i in range(segment_length, n - segment_length + 1, segment_length):
        segment_sum -= int(ticket[i - segment_length])
        segment_sum += int(ticket[i])
        segment_sums.add(segment_sum)

# Check if the ticket is lucky
if len(segment_sums) > 1 and total_sum in segment_sums:
    print("YES")
else:
    print("NO")
```

This solution works by trying to divide the ticket into segments of length from 1 to n/2, where n is the number of digits in the ticket. For each segment, it calculates the sum of the digits and adds it to a set. If the ticket is lucky, then the sum of the digits of the entire ticket should be in the set of segment sums.

Note that the solution assumes that n is even, since the problem states that the ticket can be divided into two or more non-intersecting segments. If n is odd, then the ticket cannot be divided into two segments with equal sums, so it is not lucky.