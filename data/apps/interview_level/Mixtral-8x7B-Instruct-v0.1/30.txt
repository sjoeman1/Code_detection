 Here is a Python3 solution for the problem:

```python
import math

def min_traps(m, x):
    if math.gcd(m, x) != 1:
        return -1
    else:
        return (m - 1) // x + 1

# Test cases
print(min_traps(4, 3)) # 3
print(min_traps(5, 2)) # 2
```

The solution is based on the observation that the $x$-mouse will visit every $x$th room, skipping the other rooms. Therefore, we need to place traps in every $x$th room to ensure that the $x$-mouse will visit a trapped room. The number of traps required is equal to the smallest positive integer $k$ such that $k \cdot x \ge m-1$, which can be calculated as $(m - 1) // x + 1$. We also need to check that $x$ and $m$ are coprime, since if they are not, the $x$-mouse will get stuck in a cycle and never visit some rooms. If they are not coprime, we return -1 to indicate that it's impossible to catch the $x$-mouse.