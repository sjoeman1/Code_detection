 Here is a Python3 solution for the problem:

```python
n = int(input())
arr = list(map(int, input().split()))

counts = [0]*1003 + [0] + [0]*1003
for num in arr:
    counts[num+1003] += 1

max_pos = 0
for d in range(1, 1003):
    cur_pos = sum(counts[d::d])
    if cur_pos > max_pos:
        max_pos = cur_pos

if max_pos >= n//2:
    print(max(d for d in range(1, 1003) if sum(counts[d::d]) >= n//2))
else:
    print(0)
```

The solution works by first counting the occurrences of each number in the input array in the `counts` list. Then, it iterates from `d=1` to `d=1002` and calculates the number of positive numbers that would remain after dividing each number in the array by `d`. The maximum number of positive numbers found is stored in `max_pos`. Finally, if `max_pos` is greater than or equal to half of the array size, the solution prints the smallest `d` that results in at least `n//2` positive numbers. Otherwise, it prints `0`.