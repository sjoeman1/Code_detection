```python
import numpy as np

n = int(input())

vectors = []

for _ in range(n):
    x, y = map(int, input().split())
    vectors.append(np.array([x, y]))

cos_angles = np.cos(np.arccos(np.dot(vectors[0], vectors[1]) / np.sqrt(np.dot(vectors[0], vectors[0]) * np.dot(vectors[1], vectors[1]))

a, b = np.argmin(cos_angles) + 1, np.argmax(cos_angles) + 1

print(a, b)
```

**Explanation:**

* The code reads the number of vectors `n` and then reads the coordinates of each vector.
* It creates a NumPy array `vectors` to store the vectors.
* It calculates the cosine angles between each pair of vectors using the dot product and the square root of the dot product of each vector with itself.
* It finds the pair of vectors with the minimal non-oriented angle and prints their indices.

**Time complexity:**

* The code calculates the cosine angle between two vectors in constant time.
* It iterates over the `n` vectors only once, so the time complexity is O(n).

**Space complexity:**

* The code uses a constant amount of space regardless of the number of vectors.