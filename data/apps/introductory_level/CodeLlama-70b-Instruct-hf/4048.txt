

 Here is the code:

```python
n, m, d = map(int, input().split())
c = list(map(int, input().split()))

def move(left, right):
    for i in range(left, right):
        if a[i] == 0:
            a[i] = a[i + 1]
    for i in range(right, left, -1):
        if a[i] == 0:
            a[i] = a[i - 1]

def is_reachable():
    for i in range(1, n + 1):
        if a[i] == 0 and a[i + 1] == 0:
            return False
    return True

def is_valid():
    p = 1
    for i in range(1, n + 1):
        if a[i] == p:
            p += 1
    return p == m + 1

a = [0] * (n + 2)
a[0] = 1
a[n + 1] = m + 1

for i in range(m):
    move(1, n + 1 - c[i])

if not is_reachable():
    print("NO")
else:
    if not is_valid():
        print("NO")
    else:
        print("YES")
        print(" ".join(map(str, a[1:n + 1])))
```

The code starts by reading the input and storing it in the variables `n`, `m`, and `d`. It then defines the function `move(left, right)`, which is used to move the platforms to the left or right. The `is_reachable()` function checks if the player can reach the last platform, and the `is_valid()` function checks if the player can reach each platform in the correct order. The code then iterates over the platforms and moves them to the left, and finally checks if the player can reach the last platform and if the player can reach each platform in the correct order. If everything is valid, it prints the answer and the array `a`.