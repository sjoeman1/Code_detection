

Here is the Python 3 code for solving the question:

```python
def minimum_coins(n, x):
    x.sort()
    mid = x[n // 2]
    coins = 0
    for i in range(n):
        coins += abs(x[i] - mid) // 2
    return coins

n = int(input())
x = list(map(int, input().split()))
print(minimum_coins(n, x))
```

The code first sorts the list of chip coordinates. Then, it calculates the midpoint by taking the median of the sorted list. This is the coordinate to which all chips will be moved.

To calculate the minimum number of coins required, it iterates through the list of chip coordinates and calculates the difference between each chip's coordinate and the midpoint. It then divides this difference by 2 and adds it to the total coins count.

Finally, it prints the minimum number of coins required to move all chips to the same coordinate.