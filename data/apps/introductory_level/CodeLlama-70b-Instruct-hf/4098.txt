
Here is the Python 3 code for solving the problem:

```python
n = int(input())

# Read the input array
a = list(map(int, input().split()))

# Create a dictionary to keep track of the last occurrence of each element
last_occurrence = {}

# Iterate through the array and update the dictionary
for i in range(n):
    last_occurrence[a[i]] = i

# Create a list to store the unique elements in the desired order
unique_elements = []

# Iterate through the array again
for i in range(n):
    # If the current element's last occurrence is the current index, add it to the unique_elements list
    if last_occurrence[a[i]] == i:
        unique_elements.append(a[i])

# Print the number of unique elements
print(len(unique_elements))

# Print the unique elements separated by a space
print(' '.join(map(str, unique_elements)))
```

The code first reads the input array and stores it in the `a` list. Then, it creates a dictionary named `last_occurrence` to keep track of the last occurrence of each element in the array. It iterates through the array and updates the dictionary accordingly.

Then, it creates an empty list named `unique_elements` to store the unique elements in the desired order. It iterates through the array again and checks if the current element's last occurrence is the current index. If it is, the element is added to the `unique_elements` list.

Finally, it prints the number of unique elements and the unique elements themselves separated by a space.