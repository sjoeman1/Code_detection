
Here is the Python 3 code to solve the problem:
```
def count_choices(problems):
    count = 0
    for i in range(1, len(problems)):
        abc = problems[:i]
        arc = problems[i:]
        if len(abc) == len(arc):
            count += 1
    return count


if __name__ == "__main__":
    n = int(input())
    problems = list(map(int, input().split()))
    problems.sort()

    count = count_choices(problems)
    print(count)
```

This code reads the input for the number of problems (N) and the difficulties of each problem (d_i). It then sorts the difficulties in ascending order.

The `count_choices` function counts the number of choices of K that make the number of problems for ARCs and the number of problems for ABCs the same. It iterates over all possible choices of K and counts the number of ABCs and ARCs for each choice. If the number of ABCs and ARCs is equal, it increments the count.

Finally, it prints the count.