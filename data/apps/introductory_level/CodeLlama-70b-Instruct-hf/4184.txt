
Here's the Python 3 code to solve the given question:

```
# Function to calculate the minimum possible absolute difference of S_1 and S_2
def calculateMinDiff(N, W):
    # Initialize the prefix sum array
    prefix_sum = [0] * (N + 1)
    # Calculate the prefix sum for the array
    for i in range(1, N + 1):
        prefix_sum[i] = prefix_sum[i - 1] + W[i - 1]
    # Initialize the minimum difference and T
    min_diff = float('inf')
    T = 0
    # Iterate through all possible values of T
    for i in range(1, N):
        # Calculate the absolute difference for each T
        diff = abs(prefix_sum[i] - (prefix_sum[N] - prefix_sum[i]))
        # Update the minimum difference and T if a smaller difference is found
        if diff < min_diff:
            min_diff = diff
            T = i
    # Return the minimum difference
    return min_diff

# Read the input
N = int(input())
W = list(map(int, input().split()))
# Calculate and print the minimum possible absolute difference
print(calculateMinDiff(N, W))
```

This code calculates the minimum possible absolute difference between S_1 and S_2 by iterating through all possible values of T. It calculates the prefix sum for the weights array and then calculates the absolute difference for each T. It updates the minimum difference and T if a smaller difference is found. Finally, it prints the minimum possible absolute difference.