 Here is a Python3 solution for the problem:
```python
n = int(input())
a = list(map(int, input().split()))

# Initialize variables to keep track of the current increasing sequence
current_seq = [a[0]]
current_length = 1
max_length = 1
max_seq = [a[0]]

# Initialize variables to keep track of the direction of the current move
left_move = True
right_move = False

# Iterate over the sequence starting from the second element
for i in range(1, n):
    # If the current element is greater than the last element of the current sequence
    if a[i] > current_seq[-1]:
        # Add the current element to the current sequence
        current_seq.append(a[i])
        current_length += 1
        if current_length > max_length:
            max_length = current_length
            max_seq = current_seq.copy()
    # If the current element is less than the first element of the current sequence
    elif a[i] < current_seq[0]:
        # Remove the first element of the current sequence and add the current element
        current_seq = [a[i]] + current_seq[:-1]
        current_length -= 1
        current_seq.append(a[i+1])
        current_length += 1
        if current_length > max_length:
            max_length = current_length
            max_seq = current_seq.copy()
        # Change the direction of the current move
        left_move = False
        right_move = True
    # If the current element is between the first and last elements of the current sequence
    else:
        # If the current element is the next number after the last element of the current sequence
        if a[i] == current_seq[-1] + 1:
            # Remove the last element of the current sequence and add the current element
            current_seq = current_seq[:-1] + [a[i]]
            current_length -= 1
            current_seq.append(a[i+1])
            current_length += 1
            if current_length > max_length: