 Here is a Python3 solution for the problem:

```python
n = int(input().strip())
a = list(map(int, input().strip().split(' ')))

a.sort()

# Initialize the maximum team size
max_team_size = 0

# Initialize the current team size and the start and end indices of the current sequence
current_team_size = 1
start, end = 0, 0

# Iterate over the weights from the second one to the last one
for i in range(1, n):
    # If the current weight is equal to the previous one, continue to the next iteration
    if a[i] == a[i - 1]:
        continue

    # If the current weight is greater than the previous one by 1, increment the current team size
    if a[i] == a[i - 1] + 1:
        current_team_size += 1
    # Otherwise, update the maximum team size if the current team size is greater than the previous maximum
    else:
        max_team_size = max(max_team_size, current_team_size)
        # Update the current team size and the start and end indices of the current sequence
        current_team_size = 2
        start = i - 1
        end = i

# Update the maximum team size if the current team size is greater than the previous maximum
max_team_size = max(max_team_size, current_team_size)

# If the maximum team size is less than 2, it means that all weights are equal, so we can increase or decrease one weight to form a team
if max_team_size < 2:
    max_team_size = 1
# Otherwise, if the maximum team size is 2, we can form a team by increasing or decreasing the weights of the two largest or two smallest weights
elif max_team_size == 2:
    if a[0] > 1:
        max_team_size = 2
    elif a[-1] < 150000:
        max_team_size = 2

print(max_team_size)
```

The solution works by first sorting