 Here's a Python3 solution for the problem. The idea is to iterate through all possible values of `a` and `b` from 1 to `N`, and calculate the corresponding value of `c` based on the given conditions. We then increment the count of valid triples accordingly.

```python
def count_triples(N, K):
    count = 0
    for a in range(1, N+1):
        for b in range(1, N+1):
            c = (K * ((a + b) // K - 1)) - a - b
            if c <= 0 or c > N:
                continue
            count += 1
    return count

N, K = map(int, input().split())
result = count_triples(N, K)
print(result)
```

When you run this code, it will read the input values of `N` and `K` from the standard input, calculate the number of valid triples using the `count_triples` function, and print the result. Note that this solution has a time complexity of O(N^2), which should be sufficient for the given constraints.