 Here is a possible Python3 solution for the problem:

```python
n = int(input())
f = list(map(int, input().split()))

# Find the first friend who doesn't know who to give a gift to
for i in range(n):
    if f[i] == 0:
        start = i
        break

# Initialize the answer with the given values
nf = f.copy()

# Distribute the gifts starting from the found friend
given = set()
for i in range(start, start + n):
    i %= n  # Wrap around to the beginning if needed
    if nf[i] == 0:
        # Find the smallest available friend to give a gift to
        for j in range(n):
            if j not in given:
                nf[i] = j
                given.add(j)
                break

print(*nf)
```

The solution works by first finding a friend who doesn't know who to give a gift to, and using that friend as a starting point to distribute the gifts. For each friend, the solution finds the smallest available friend to give a gift to, and assigns it to the current friend's `nf` value. The `given` set is used to keep track of the friends who have already received a gift.

Note that the solution wraps around to the beginning of the list if the current friend is at the end of the list, by taking the modulo of the index with `n`. This is to handle the case when the starting friend is the last friend in the list.

The solution prints the final `nf` list, which contains the answer to the problem.