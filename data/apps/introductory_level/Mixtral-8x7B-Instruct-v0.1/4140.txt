 Here is a Python3 solution for the problem:

```python
import sys

def min_repaint(s):
    n = len(s)
    if n == 1:
        return 0
    count = 0
    prev = s[0]
    for i in range(1, n):
        if s[i] == prev:
            count += 1
        else:
            prev = 1 - prev
    return count

s = input()
print(min_repaint(s))
```

The solution works by iterating through the string `s` and keeping track of the previous tile's color. If the current tile has the same color as the previous one, it increments the `count` variable, which represents the number of tiles that need to be repainted. After the iteration, the function returns the `count` value.

The function assumes that the input string `s` is valid, i.e., it contains only '0' and '1' characters and its length is at least 1 and at most 10^5. If the input is not valid, the function may not produce the correct output.