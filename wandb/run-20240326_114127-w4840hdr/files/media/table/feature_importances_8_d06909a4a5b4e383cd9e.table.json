{"columns": ["feature_names", "importances"], "data": [["(", 1.3063684895065792], [")", 1.2977106040895718], ["#NEWLINE#", 0.9333352603252449], [".", 0.5876620136865028], ["t", 0.5613866449519017], ["a", 0.5490544694373737], ["moves", 0.5203884836102504], ["s", 0.49480689403192063], ["int", 0.48445385313913486], ["map", 0.47590704096776193], ["segments", 0.4384657563838796], ["input", 0.42071604328638024], ["diff", 0.3952355876456428], ["split", 0.38151750970660236], ["ps", 0.3569911413665338], ["math", 0.3265784870839099], ["edges", 0.31926849717992817], ["row_sum", 0.31047233847956146], ["print", 0.3095298509653085], ["divisors_x_y", 0.3082969776904801], ["sort", 0.29051304798756444], ["freq", 0.2835173851881367], ["range", 0.2771190225169976], ["strip", 0.2696326488026636], ["pages_written", 0.2653551201616424], ["max_length", 0.26303147468165766], ["position", 0.2617233318867365], ["prefix_sum", 0.2590450235847838], ["operations", 0.25680514599164916], ["**", 0.25462319662799493], ["\"no\"", 0.25392210884456307], ["10", 0.2501253880291712], ["abs", 0.24967981084527122], ["max_len", 0.24822326139690937], ["max_diff", 0.23517772508541834], ["rightmost_occurrence", 0.23362170903362586], ["i", 0.22975657514814288], ["\"\"", 0.22488979885312535], ["min_cost", 0.22357691244466857], ["neighbor", 0.22253356449873432], ["graph", 0.22253356449873432], ["min_length", 0.22234305484671765], ["visited", 0.22197616520131067], ["good_time", 0.22112943629926038], ["\"yes\"", 0.22013832995810162], ["cumulative_sum", 0.21780959992471852], ["u", 0.21590079847631016], ["current_team", 0.21261282840885815], ["teams", 0.21261282840885815], ["curr_length", 0.2104251797453261], ["lower", 0.2061106150384369], ["_", 0.20566508802011982], ["max_common_divisor", 0.2055313184603201], ["matrix", 0.20358876706153586], ["min_instability", 0.20214653731659968], ["dfs", 0.19541071939889784], ["nf", 0.19506982705255543], ["y", 0.1917878671671896], ["nice", 0.19037887662906802], ["price", 0.18695162398232], ["num_blue", 0.18683711370511247], ["\"0\"", 0.18606289971706833], ["'inf'", 0.18601864962450887], ["min_perimeter", 0.18458669301779235], ["subsequence", 0.18069866432714396], ["has_palindrome", 0.18069866432714396], ["exit", 0.18003475365389], ["coins", 0.17917774098310058], ["current_position", 0.17917774098310058], ["s_dict", 0.17886152995573487], ["segments_used", 0.1783843433715727], ["max_sum", 0.17741276484546367], ["len", 0.17532501690859886], ["# print the answer", 0.17528751868840986], ["distance", 0.17520153832484306], ["projects", 0.17414419741346368], ["rating", 0.17414419741346368], ["max_projects", 0.17414419741346368], ["reachable_count", 0.1707786392644499], ["or", 0.16996409932791104], ["segment_length", 0.16675729113503823], ["sub_s", 0.16652213120460582], ["ceil", 0.16457594403089099], ["common_divisors", 0.16405765667614516], ["prefixes", 0.1611283676423733], ["suffixes", 0.1611283676423733], ["equal", 0.15848658335493682], ["not", 0.15733868952571517], ["y_max", 0.1565148623856663], ["x_min", 0.1565148623856663], ["x_max", 0.1565148623856663], ["y_min", 0.1565148623856663], ["dp", 0.154298956920577], ["omega_h", 0.15223152894748546], ["instability", 0.15160990298744975], ["1000000007", 0.15077954612649022], ["med", 0.1487674140136338], ["blocks", 0.148742463660851], ["gcda", 0.14847847168361838], ["lcm", 0.14847847168361838], ["lcm_min", 0.14847847168361838], ["guess", 0.14685117805475184], ["r", 0.14506292812372779], ["\"1\"", 0.144861341938501], ["num_subjects", 0.142854132054952], ["total_points", 0.142854132054952], ["good", 0.142784157471801], ["min_price", 0.14021371798674004], ["tax_8", 0.14021371798674004], ["tax_10", 0.14021371798674004], ["sqrt", 0.13915303422392195], ["row_sums", 0.13305957363409776], ["days", 0.1326775600808212], ["cups_drunk", 0.1326775600808212], ["caff_sum", 0.1326775600808212], ["min_packages", 0.13161233483440454], ["zero_indices", 0.13004655136837032], ["current_edges", 0.12334548606011846], ["max_edges", 0.12334548606011846], ["{", 0.12316589521026838], ["}", 0.12316589521026838], ["is_palindrome", 0.12215326023692154], ["sqrt_n", 0.12046396181155761], ["min_val", 0.11892289558104845], ["bisect", 0.11828739189524233], ["edge", 0.11734186042094817], ["zip", 0.11398266394655394], ["float", 0.11398243740605869], ["count_reachable", 0.1138524261762999], ["num_zeros", 0.1138524261762999], ["all", 0.11148116255261524], ["factors", 0.1093717711174301], ["# calculate the minimum number of pairwise distinct flats to turn off the light", 0.10894340977257683], ["=", 0.10853119494948422], ["v", 0.10424058254114932], ["max_wins", 0.10423361902153665], ["min_wins", 0.10423361902153665], ["digit", 0.1015800700087415], ["new_digit", 0.1015800700087415], ["max_num", 0.1015800700087415], ["orig_digit", 0.1015800700087415], ["omega_m", 0.10148768596499028], ["theta_m", 0.10148768596499028], ["theta_h", 0.10148768596499028], ["count", 0.10106879207059136], ["character", 0.10006144306090296], ["b_count", 0.09729917410348661], ["x_count", 0.09729917410348661], ["a_count", 0.09729917410348661], ["min_colors", 0.09450579506271221], ["intersection", 0.09397623521165918], ["# print the minimum number of operations", 0.09372239664666081], ["equals", 0.09347581199116], ["# calculate the number of blue balls that will be placed in the first n balls", 0.09341855685255623], ["# print the number of blue balls", 0.09341855685255623], ["# print the minimum perimeter", 0.09229334650889617], ["# calculate the minimum perimeter", 0.09229334650889617], ["seg", 0.08919217168578635], ["k_elements", 0.08870638242273184], ["and", 0.08828180371615313], ["# find the multiple of k in the sequence", 0.08724111062891216], ["# if no multiple of k is found, print -1", 0.08724111062891216], ["insertions", 0.08712383996988743], ["res", 0.08459701229187504], ["'(())'", 0.08326106560230291], ["sin", 0.08156312547105342], ["+=", 0.0814471900813567], ["set", 0.08094351969326269], ["pi", 0.07710652189642606], ["replace", 0.07581831568031643], ["distances", 0.06670762870726864], ["y3", 0.06623245663039884], ["y2", 0.06623245663039884], ["y4", 0.06623245663039884], ["y5", 0.06623245663039884], ["x6", 0.06623245663039884], ["y1", 0.06623245663039884], ["x5", 0.06623245663039884], ["y6", 0.06623245663039884], ["x4", 0.06623245663039884], ["x1", 0.06623245663039884], ["x3", 0.06623245663039884], ["x2", 0.06623245663039884], ["# calculate the minimum number of packages", 0.06580616741720227], ["# find the first digit of n that is not a zero", 0.0652333338171438], ["# otherwise, print the number of moves required", 0.0652333338171438], ["# we can move the second digit of n to the end", 0.0652333338171438], ["25", 0.0652333338171438], ["# if the first digit is not a zero, we can move it to the end", 0.0652333338171438], ["# if the number of moves required is greater than the number of moves that are possible, print -1", 0.0652333338171438], ["# count the number of moves required to make n divisible by 25", 0.0652333338171438], ["# calculate the number of gifts each friend will receive", 0.06502327568418516], ["# find the two zeros and store their indices", 0.06502327568418516], ["in", 0.06428112324831411], ["# calculate the minimum difference between elements", 0.06387655743381035], ["# if the minimum difference is 0, it means that the array is already equal", 0.06387655743381035], ["# check if the substring s[i:i+1] is a subsequence of t", 0.06205581534922734], ["# find the maximum length of the substring that can be removed", 0.06205581534922734], ["# print the maximum length of the substring that can be removed", 0.06205581534922734], ["# such that t is still a subsequence of s", 0.06205581534922734], ["node", 0.0612143278665408], ["# print the count of tuples", 0.060231980905778804], ["# calculate the square root of n", 0.060231980905778804], ["# check if the tuple is valid", 0.060231980905778804], ["# calculate the value of b and c", 0.060231980905778804], ["# initialize the count of tuples", 0.060231980905778804], ["# iterate over the square root of n", 0.060231980905778804], ["# increment the count", 0.060231980905778804], ["# calculate the minimum coins required to move all chips to the same coordinate", 0.05972591366103352], ["# calculate the minimum number of operations to get the desired remainder", 0.05963407113888219], ["# calculate the remainder when num is divided by 10^x", 0.05963407113888219], ["# print the balanced ternary string", 0.05940455295479912], ["min_replace", 0.05940455295479912], ["# replace characters to make the string balanced", 0.05940455295479912], ["# calculate the minimum number of characters to replace", 0.05940455295479912], ["# check if the string can be sorted", 0.05937962658620693], ["# initialize the count of reachable numbers", 0.05692621308814995], ["# if there are any zeros, remove them and add the number of iterations", 0.05692621308814995], ["# return the count of reachable numbers", 0.05692621308814995], ["# function to count the number of reachable numbers from n", 0.05692621308814995], ["# iterate over the number of iterations", 0.05692621308814995], ["# calculate the number of zeros in the multiple of n", 0.05692621308814995], ["# print the count of reachable numbers", 0.05692621308814995], ["append", 0.056028142036300285], ["zeros", 0.055922541712889726], ["# calculate the length of the shortest possible abbreviation", 0.05558576371167941], ["# calculate the length of the segment", 0.05558576371167941], ["# print the minimum length", 0.05558576371167941], ["# update the minimum length if necessary", 0.05558576371167941], ["&=", 0.05468588555871505], ["# find the common divisor of all elements in the array", 0.05468588555871505], ["\"p\"", 0.0537094558807911], ["\"s\"", 0.0537094558807911], ["# check if the sequence is already an arithmetic progression", 0.053510306300424575], ["# count the number of elements that can be changed", 0.053510306300424575], ["# print the maximum length of the increasing subarray", 0.052606294936331524], ["# using kadane's algorithm", 0.052606294936331524], ["# calculate the maximum length of the increasing subarray", 0.052606294936331524], ["# calculate the minimum and maximum number of rounds alice can win", 0.052116809510768324], ["sum", 0.05185326223943246], ["# find the maximum common divisor of x and y", 0.051382829615080026], ["# calculate x and y", 0.051382829615080026], ["# create a dictionary to store the divisors of x and y", 0.051382829615080026], ["# print x and y", 0.051382829615080026], ["# calculate the angular velocity of the hour and minute hands", 0.05074384298249514], ["# calculate the distance between the unfixed endpoints of the hands", 0.05074384298249514], ["# calculate the angle rotated by the hour and minute hands", 0.05074384298249514], ["# find the maximum number of blocks", 0.04958082122028367], ["# calculate the prefix sum of the array", 0.04958082122028367], ["# print the number of blocks and the blocks", 0.04958082122028367], ["# construct the string with a zeroes, b ones and x indices of non-equality", 0.048649587051743305], ["# print the constructed string", 0.048649587051743305], ["1000", 0.04733478465216652], ["values", 0.04725289753135611], ["# color the characters according to the frequency", 0.04725289753135611], ["# calculate the minimum number of colors", 0.04725289753135611], ["# print the minimum number of colors and the coloring", 0.04725289753135611], ["# create a frequency table of the characters", 0.04725289753135611], ["# create the coloring", 0.04725289753135611], ["# remove one segment", 0.04698811760582959], ["# calculate the intersection", 0.04698811760582959], ["# print the length of the intersection", 0.04698811760582959], ["0.1", 0.04673790599558], ["0.08", 0.04673790599558], ["# print the minimum price", 0.04673790599558], ["# calculate the minimum price that satisfies the condition", 0.04673790599558], ["# print the number of unique elements", 0.04672434180672517], ["# create a dictionary to store the rightmost occurrence of each element", 0.04672434180672517], ["# print the unique elements", 0.04672434180672517], ["# iterate over the array and update the dictionary", 0.04672434180672517], ["num", 0.04603789919972154], ["\"\\n\"", 0.045891815423043825], ["prefix", 0.045891815423043825], ["# print the result", 0.04471538248893372], ["# find the minimum cost", 0.04471538248893372], ["# calculate the prefix sum of the character counts", 0.04471538248893372], ["# find the maximum sum divisible by k", 0.04435319121136592], ["# calculate the maximum sum divisible by k for each row", 0.04435319121136592], ["# calculate the cumulative sum of the array", 0.043561919984943714], ["# find the minimum number of insertions", 0.043561919984943714], ["# find the unique solution", 0.04317417059746398], ["# print the solution", 0.04317417059746398], ["# check if the given array is valid", 0.04317417059746398], ["# calculate the prefix sum of q", 0.04317417059746398], ["'c'", 0.04203647551334347], ["'b'", 0.04203647551334347], ["# print the triple", 0.04173398543066555], ["# calculate the minimum number of operations", 0.04173398543066555], ["# create a matrix and fill it with the numbers", 0.04071775341230717], ["# if the matrix is palindromic, print yes and the matrix", 0.04071775341230717], ["# check if the matrix is palindromic", 0.04071775341230717], ["# check if the input is valid", 0.04071775341230717], ["n_a", 0.04071775341230717], ["a2", 0.03735773442750061], ["# print the maximum number", 0.033860023336247165], ["# find the maximum difference between the original number and the number after applying the operation", 0.033860023336247165], ["curr_num", 0.033860023336247165], ["%=", 0.033860023336247165], ["# find any possible string t that satisfies the requirements", 0.03335381435363432], ["# create a dictionary to store the character distances", 0.03335381435363432], ["# iterate over the array b and find the character that is at a distance greater than the current character", 0.03335381435363432], ["is", 0.029994395733767325], ["# calculate the number of segments to apply", 0.02973072389526211], ["# calculate the maximum possible value", 0.02973072389526211], ["tuple", 0.029545522951999886], ["# if there is a spanning tree with the required degree, print yes and the edges of the tree", 0.029335465105237043], ["# find the nodes that are at distance d from the first node", 0.029335465105237043], ["queue", 0.029335465105237043], ["prev", 0.029022208507903872], ["read", 0.02712080823622931], ["'2'", 0.022391024012719363], ["0.5", 0.021284152443431483], ["!=", 0.019522527148341472], ["keys", 0.019422595581852893], ["\"r\"", 0.016142394648421543], ["\"l\"", 0.016142394648421543], ["copy", 0.007258958511277277], ["b3", 0.00672916221601829], ["list", 0.005810184540292614], ["<", 0.004734373416800979], ["for", 0.0011593584026702193], ["3", -0.00106582364994984], [",", -0.0019419604541637404], ["bisects", -0.002959830424763202], ["#print(ar)", -0.004423608751395214], ["join", -0.0049173007515069525], ["-1000000", -0.005563116005136461], ["#print(dp1)", -0.007290476595836002], ["#print(floop)", -0.007521008789346247], ["##print(s1,s2)", -0.007521008789346247], ["\"1 2\"", -0.007932513016165328], ["# print (target, ztba, ztbr, otba, otbr, ttba, ttbr)", -0.008796730034307407], ["'''\n3\n121\n6\n120110\n6\n211200\n'''", -0.008796730034307407], ["mi", -0.008796730034307407], ["na", -0.008847217502790428], ["#!/usr/bin/env python", -0.009603246053454334], ["# sleep early", -0.009986044220801571], ["# sleep normaly", -0.009986044220801571], ["a1", -0.010828177961728951], ["52", -0.011055331609766659], ["object", -0.011055331609766659], ["############################## solution ##############################", -0.011055331609766659], ["\"\"\"\ncodeforces april fools contest 2014 problem f\n\nauthor  : chaotic_iak\nlanguage: python 3.3.4\n\"\"\"", -0.011055331609766659], ["267", -0.011055331609766659], ["51", -0.011055331609766659], ["tup", -0.011126232010272921], ["type", -0.011126232010272921], ["bestone", -0.011126232010272921], ["lambda", -0.01175119447844289], ["#!/usr/bin/env python3", -0.011969435338213513], ["__next__", -0.01345054511523575], ["# ac", -0.01345054511523575], ["__init__", -0.01345054511523575], ["none", -0.013452394055647758], ["12", -0.013755865946876446], ["div", -0.01400171510331179], ["is_inside", -0.01479915212381601], ["'25'", -0.014973478792348017], ["'50'", -0.014973478792348017], ["'75'", -0.014973478792348017], ["orig", -0.015042017578692495], ["fl", -0.015042017578692495], ["# @time    : 2019/3/8 0:18", -0.01602154804515984], ["# @file    : e. k balanced teams.py", -0.01602154804515984], ["# @email   : gilgemesh2012@gmail.com", -0.01602154804515984], ["# @author  : lunafire", -0.01602154804515984], ["5", -0.016103040744924836], ["')'", -0.016427505636508206], ["o3", -0.016689348015409385], ["final", -0.016689348015409385], ["neginf", -0.016689348015409385], ["parent", -0.016689348015409385], ["# i = 1", -0.017495494350538973], ["sym", -0.017694435005580857], ["s_row_str", -0.01809098941074713], ["gcd", -0.01809098941074713], ["\"inf\"", -0.01809098941074713], ["setrecursionlimit", -0.01809098941074713], ["s_row", -0.01809098941074713], ["i_row_list", -0.01809098941074713], ["s_row_list", -0.01809098941074713], ["i_row", -0.01809098941074713], [">>", -0.01809098941074713], ["'p'", -0.019206492106908668], ["'s'", -0.019206492106908668], ["ii", -0.019206492106908668], ["1_000_000_007", -0.020008540342300995], ["ri", -0.020359709970573108], ["randint", -0.020359709970573108], ["random", -0.020359709970573108], ["dd", -0.020359709970573108], ["'''input\n01:02\n03:02\n'''", -0.020359709970573108], ["rd", -0.020359709970573108], ["combinations", -0.020359709970573108], ["permutations", -0.020359709970573108], ["\"%02d:%02d\"", -0.020359709970573108], ["cc", -0.020359709970573108], ["heapq", -0.020359709970573108], ["bisect_left", -0.020359709970573108], ["pp", -0.020359709970573108], ["ccd", -0.020359709970573108], ["bl", -0.020359709970573108], ["-1000000000", -0.021342753247439613], ["inputhandlerobject", -0.022110663219533318], ["getinput", -0.022110663219533318], ["13", -0.022110663219533318], ["inputhandler", -0.022110663219533318], ["15", -0.022110663219533318], ["functools", -0.022170469340644434], ["operator", -0.022170469340644434], ["del", -0.022170469340644434], ["t2", -0.022252464020545842], ["outs", -0.022252464020545842], ["beststwo", -0.022252464020545842], ["floop", -0.022563026368038745], ["#print(cnt)", -0.02315771929872083], ["# -*- coding: utf-8 -*-", -0.023692050511510025], ["#print(l)", -0.02382688418707361], ["# import sys", -0.024939659173575622], ["# import math", -0.024939659173575622], ["#print(arr)", -0.025177224175474282], ["#print('turn on ' + str(optim))", -0.025177224175474282], ["# found a heater", -0.025177224175474282], ["it", -0.025314470572847407], ["sx", -0.025448393235196282], ["1001", -0.02654165250837129], ["913", -0.02670816110887596], ["391", -0.02670816110887596], ["576", -0.02670816110887596], ["562", -0.02670816110887596], ["535", -0.02670816110887596], ["526", -0.02670816110887596], ["517", -0.02670816110887596], ["483", -0.02670816110887596], ["454", -0.02670816110887596], ["1165", -0.02670816110887596], ["378", -0.02670816110887596], ["382", -0.02670816110887596], ["588", -0.02670816110887596], ["121", -0.02670816110887596], ["355", -0.02670816110887596], ["346", -0.02670816110887596], ["319", -0.02670816110887596], ["274", -0.02670816110887596], ["27", -0.02670816110887596], ["265", -0.02670816110887596], ["22", -0.02670816110887596], ["202", -0.02670816110887596], ["58", -0.02670816110887596], ["627", -0.02670816110887596], ["1111", -0.02670816110887596], ["762", -0.02670816110887596], ["922", -0.02670816110887596], ["94", -0.02670816110887596], ["958", -0.02670816110887596], ["985", -0.02670816110887596], ["895", -0.02670816110887596], ["861", -0.02670816110887596], ["852", -0.02670816110887596], ["85", -0.02670816110887596], ["825", -0.02670816110887596], ["778", -0.02670816110887596], ["729", -0.02670816110887596], ["915", -0.02670816110887596], ["728", -0.02670816110887596], ["706", -0.02670816110887596], ["1086", -0.02670816110887596], ["690", -0.02670816110887596], ["663", -0.02670816110887596], ["654", -0.02670816110887596], ["648", -0.02670816110887596], ["645", -0.02670816110887596], ["636", -0.02670816110887596], ["634", -0.02670816110887596], ["666", -0.02670816110887596], ["438", -0.02670816110887596], ["166", -0.02670816110887596], ["val", -0.0269010902304715], ["next", -0.0269010902304715], ["threes", -0.0278155800256823], ["adj", -0.0278155800256823], ["solve", -0.028002350659576406], ["sa", -0.02800343020662358], ["sb", -0.02800343020662358], ["a3", -0.028385518139476207], ["ns", -0.028809738160363002], ["ss", -0.028809738160363002], ["dp1", -0.029161906383344007], ["temp2", -0.029161906383344007], ["r_in", -0.02959830424763202], ["'5'", -0.029946957584696034], ["ck", -0.029946957584696034], ["maxsize", -0.029946957584696034], ["cn", -0.03008403515738499], ["cm", -0.03008403515738499], ["# print()    ", -0.030430959213138396], ["end", -0.03123851008371285], ["''", -0.031748198988105436], ["items", -0.031871798268642795], ["#print(vs)", -0.031871798268642795], ["#print(res)", -0.031871798268642795], ["c", -0.03211418951476253], ["enumerate", -0.03251235778252497], ["remove", -0.03269657720308968], ["maxx", -0.033127181459978526], ["14", -0.03316599482929998], ["allsum", -0.033931190980261705], ["'a'", -0.0341270766108657], ["# query_count = 1", -0.03435895242231036], ["result", -0.03435895242231036], ["string", -0.03435895242231036], ["lf", -0.03449605460594964], ["rb", -0.03449605460594964], ["lr", -0.03449605460594964], ["ans_", -0.03449605460594964], ["adder", -0.034990988701077946], ["_max", -0.034990988701077946], ["ztbr", -0.03518692013722963], ["except", -0.035353291331271804], ["try", -0.035353291331271804], ["counter", -0.0355505651455905], ["mod", -0.0355505651455905], ["i_input", -0.03618197882149426], ["s_list", -0.03618197882149426], ["s_map", -0.03618197882149426], ["18", -0.03711531983210217], ["s2", -0.03861906315194254], ["'('", -0.0386548022097231], ["beststhree", -0.03894181203595523], ["*=", -0.04001708068460199], ["next_int", -0.040351635345707265], ["\":\"", -0.040719419941146216], ["h2", -0.040719419941146216], ["m2", -0.040719419941146216], ["row", -0.041677737260381875], ["you", -0.041677737260381875], ["col", -0.041677737260381875], ["x", -0.04186447325445767], ["closestdiv", -0.04200514530993537], ["eq", -0.04241398872532713], ["ansi", -0.042685506494879226], ["zc", -0.043983650171537034], ["tc", -0.043983650171537034], ["reversed", -0.04412876319560108], ["ar", -0.04423608751395214], ["ar2", -0.04423608751395214], ["itemgetter", -0.04434093868128887], ["cmp_to_key", -0.04434093868128887], ["ba", -0.04434093868128887], ["ab", -0.04434093868128887], ["6", -0.045559985866421175], ["ok", -0.04576750908245967], ["tp3", -0.045821445470528355], ["tp1", -0.045821445470528355], ["r1", -0.045821445470528355], ["two", -0.045821445470528355], ["l2", -0.045821445470528355], ["ntop3", -0.045821445470528355], ["tp4", -0.045821445470528355], ["tp2", -0.045821445470528355], ["r2", -0.045821445470528355], ["one", -0.045821445470528355], ["mp", -0.04631543859744166], ["get", -0.04706089181477319], ["false", -0.0473736121769234], ["new_leaves", -0.047595078096991976], ["leaves", -0.047595078096991976], ["parse_arr", -0.04981407918344842], ["item", -0.04993022110400787], ["o2", -0.05006804404622815], ["'-1'", -0.050354448350948565], ["9", -0.050481852554075494], ["class", -0.051274830158667774], ["ttba", -0.05278038020584445], ["otba", -0.05278038020584445], ["oc", -0.05278038020584445], ["mat", -0.05308330501674258], ["r_out", -0.053276947645737656], ["#\u5546 quotient", -0.05354436497584208], ["#\u4f59\u308a remainder", -0.05354436497584208], ["# n / (blue + red) = quot ...rem", -0.05354436497584208], ["ndp", -0.053718970624486176], ["i_map", -0.0542729682322414], ["s_input", -0.0542729682322414], ["flg", -0.0542729682322414], ["itertools", -0.05437464916227335], ["twos", -0.0556311600513646], ["4.", -0.057533328634213704], ["0.00001", -0.057533328634213704], ["css", -0.05989391516939207], ["# print(\"r\",end='')", -0.06086191842627679], ["popleft", -0.06086191842627679], ["# print(\"l\",end='')", -0.06086191842627679], ["fr", -0.06102334544327954], ["60", -0.06138842425168136], ["ttbr", -0.061577110240151854], ["otbr", -0.061577110240151854], ["ztba", -0.061577110240151854], ["target", -0.061577110240151854], ["dev", -0.06346010412932263], ["leftcounts", -0.06374359653728559], ["vs", -0.06374359653728559], ["value", -0.06374359653728559], ["ansh", -0.06402825974231885], ["w", -0.06420183862741885], ["dp2", -0.06561428936252402], ["cos", -0.06562188118208452], ["30", -0.06562188118208452], ["radians", -0.06562188118208452], ["inf", -0.06571917633561605], ["defaultdict", -0.06637923323751582], ["neg_ps", -0.0665114080219333], ["cmp", -0.0665114080219333], ["pos_ps", -0.0665114080219333], ["o1", -0.06675739206163754], ["cou", -0.06723332692209288], ["buff", -0.06725272557617876], ["add", -0.06819666608533519], ["list_int", -0.06871790484462072], ["segs", -0.06873216820579256], ["pass", -0.0699266637585844], ["area", -0.07000857551655894], ["low", -0.07000857551655894], ["stdin", -0.07041826807915703], ["issubsequence", -0.07070658266254361], ["str2", -0.07070658266254361], ["str1", -0.07070658266254361], ["lengtht", -0.07070658266254361], ["trial", -0.07236395764298852], ["i_list", -0.07236395764298852], ["deque", -0.0729979048146392], ["newm", -0.07520134877371865], ["last_turned", -0.07553167252642286], ["tot", -0.07553167252642286], ["/", -0.07614603449131738], ["correct_s", -0.07682596842763467], ["pre", -0.077151885176889], ["//=", -0.0789475614033646], ["nodes", -0.07932513016165328], ["pop", -0.0793780162812517], ["h1", -0.08143883988229243], ["n", -0.08166132654750634], ["st", -0.08273109668280873], ["ans2", -0.08288721840560428], ["ones", -0.08344674007704692], ["extend", -0.08358592314891909], ["high", -0.08401029061987074], ["k", -0.08622923374528801], ["pointer", -0.08695246989082316], ["en", -0.09025210547215498], ["round", -0.09034407658279642], ["list1", -0.09105867920310254], ["avail", -0.09153501816491934], ["every", -0.09164289094105671], ["minus", -0.09198947894919902], ["mm", -0.09530753674829444], ["collections", -0.0953641102238166], ["rightcounts", -0.09561539480592841], ["dif", -0.09561539480592841], ["countmoreless", -0.09561539480592841], ["sp", -0.09603246053454335], ["db", -0.09801200572318251], ["da", -0.09801200572318251], ["last", -0.09891363457718698], ["p3", -0.10001809666586386], ["last_heated", -0.10070889670189713], ["tmp", -0.10286918023585201], ["query_count", -0.10307685726693108], ["divisors", -0.10465915611019853], ["rfind", -0.10481435154643613], ["la", -0.10529412305084748], ["ind", -0.10613949607299472], ["key", -0.10630913950193407], ["ac", -0.10671376623719807], ["flag", -0.10682394317594372], ["quot", -0.10708872995168416], ["dict", -0.10977972620346481], ["max2", -0.11127827975306513], ["<=", -0.11177743664539631], ["-2", -0.11313006764921801], ["s1", -0.11342871894059624], ["'0'", -0.11378793234610357], ["list2", -0.11382334900387818], ["'yes'", -0.11445912837899602], ["inter", -0.1145536136763209], ["rtest", -0.11506665726842741], ["11", -0.11506665726842741], ["minn", -0.11594513510992488], ["'no'", -0.1168140754238154], ["sorted", -0.1181204162126153], ["chr", -0.11904982654641723], ["ord", -0.11904982654641723], ["nt", -0.11983253064961889], ["fib", -0.12005124205380602], ["inputs", -0.12160864770743327], ["index", -0.12160936939470599], ["slist", -0.12173345784715246], ["slist2", -0.12173345784715246], ["m1", -0.12215825982343866], ["as", -0.12215825982343866], ["t1", -0.12292644809403665], ["g", -0.12416519227183753], ["found", -0.12503321178114565], ["&", -0.12620216211418078], ["b2", -0.1272114056278439], ["b", -0.13032058219136625], ["360", -0.13124376236416904], ["m", -0.13376091666580792], ["else", -0.1351071514048642], ["reverse", -0.13541019643230878], ["n0", -0.1365880188046538], ["staticmethod", -0.13743580968924143], ["@", -0.13743580968924143], ["sep", -0.13743580968924143], ["top3", -0.13746433641158512], ["mn", -0.13798421842379857], ["q", -0.14077185300401], [";", -0.14175819587733093], ["cost", -0.14322209163536576], ["pow", -0.1440498080263196], ["id", -0.14795599626759326], ["p2", -0.15002714499879582], ["continue", -0.15180759510505867], ["\" \"", -0.15372554302036248], ["bb", -0.1538378848642169], ["7", -0.15434922364728657], ["true", -0.157099802172596], ["arr", -0.1578162946559573], ["str", -0.15784399611489816], ["26", -0.1578951228067292], ["==", -0.1604073058030337], ["red", -0.16063309492752625], ["if", -0.16197616617784086], ["import", -0.16341441875989066], ["'1'", -0.16493091424700984], [">=", -0.1652802111716111], ["ucount", -0.16577443681120857], ["ll", -0.1669174196295977], ["max1", -0.1669174196295977], ["h", -0.17237018152909422], ["b1", -0.17260830212420072], ["n_ri", -0.18068815316559284], ["4", -0.18140597433139724], ["main", -0.18234186715583295], ["p", -0.18536303319991637], ["min", -0.19169949230424144], ["//", -0.19258041629501216], ["stk", -0.19713006763809848], ["l1", -0.19761609752182396], ["8", -0.19808362760545403], ["readline", -0.19869367474344676], ["mas", -0.2016999807662786], ["aa", -0.20282773463423587], ["f", -0.20346323989127482], ["' '", -0.2037883501587886], ["from", -0.2059339616064376], ["100", -0.20962714064890392], ["curstreak", -0.20990322693615387], ["answer", -0.20994593220646773], ["im", -0.21205025486463513], ["seen", -0.2141083566230811], ["sys", -0.21603023705875168], ["z", -0.22115460038517196], ["pretty_indexes", -0.22255655950613026], ["optim", -0.22659501757926853], ["done", -0.22706976207000504], ["-", -0.2313940133969848], ["k1", -0.23215462795911881], ["e", -0.23681291601926424], ["self", -0.24429171304732133], ["l", -0.24627006458516018], ["__starting_point", -0.24823786375565962], ["line", -0.24907039591724206], ["%", -0.2491543026068755], ["lo", -0.2500664235622913], ["rem", -0.25808808954622225], ["max", -0.26122660637417483], ["seq", -0.2637696922058319], ["blue", -0.26772182487921037], ["k2", -0.2698027959924845], [">", -0.273000351007451], ["pos", -0.27708980054322263], ["start", -0.2830110832986745], ["nxt", -0.284539559025378], ["^", -0.28462214669078717], ["kk", -0.29111641158774515], ["while", -0.2916324057685638], ["temp", -0.30639499396164727], ["cur", -0.30733109891885635], ["odd", -0.3552193740288964], ["elif", -0.3721322815354438], ["*", -0.3747582117490843], ["point", -0.3766392644514866], ["cnt", -0.37948816337667224], ["return", -0.38876659524489754], ["-1", -0.3975153692612047], ["rec", -0.40876503187212215], ["-=", -0.410624307424317], ["0", -0.41132562163523134], ["def", -0.4590957166976294], ["+", -0.4722988097327957], ["break", -0.4736040908866179], ["d", -0.6451641495576709], [":", -0.6529999386009293], ["1", -0.6778088442805363], ["#INDENT#", -0.6983779917345513], ["#DEDENT#", -0.6983779917345513], ["j", -0.7480050682853802], ["2", -0.8967171829992721], ["]", -0.9389945197336899], ["[", -0.9500169918955632], ["ans", -1.121249357158359]]}