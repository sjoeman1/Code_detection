{"columns": ["feature_names", "importances"], "data": [["the", 3.874656151149699], ["of", 1.7738036500826095], ["= map ( int", 1.471202630277714], ["= map", 1.4569498166059163], ["= map (", 1.4569498166059163], ["( ) ) #NEWLINE#", 1.234524193269254], ["number", 1.1016988463205277], ["number of", 1.0745560862180636], ["calculate", 1.0620464371721505], ["(", 1.061675376934015], ["calculate the", 1.0451550658782143], ["( )", 1.0154638294429317], [")", 0.978804072639562], [".", 0.9054022902417633], ["#NEWLINE# calculate", 0.8725850704453852], ["#NEWLINE# print", 0.865993526123542], ["#NEWLINE# calculate the", 0.8601173965315039], ["print the", 0.85191901473215], ["( ) )", 0.8244324928373793], [") .", 0.821859078039339], ["split ( ) )", 0.7847652031714705], ["int", 0.783673830243232], ["( ) .", 0.7563536506035432], [") #NEWLINE# calculate", 0.7549859855206679], ["( int", 0.7517037353349747], [") #NEWLINE# calculate the", 0.7440605081923358], ["is", 0.7272185348594966], ["input ( ) .", 0.7248829643424082], ["int , input", 0.7135536786124823], ["( int , input", 0.7135536786124823], ["int , input (", 0.7135536786124823], ["the number", 0.7131714309239107], ["the number of", 0.6872468308611663], ["map ( int", 0.6795124567479203], ["map ( int ,", 0.6795124567479203], ["( int ,", 0.6795124567479203], ["to", 0.6768454477893993], ["int ,", 0.6756746989949226], [", input (", 0.6755381791973735], [", input", 0.6728899503364375], [", input ( )", 0.6698009437267863], ["3 #NEWLINE#", 0.6586632318547482], ["( n )", 0.6582592341776989], ["range", 0.6531964254786388], ["range (", 0.6513572117910763], ["in range", 0.6473686329080616], ["in range (", 0.6473686329080616], ["split ( )", 0.6396861730400523], [". split ( )", 0.6396861730400523], ["n )", 0.639406252118727], [") ) #NEWLINE#", 0.6363053476326956], ["check if", 0.6319582962039751], ["lower ( )", 0.6315357737046495], [". lower ( )", 0.6315357737046495], [". lower", 0.6315357737046495], [". lower (", 0.6315357737046495], ["if the", 0.6220450042989292], ["the minimum", 0.6179502286889677], ["minimum", 0.6179502286889677], [") ) #NEWLINE# calculate", 0.6173656372336929], ["lower", 0.6168032455274268], ["k = map (", 0.6123471930260346], [", k = map", 0.6123471930260346], ["k = map", 0.6123471930260346], ["map", 0.6123368586840713], ["operations", 0.6119787650491124], ["lower (", 0.6075759308758832], ["print", 0.605750488372973], ["map (", 0.6033710633395346], [") ) #NEWLINE# a", 0.5833693516034577], ["maximum", 0.5784884843463753], ["range ( n )", 0.5744194827282411], [") #NEWLINE#", 0.5727021558893082], ["int ( (", 0.5601663918844019], ["the maximum", 0.5600660886888621], ["( n ) :", 0.5593902399786426], ["#NEWLINE# print the", 0.5571073758028657], ["#NEWLINE# for _ in", 0.5567380623552194], ["#NEWLINE# for _", 0.5567380623552194], ["y", 0.5473774812075419], ["#NEWLINE# a = list", 0.5436940285242347], ["#NEWLINE# print (", 0.5399020091189787], ["check", 0.5361795667166456], ["-1 ) #NEWLINE# #DEDENT#", 0.534530592853842], ["= int", 0.5331591119089588], ["= int (", 0.5331591119089588], ["_ in range", 0.5315196845542858], ["for _ in range", 0.5315196845542858], ["_ in range (", 0.5315196845542858], ["0 #NEWLINE# for i", 0.530154770486085], ["find", 0.5287510088369051], ["a = list (", 0.5257653220364352], ["a = list", 0.5257653220364352], ["_ in", 0.5249107435515517], ["for _ in", 0.5249107435515517], ["for _", 0.5249107435515517], ["find the", 0.5187977713959648], [") . split (", 0.5173991125566964], [") . split", 0.5173991125566964], ["n ) :", 0.516521595335457], ["( ) . strip", 0.5159700853079331], [") . strip", 0.5159700853079331], [") . strip (", 0.5159700853079331], [". split", 0.5123326890270495], [". split (", 0.5123326890270495], [". strip", 0.5103849297749773], ["strip (", 0.5103849297749773], [". strip ( )", 0.5103849297749773], ["strip", 0.5103849297749773], [". strip (", 0.5103849297749773], ["strip ( )", 0.5103849297749773], ["split (", 0.507509175129538], ["] #NEWLINE# for _", 0.5071096186583972], ["input (", 0.5064661200200088], ["split", 0.5057334339563195], ["( 1 ,", 0.5047828918913522], ["num", 0.49978203766344487], ["range ( 1 ,", 0.4995250576956784], ["input ( )", 0.49780926293265004], ["and", 0.49516916756054086], ["( ) . split", 0.49217043975925295], ["that", 0.4861932791557175], ["n ) : #INDENT#", 0.48605089218866354], ["in range ( n", 0.47978968022049595], ["input", 0.47680132625975], ["#DEDENT# print the", 0.4761541033255618], ["check if the", 0.4759667720685596], ["range ( n", 0.4750530142833859], ["of the", 0.4735267877921086], ["range ( 1", 0.47240218358056346], ["= int ( input", 0.47131977041347867], ["set", 0.47039979326533415], ["strip ( ) #NEWLINE#", 0.4680416946996244], ["int ( input", 0.46723940503939626], ["int ( input (", 0.46723940503939626], [") #NEWLINE# a", 0.4670523199565262], ["+ 1 ) :", 0.4667805438666341], ["( n", 0.4657582337410891], ["_", 0.4645454067792302], ["distance", 0.46424759658504383], ["set (", 0.4606701746983521], ["( input (", 0.4605511099052098], ["1 ) :", 0.4562445653572447], ["1 ) : #INDENT#", 0.45421084353753555], ["( input ( )", 0.4534564739434864], ["print ( -1", 0.44809373225048055], ["print ( -1 )", 0.44795890325192234], ["( input", 0.4479532602494366], [") #NEWLINE# print the", 0.44267339249002513], ["#NEWLINE# a", 0.44167602936394834], ["1 , int", 0.4357591098100348], ["1 , int (", 0.4357591098100348], ["** 0.5 ) +", 0.4331790834754295], ["sort ( )", 0.43262346222893217], [". sort ( )", 0.43262346222893217], ["sort ( ) #NEWLINE#", 0.43262346222893217], [". sort", 0.4255655294117437], [". sort (", 0.4255655294117437], ["\"no\" )", 0.4239161439106432], ["print ( \"yes\"", 0.42059830624262246], ["not", 0.4202474628201243], ["in range ( 1", 0.41883131452848393], ["sort", 0.4174452041311784], ["( -1 ) #NEWLINE#", 0.4150715842931214], ["a [ i", 0.41286639381012746], ["result", 0.41267304869465116], [", m = map", 0.4123956021216632], ["m = map", 0.4123956021216632], ["m = map (", 0.4123956021216632], ["\"no\" ) #NEWLINE# #DEDENT#", 0.41237280013976585], ["( -1 )", 0.41171541999446426], ["( ) . lower", 0.41104088002179423], [") . lower (", 0.41104088002179423], [") . lower", 0.41104088002179423], ["0 #NEWLINE# for", 0.40961782071759506], ["\"no\" ) #NEWLINE#", 0.40877978056954084], ["0.5 ) +", 0.40855961934177765], ["0.5 ) + 1", 0.40855961934177765], ["-1 ) #NEWLINE#", 0.40813511372081696], ["#INDENT# print ( -1", 0.40575580315868437], ["( 1 , int", 0.40562035147898595], ["int (", 0.40488945757095035], ["[ i", 0.4041120359814311], ["a [", 0.40241734161584886], ["( \"yes\"", 0.4018564035674212], ["[ i ]", 0.4011690616787279], ["3 #NEWLINE# n", 0.4005261019530206], [", int (", 0.3995674811666578], ["= 0 #NEWLINE# for", 0.39754358465667367], ["moves", 0.3929119063180944], [") #NEWLINE# a .", 0.3914153577155518], ["#NEWLINE# for i in", 0.3912409554091372], ["lower ( ) #NEWLINE#", 0.39113598374024455], ["** 0.5 )", 0.39067004995196364], ["#NEWLINE# a .", 0.3903886620479239], [", int", 0.3891101321465608], ["a [ i ]", 0.3877100175752722], ["not in", 0.3862884604580253], ["#NEWLINE# check", 0.384108165186957], ["#NEWLINE# check if", 0.384108165186957], ["\"no\"", 0.3792284398958155], ["( s )", 0.37688444857025066], ["sort (", 0.3752407790366153], ["np .", 0.3734478371110798], ["( -1", 0.3730358480080849], ["pairs", 0.37228302245722605], ["#NEWLINE# find", 0.370393797028629], ["#NEWLINE# for", 0.37034276358990004], ["can", 0.3699596280803498], ["i ]", 0.36911153618001324], ["0.5 )", 0.36709777890936474], ["#NEWLINE# find the", 0.36622947390413063], ["[ ] #NEWLINE# for", 0.3646538335316734], ["or", 0.3643286115574073], ["#NEWLINE# for i", 0.3630340548067484], ["each", 0.35967494696723695], ["#NEWLINE# a . sort", 0.3590274187501241], ["\"yes\"", 0.3573481786753669], ["board", 0.3535311461830672], ["calculate the minimum", 0.35281571254416677], ["( m )", 0.3515521186551038], ["( 1", 0.3494059203589478], ["** 0.5", 0.3489984802557498], ["sum ( a", 0.3485952232353243], ["n = int", 0.34584484461360404], ["n = int (", 0.34584484461360404], ["print ( *", 0.3449284601493913], ["np", 0.34414906062221823], ["digit", 0.34213723061018336], [") #NEWLINE# find", 0.3414415526993746], ["boxes", 0.3387516490552718], [", b = map", 0.3386665038322386], ["b = map (", 0.3386665038322386], ["b = map", 0.3386665038322386], ["3", 0.338258412705773], ["length", 0.33810828441783297], [") #NEWLINE# find the", 0.3371419258915709], ["calculate the number of", 0.3326797305277232], ["calculate the number", 0.3326797305277232], ["#INDENT# print ( \"no\"", 0.32986306639630775], ["#INDENT# print ( \"yes\"", 0.3285911644565393], ["tiles", 0.32832463806942375], ["neighbor", 0.3263882846300664], ["s )", 0.32595070608158183], ["a . sort", 0.3250757216517683], ["a . sort (", 0.3250757216517683], [") #NEWLINE# g", 0.3223708509224681], ["graph", 0.3215644939726063], ["#DEDENT# #DEDENT# print", 0.31997727375653034], ["m )", 0.31941188184011066], ["#NEWLINE# calculate the minimum", 0.31136125203358656], ["name", 0.3105098179033973], ["#NEWLINE# #DEDENT# #DEDENT# print", 0.310505770573389], ["days", 0.3082913579376194], ["card", 0.3070096995349172], ["#NEWLINE# x", 0.30594770242390784], ["input ( ) )", 0.30431256061671885], ["board [", 0.3027574079170067], ["minimum number", 0.30229469047593344], ["minimum number of", 0.30229469047593344], ["the minimum number of", 0.30229469047593344], ["the minimum number", 0.30229469047593344], ["s .", 0.300424270747716], ["( \"no\" )", 0.2994000312021825], ["( \"no\" ) #NEWLINE#", 0.2994000312021825], ["print ( \"no\" )", 0.2994000312021825], [") #NEWLINE# check", 0.2987740892370762], [") #NEWLINE# check if", 0.2987740892370762], ["cost", 0.2976987934510168], ["0.5", 0.2933103567305359], ["for i in range", 0.29293499279251234], ["i in range (", 0.29293499279251234], ["i in range", 0.29293499279251234], ["print ( int (", 0.29238343357301294], ["print ( int", 0.29238343357301294], ["visited", 0.2912226929733193], ["print ( \"yes\" )", 0.2907895818243364], ["print ( \"no\"", 0.29071502621571543], ["( \"no\"", 0.29071502621571543], ["#NEWLINE# print ( *", 0.28865374681735034], ["= sum ( a", 0.2873920107930955], ["#NEWLINE# calculate the number", 0.2872336484482519], ["int ( ( n", 0.2867448854816194], ["maximum number", 0.286154307147549], ["#NEWLINE# #DEDENT# print the", 0.2851765226743011], ["#DEDENT# calculate", 0.28412960836896045], ["#NEWLINE# check if the", 0.2825012713759839], ["( m", 0.28216287163681797], ["#DEDENT# #DEDENT# print the", 0.28111257916475524], ["( \"yes\" ) #NEWLINE#", 0.28046797067635887], ["( int (", 0.27920294939658424], ["knights", 0.27679411595590925], ["n ** 0.5 )", 0.27670906073175106], ["s", 0.2763768881606417], ["range ( m )", 0.27514387518870104], ["= [ ]", 0.2742867334817982], ["#NEWLINE# g", 0.27395657560018977], [") ) #NEWLINE# if", 0.27385881875918827], ["#NEWLINE#", 0.2733797895343906], ["[ ] #NEWLINE#", 0.2727142146248795], ["\"yes\" ) #NEWLINE#", 0.2717498492504114], ["valid", 0.271376720328244], ["( \"yes\" )", 0.27095288976984416], ["total_cost", 0.27089114220311616], ["in", 0.2706598325879096], ["the maximum number", 0.2697085952102423], ["be", 0.26968119924282047], ["mappings", 0.2693697706984133], ["#DEDENT# calculate the", 0.2688787044500288], ["sum ( a )", 0.267855697748132], ["3 #NEWLINE# n =", 0.26733498553178797], ["s . count", 0.2660027602038763], ["s . count (", 0.2660027602038763], ["create", 0.26549352753289895], ["-1 )", 0.26463242199005027], ["l , r", 0.26366680824200894], ["\"yes\" )", 0.2623252791454168], ["= {", 0.2622125333015222], [") ) #NEWLINE# s", 0.2614345080599279], ["( n **", 0.2612721386668107], ["( n ** 0.5", 0.26017968514268164], ["n ** 0.5", 0.26017968514268164], ["[ ]", 0.25947153491642966], ["length of", 0.25832788814852237], [") ) #NEWLINE# p", 0.2576281079083683], ["+ 7 )", 0.25728140946329], ["read", 0.25718925715503943], ["s [ i", 0.2570349267488385], ["position", 0.25689176118628143], ["char", 0.2568018013803949], [") [", 0.25629593207759394], ["= [ ] #NEWLINE#", 0.2561519900491739], ["print (", 0.25602405755074353], ["stones", 0.25601238992891817], [") ) #NEWLINE# find", 0.2546898384641584], ["abs (", 0.25460788261454653], ["the string", 0.25139600651934246], ["maximum number of", 0.24937190488279154], ["9 + 7 )", 0.24746538620285616], ["exit", 0.24623887508765063], ["#NEWLINE# x =", 0.2459001721191571], ["the result", 0.24562723686815632], ["can be", 0.24548612507431342], [", r", 0.24514972949083114], ["#NEWLINE# #DEDENT# calculate", 0.2446541934421996], ["int ( n **", 0.24423330810031102], ["n , m", 0.24377508084973776], ["#NEWLINE# #DEDENT# calculate the", 0.24265954833925263], ["are", 0.24239489851038726], ["s = input (", 0.24130927781595018], ["s = input", 0.24130927781595018], ["exit (", 0.24119374439744717], ["exit ( )", 0.24119374439744717], ["exit ( ) #NEWLINE#", 0.24119374439744717], ["= int ( (", 0.2387574368964369], ["} #NEWLINE#", 0.2384769760829453], ["#NEWLINE# print ( m", 0.23846691490276178], ["calculate the maximum", 0.2384550066790149], ["length of the", 0.237666055725494], ["min_diff", 0.23671866845933612], ["range ( m", 0.23580260550882676], ["( *", 0.2353892039019362], ["string", 0.23224779091093664], ["the maximum number of", 0.23224498494032167], ["( ) [", 0.23145242116226128], ["range ( i", 0.23095939642389104], ["1 #NEWLINE# #DEDENT# #DEDENT#", 0.23050661300450706], [") #NEWLINE# exit (", 0.23039559833664322], ["#NEWLINE# exit (", 0.23039559833664322], ["#NEWLINE# exit ( )", 0.23039559833664322], [") #NEWLINE# exit", 0.23039559833664322], ["#NEWLINE# exit", 0.23039559833664322], ["#DEDENT# check", 0.23004427395290447], ["create a", 0.22951839874411037], ["( int ( (", 0.2280040438503649], ["n =", 0.22780789536655494], ["}", 0.22705734723399779], ["{", 0.22705734723399779], ["#NEWLINE# x = int", 0.2264445538935847], [") #NEWLINE# for _", 0.22644052043744364], ["damage", 0.22625824224941712], ["in range ( m", 0.22595398501108743], ["current_position", 0.22592946180777967], ["\"yes\" ) #NEWLINE# #DEDENT#", 0.2253107853027072], ["#NEWLINE# calculate the maximum", 0.22512774503578056], ["false #NEWLINE# #DEDENT# #DEDENT#", 0.22510307070330138], ["print ( \"yes\" if", 0.2243903622421202], ["( \"yes\" if", 0.2243903622421202], ["m ) :", 0.2243291884340922], [") #NEWLINE# a =", 0.22398628467026083], ["#NEWLINE# read", 0.22327620654548483], ["} #NEWLINE# for", 0.22264937521766162], ["split ( ) [", 0.22183851577118693], ["y_max", 0.22172091380726436], ["m ) : #INDENT#", 0.22016285479148584], ["] [ c", 0.21986891948163592], ["] [ c ]", 0.21986891948163592], [", y = map", 0.21922456120170805], ["y = map (", 0.21922456120170805], ["y = map", 0.21922456120170805], ["s (", 0.21856538493058147], ["else \"no\" )", 0.2180327223075143], ["prime", 0.21787767651525006], ["found", 0.21677926059871105], ["sum", 0.2162472178164898], ["r ]", 0.21598010640469223], ["#DEDENT# check if", 0.21588477242952758], ["range ( len (", 0.21586801668284952], ["\"yes\" if", 0.21467069319077625], ["#NEWLINE# create", 0.21433379226408322], ["r ,", 0.21430568575592893], ["k = int (", 0.21176591001837258], ["k = int", 0.21176591001837258], ["rolls", 0.21100470023024917], ["\"\"", 0.21100119643141652], [": i", 0.21075144094745812], ["#NEWLINE# a =", 0.21056120734995956], ["n ,", 0.21038127817984226], ["\"(\"", 0.2096447834267194], ["#NEWLINE# #DEDENT# elif i", 0.2094934815969063], ["1 , n +", 0.20934184010589163], ["in range ( len", 0.20922719234246248], ["range ( len", 0.20922719234246248], ["max_length", 0.2088259347259265], ["else \"no\"", 0.20863574689422154], ["'s", 0.2081400766823547], ["abs", 0.20799681006737505], [", int ( n", 0.20792648671241318], ["else : #INDENT# print", 0.20789428166846427], ["print ( m", 0.20771246488750317], ["y =", 0.20704793626756965], ["[ r ] [", 0.20601873211775912], ["r ] [", 0.20601873211775912], ["the first", 0.20596271112949768], ["( s ) -", 0.205792396143728], [") #NEWLINE# create", 0.20561248443024777], ["#NEWLINE# if", 0.20525955275684032], ["int ( n", 0.20486486244519342], [". floor (", 0.20475239079878166], [". floor", 0.20475239079878166], ["math . floor", 0.20475239079878166], ["math . floor (", 0.20475239079878166], ["in range ( i", 0.20438748644280355], ["graph [", 0.20415601322020493], ["line1", 0.2035547127097563], ["line2", 0.2035547127097563], ["elif i", 0.2034106860105529], ["#DEDENT# elif i", 0.2034106860105529], ["in the", 0.20324093194366413], ["float (", 0.20320813145120478], ["append ( int (", 0.20268625917800384], ["append ( int", 0.20268625917800384], [". append ( int", 0.20268625917800384], ["print the result", 0.20259119649256196], ["print ( x", 0.20215298865627337], ["sequence", 0.20207967616421882], ["character", 0.20199176312282702], ["i : i +", 0.2016386089107567], ["i : i", 0.2016386089107567], ["[ i : i", 0.2016386089107567], ["subsequence", 0.2010842806879266], ["x_1", 0.20083657959622744], ["s ) - 1", 0.20081383689212864], ["equal", 0.20078579781797265], [", int ( (", 0.20050942717045958], [") #NEWLINE# s =", 0.20014431081862943], ["print the minimum", 0.19966177313690342], ["calculate the minimum number", 0.19956642224410573], ["1 ,", 0.19929724598292364], ["a )", 0.1992046554716647], ["= np .", 0.19865235873669473], ["= np", 0.19865235873669473], ["( set (", 0.19835891189179922], ["( set", 0.19835891189179922], ["max_sum", 0.19805590228042036], ["= str", 0.1979399786638324], ["= str (", 0.1979399786638324], ["== 0 and", 0.19760361767049042], ["store", 0.196922785375269], ["= int ( sys", 0.19681561441319523], ["substring", 0.19650703061518346], ["( a )", 0.19631151349638998], ["the result #NEWLINE#", 0.19590598484652275], ["else \"no\" ) #NEWLINE#", 0.19544607150620635], ["min_cost", 0.19528691994095965], ["blocks", 0.19525756188154708], ["a [ 0", 0.1944371640021796], ["result #NEWLINE#", 0.19357434139643387], ["h_diff", 0.193390804115161], ["k =", 0.19190599210214163], ["3 #NEWLINE# n ,", 0.19173546106311187], [") #NEWLINE# print", 0.1910171018257468], ["\")\"", 0.19031426672801455], ["balanced_brackets", 0.1903059065180369], ["== board [", 0.19022147956055643], ["== board", 0.19022147956055643], ["] == board", 0.19022147956055643], ["] == board [", 0.19022147956055643], [") ) #NEWLINE# x", 0.19006991671905715], ["expression", 0.18996878504460984], ["== 0 or", 0.18983818146358108], ["s ) -", 0.18943779857646237], ["( s ) :", 0.18941035859691432], ["winner", 0.18862910057185428], ["store the", 0.18844562916195795], ["str (", 0.18836431762814806], ["#DEDENT# find", 0.18813724096415968], ["vectors", 0.1874364648129535], ["array", 0.18707432096031643], ["the answer", 0.186965337263977], ["int ( math", 0.186530179194284], ["int ( math .", 0.186530179194284], ["distinct_strings", 0.18608396795871507], ["#DEDENT# print", 0.18588401258771511], ["[ i :", 0.1855177393982916], ["x = map (", 0.18456046940769658], ["x = map", 0.18456046940769658], [", x = map", 0.18456046940769658], ["to store", 0.1841577139566926], ["( num", 0.18387845738988157], ["time", 0.18376514797867297], ["dx", 0.18349839200945692], ["dy", 0.18349839200945692], ["int ( sys", 0.1834685086308209], ["int ( sys .", 0.1834685086308209], ["a_i", 0.18339672122077808], [") #NEWLINE# p", 0.18323394022164474], ["[ [ int (", 0.18314737636150086], ["[ [ int", 0.18314737636150086], ["dictionary", 0.18286319034728296], ["print the number", 0.18225046183122195], ["print the number of", 0.18225046183122195], ["print the maximum", 0.18201019494109022], ["( len (", 0.18185797230391665], ["#DEDENT# find the", 0.18168203365557373], ["= [ [ int", 0.18144438432338095], [">= 2", 0.18130772035938925], [") #NEWLINE# #DEDENT# else", 0.18123347993698963], ["line2 [", 0.1809375224086723], ["line1 [", 0.1809375224086723], ["== s", 0.18091435116773705], ["#DEDENT# #DEDENT# print (", 0.1805353220220035], ["number of moves", 0.18053273075162415], ["of moves", 0.18053273075162415], ["l ,", 0.1803183531580492], ["read the", 0.18031137640468184], ["x and", 0.17952779091488347], ["s_1", 0.1790370523066803], ["string #NEWLINE#", 0.17902440702341219], ["s = map (", 0.1776849629447536], ["s = map", 0.1776849629447536], [", s = map", 0.1776849629447536], [") #NEWLINE# x", 0.1775722330157425], ["float ( 'inf' )", 0.17756478506361476], ["float ( 'inf'", 0.17756478506361476], ["** 9 + 7", 0.17750090919715591], ["9 + 7", 0.17750090919715591], ["n **", 0.17727179927185394], ["hours", 0.17714528120105014], ["rated", 0.17713295155024217], ["n , m =", 0.17674350702417108], ["#NEWLINE# #DEDENT# find", 0.17660488360887497], [") #NEWLINE# s", 0.1764728399930852], ["area", 0.17625199257891622], ["( len", 0.17612229820726683], ["[ r ]", 0.17612062574509102], [") ) #NEWLINE# h", 0.17577030257673287], ["s ) :", 0.175713273355638], ["'.'", 0.17559572378889157], ["#NEWLINE# create a", 0.17531693892309413], ["set ( s", 0.17489720957312208], ["segments", 0.17444154151285424], [", n +", 0.17416968964913285], [", n + 1", 0.17416968964913285], ["* 2 #NEWLINE#", 0.17394423338395595], ["= false #NEWLINE# #DEDENT#", 0.17368962730901275], [". splitlines ( )", 0.17365679590856603], ["splitlines", 0.17365679590856603], ["splitlines (", 0.17365679590856603], ["splitlines ( )", 0.17365679590856603], [". splitlines (", 0.17365679590856603], [". splitlines", 0.17365679590856603], ["max_num", 0.17364837421552293], ["y +=", 0.1736366939930935], ["that can", 0.17358959441591648], ["elements", 0.17333815916744033], ["( sys", 0.1726744945851588], ["( sys .", 0.1726744945851588], ["( sys . stdin", 0.1726744945851588], ["( ) #NEWLINE# calculate", 0.1726522708675353], ["#NEWLINE# s = input", 0.17251676242335662], [") + 1", 0.17249622369267717], ["print the result #NEWLINE#", 0.17231981741590324], ["#NEWLINE# #DEDENT# check if", 0.1722084358007624], ["#NEWLINE# #DEDENT# check", 0.1722084358007624], [": #INDENT# y +=", 0.17195637499361974], ["#INDENT# y +=", 0.17195637499361974], ["prefix_sum", 0.17194602701442685], ["the answer #NEWLINE#", 0.1718964634594873], ["{ } #NEWLINE# for", 0.17147567242415834], ["#NEWLINE# c", 0.1709829687795047], ["no", 0.1706040001683411], ["( np .", 0.1705878579806888], ["#NEWLINE# #DEDENT# find the", 0.170016783816902], ["( operations", 0.16976651306569487], [") #NEWLINE# create a", 0.1696516698678162], ["( 1 , n", 0.1695084268318015], ["if s [ i", 0.16949071032787338], ["( tiles", 0.1688457561563533], ["to store the", 0.168835378650407], [") + 1 )", 0.16845137363798182], ["x , y", 0.16816323500393046], ["1 <=", 0.1677855914089628], ["longest", 0.16732872472496965], ["the longest", 0.16732872472496965], [") #NEWLINE# def", 0.16725381097050673], ["( s", 0.16711152899192874], ["( m ) :", 0.16708410641461058], ["% ( 10 **", 0.16670769905560812], ["% ( 10", 0.16670769905560812], ["#INDENT# res +=", 0.16609892530495374], [": #INDENT# res +=", 0.16609892530495374], ["that can be", 0.164638769095998], ["s ) : #INDENT#", 0.16436613230831149], ["floor (", 0.1640772119378853], ["n", 0.16396690993468113], ["r ] [ c", 0.16395462320263848], ["( np", 0.1637130804124216], ["} #NEWLINE# for i", 0.16367206931305353], ["1 #NEWLINE# print", 0.16363087650705532], [") ) #NEWLINE# g", 0.1632676768258733], ["[ r", 0.16277461440917498], ["set ( a", 0.16268160644143437], ["i #NEWLINE#", 0.1624223308043022], ["is a", 0.1619776769911355], ["prefectures", 0.16177182965137527], ["#NEWLINE# print the result", 0.1614729185988976], ["abs ( a", 0.16139384013443028], ["res +=", 0.1613185744190166], ["i :", 0.16118496601383248], ["a [ 0 ]", 0.16098189503818874], [") print", 0.16085901838902916], ["find the maximum", 0.16084436617280556], ["chr ( n", 0.1607744513000024], ["chr ( n -", 0.1607744513000024], ["floor", 0.16065475444781044], ["] [ 0", 0.16049946262213902], ["and y", 0.16035751114467678], [") ) #NEWLINE# check", 0.16030361593518094], ["#NEWLINE# print ( \"yes\"", 0.16028980824716063], ["base", 0.15960300541753603], ["answer #NEWLINE#", 0.1595413490593594], ["and the", 0.15942619120367382], ["operations )", 0.15908977344733996], ["#NEWLINE# p = list", 0.15906937845487398], ["p = list", 0.15906937845487398], ["p = list (", 0.15906937845487398], ["with", 0.15852360123442397], ["= a [", 0.15823337925714165], ["( 'inf'", 0.15753677457510032], ["'inf' )", 0.15753677457510032], ["'inf'", 0.15753677457510032], ["( 'inf' )", 0.15753677457510032], ["problems", 0.15721631797958888], ["stdin . read (", 0.15704718350895308], ["0 ] ) )", 0.1570402587952416], ["l [ i ]", 0.1569309368981478], ["l [ i", 0.1569309368981478], ["import math #NEWLINE# n", 0.15685948742909528], ["math #NEWLINE# n", 0.15685948742909528], ["print the answer", 0.15660017682069174], ["#DEDENT# check if the", 0.15646355132691206], ["0 or", 0.15643849501392101], [". stdin . read", 0.15639950208332282], ["+ 7", 0.15637660644612802], ["#NEWLINE# b = list", 0.15627889255767746], [") and", 0.15587001921970176], ["0 ] [", 0.15577914732293724], ["[ 0 ] [", 0.15577914732293724], ["integers", 0.15565451312929324], [") **", 0.1556383850869061], ["the total", 0.154887783239025], ["of each", 0.15444344854141642], ["print the answer #NEWLINE#", 0.15407943234639546], ["2 ) #NEWLINE# print", 0.15360645023792466], ["rolls [", 0.1534579638038176], ["rolls [ i", 0.1534579638038176], ["calculate the maximum number", 0.15341853945231898], ["append ( list (", 0.15335938378017994], ["append ( list", 0.15335938378017994], [". append ( list", 0.15335938378017994], [": i +", 0.15313537304814973], ["y_1", 0.15303614051699893], ["ps", 0.15263173727226403], ["#NEWLINE# read the", 0.15252753095702945], ["for each", 0.15236001248280653], ["% 3 == 0", 0.15231024784516106], ["3 == 0", 0.15231024784516106], ["% 3 ==", 0.15231024784516106], ["] [ 0 ]", 0.152239831543444], ["[ i ] -", 0.1521025170765241], ["s =", 0.15191311690126436], ["the length", 0.15185871959543035], ["the length of", 0.15185871959543035], ["2 #NEWLINE# print", 0.15166366122621092], ["the sequence", 0.15144852536772443], ["set ( a )", 0.15144469340955596], ["i ] #NEWLINE#", 0.15137285333147513], [", print", 0.1512782888526274], ["( operations )", 0.15098546333372315], ["( m ) ]", 0.15050605576238485], ["m ) ]", 0.15050605576238485], ["det", 0.14939376018877884], ["an", 0.14938735611785708], ["sum (", 0.14937623556967475], ["sum ( a [", 0.14935318855261448], [", y", 0.14898151960816827], ["#INDENT# if a [", 0.14880505041641381], ["] not", 0.14854083205850097], ["] not in", 0.14854083205850097], ["#NEWLINE# c .", 0.1476455678493419], ["stdin . read", 0.1476006050431419], ["range ( i ,", 0.14754190267035763], ["( 10 ** 9", 0.14754080414333584], [": check if", 0.14740182946837216], ["s_2", 0.1472536763293364], ["= set", 0.14645072009784238], ["= set (", 0.14645072009784238], ["create a dictionary to", 0.146391546713808], ["dictionary to store", 0.146391546713808], ["dictionary to", 0.146391546713808], ["a dictionary to", 0.146391546713808], ["a dictionary to store", 0.146391546713808], ["create a dictionary", 0.146391546713808], ["a dictionary", 0.146391546713808], ["str ( n )", 0.14631660469738603], ["#DEDENT# print ( x", 0.14623196587575524], ["len ( set", 0.14619748760522208], ["len ( set (", 0.14619748760522208], ["+ chr ( n", 0.14615859209091128], [") print (", 0.14612225706293744], ["over", 0.14609815838517645], ["( p", 0.14594130464706948], [", m", 0.14593539308673653], [", c = map", 0.14583245127128378], ["c = map", 0.14583245127128378], ["c = map (", 0.14583245127128378], ["for i in", 0.1457175686776854], ["{ } #NEWLINE#", 0.14570276133800247], ["= { }", 0.14570276133800247], ["= { } #NEWLINE#", 0.14570276133800247], [". join ( [", 0.14569361590291688], ["join ( [", 0.14569361590291688], ["0 : #INDENT# print", 0.1452738888512413], ["= s . count", 0.1451393559455899], ["#NEWLINE# if the", 0.1451085180785846], ["p .", 0.14507880249156802], ["g", 0.1449398975523535], [") #NEWLINE# g =", 0.14474449374112228], ["false #NEWLINE# #DEDENT#", 0.14472494692392024], ["= false #NEWLINE#", 0.14461898757997044], ["7 ) #NEWLINE#", 0.1445104392647628], ["if s [", 0.14437134920231168], ["divisor", 0.1443276496402594], ["+ 7 ) )", 0.14421892636171973], ["r , c", 0.14421819964556393], ["9 +", 0.14338266715365802], ["10 ** 9 +", 0.14338266715365802], ["** 9 +", 0.14338266715365802], ["files", 0.14305525342514283], ["sum of", 0.14267424749843682], [": check", 0.14259757464691683], ["#NEWLINE# operations", 0.14257025866744788], [", k =", 0.1425406918240132], ["or a", 0.1425008941848615], ["math #NEWLINE# n =", 0.14224491412757287], ["n <=", 0.14204760784012266], ["min_distance", 0.14190289961580377], [") #NEWLINE# #DEDENT# calculate", 0.14187556851066907], ["#NEWLINE# graph", 0.14186798925165872], ["tiles [", 0.14154794147194064], ["#NEWLINE# print ( x", 0.14142588003424617], ["print ( x )", 0.1411731401729548], ["res += 1", 0.14103687041263177], ["res += 1 #NEWLINE#", 0.14103687041263177], ["#INDENT# res += 1", 0.14103687041263177], ["= false", 0.14103105125925322], ["== x", 0.14097997593778488], ["( int , sys", 0.14083859460799358], ["int , sys .", 0.14083859460799358], ["int , sys", 0.14083859460799358], ["dp [ n", 0.14030527679525745], ["#NEWLINE# y =", 0.1402071913854574], ["3 ==", 0.14008084829643155], ["i ] [ 0", 0.13981770199132626], ["c .", 0.139788308961955], ["between", 0.13958151431000845], ["str", 0.1393748971094806], ["{ i", 0.13922926401234295], ["{ i :", 0.13922926401234295], ["= { i :", 0.13922926401234295], ["= { i", 0.13922926401234295], ["str ( n", 0.13914268670273205], ["elif i ==", 0.1390407100488333], ["#DEDENT# elif i ==", 0.1390407100488333], ["+= i", 0.13882934392717408], ["% 3", 0.13847782187319913], ["the length of the", 0.13840724665232912], ["] %", 0.1382359434177147], ["1 #NEWLINE# print (", 0.13814383770005118], [") : check", 0.13803895740493077], ["num )", 0.13744102123839216], [") #NEWLINE# if", 0.13740021926764726], ["all", 0.13737457899377212], ["3 == 0 :", 0.13707640036657512], ["1 , n", 0.13695846085353927], [") +", 0.13690404639861414], ["all (", 0.13685373715928428], ["the maximum length", 0.13675328212054647], ["maximum length", 0.13675328212054647], ["r = map (", 0.13664937371898936], ["r = map", 0.13664937371898936], [", r = map", 0.13664937371898936], ["for i", 0.1361925833541884], ["number #NEWLINE#", 0.1360529693734421], ["#INDENT# if a", 0.1359901723231957], ["n +=", 0.13587118514833282], ["n += 1", 0.13587118514833282], ["n += 1 #NEWLINE#", 0.13587118514833282], ["( s ) #NEWLINE#", 0.13583009196159646], [") }", 0.13557819256832773], ["digits", 0.13535122120176957], [": #INDENT# operations", 0.1352525884605629], ["#INDENT# operations", 0.1352525884605629], ["b :", 0.13500916303237295], [", m =", 0.13488651614755506], ["minutes", 0.13468647709600035], ["= 0", 0.1345329655356696], ["in graph", 0.13445512399885312], ["i in", 0.13415174278062503], ["count the", 0.13389405979247232], [") ) #NEWLINE# c", 0.1334972957973147], ["#NEWLINE# operations =", 0.13301366951433954], ["operations =", 0.13301366951433954], ["b - 1", 0.13283105739869358], ["zeros", 0.1323825390666588], ["= s .", 0.13229976296869306], ["0 ] -", 0.13193722949700257], ["( ) . splitlines", 0.13188992061302418], [") . splitlines", 0.13188992061302418], [") . splitlines (", 0.13188992061302418], [", x", 0.1317584578408667], ["dictionary to store the", 0.13167696520647895], ["range ( t", 0.1315907838657972], ["in range ( t", 0.1315907838657972], ["p [ i ]", 0.13146690519531018], ["= \"\" #NEWLINE#", 0.13119843729505487], ["\"\" #NEWLINE#", 0.13119843729505487], ["( a [", 0.13118250631370842], [") : check if", 0.1311795685898754], ["a , x", 0.13110476292280987], ["the result #NEWLINE# print", 0.13105798376839342], ["result #NEWLINE# print", 0.13105798376839342], ["result #NEWLINE# print (", 0.13105798376839342], ["( ( n", 0.13102854753667403], ["\"1\"", 0.1307793972212945], ["( ) #NEWLINE# check", 0.1307730358162842], ["and (", 0.13069166613584024], ["'' . join (", 0.13059937343382835], ["the answer #NEWLINE# print", 0.13052299010519083], ["answer #NEWLINE# print", 0.13052299010519083], ["answer #NEWLINE# print (", 0.13052299010519083], ["= float (", 0.13050916017513198], ["= float", 0.13050916017513198], ["float", 0.1304577163771797], ["a ) +", 0.1304304899086448], ["num_ways", 0.1303931688152036], ["painting", 0.13026020999519222], ["v [ i", 0.13024089314747878], ["grid", 0.13015196261871534], [": #INDENT# if a", 0.13009017570658038], ["[ -1 ] )", 0.13008987977057374], ["[ i ] #NEWLINE#", 0.1298389758993864], ["get", 0.12979578974617983], ["( r ,", 0.12963172571108073], ["( a [ 0", 0.12961273134395468], ["] ==", 0.12955625424397346], ["{ }", 0.12953709023311216], ["] !=", 0.129535303373823], ["distance [", 0.12952672205205773], ["= sum (", 0.12929676287514472], ["x_2", 0.12889086655362939], ["( \")\"", 0.12860984164215178], ["\")\" )", 0.12860984164215178], ["( \")\" )", 0.12860984164215178], ["[ i ] %", 0.12839564320945587], ["i ] %", 0.12839564320945587], ["sofa_dict", 0.1282307154595185], ["print ( m )", 0.12811264084902244], ["a ) #NEWLINE# if", 0.12795361184495843], ["[ 0 ] -", 0.1278653150682666], ["replace", 0.12766063342156064], ["#NEWLINE# print the minimum", 0.12765561417815183], ["( f", 0.127482583971028], ["r in", 0.12747035357869962], ["readline ( ) )", 0.12746019430715294], [", n )", 0.1273368740195563], ["iterate", 0.12729025633306837], ["iterate over", 0.12729025633306837], ["b ) #NEWLINE#", 0.12723153286982658], ["( g )", 0.1272293911243784], ["edges", 0.12698262447299927], ["needed", 0.12681530473863736], [") and (", 0.12667402475838208], ["c ] ==", 0.12652560298425297], ["[ c ] ==", 0.12652560298425297], ["( int ( input", 0.126427676329085], ["abs ( b", 0.1262846082480753], ["m ) #NEWLINE# print", 0.12588465444100222], [") } #NEWLINE#", 0.12563241022941313], ["over the", 0.1255147147167831], ["if a [ i", 0.12530153674461067], ["3 #NEWLINE# import", 0.12529920591484417], ["m =", 0.12522170228645627], [") + abs", 0.12515366521554103], [") + abs (", 0.12515366521554103], ["if there", 0.1250370041255466], ["visited .", 0.12502696844176736], ["= abs", 0.12471729973141558], ["= abs (", 0.12471729973141558], ["% 10", 0.1246071686408325], [") + chr", 0.12439907562555934], ["+ chr (", 0.12439907562555934], ["+ chr", 0.12439907562555934], [") + chr (", 0.12439907562555934], ["= a [ i", 0.12437247303271493], [") #NEWLINE# h =", 0.12419569267027097], ["#INDENT# if s [", 0.12418686705300948], ["two", 0.12410564633090428], ["intersection", 0.12386057058937307], ["c [ i", 0.12384252218669449], ["false #NEWLINE#", 0.12381255411537996], ["#NEWLINE# result", 0.12377180882704508], ["( k )", 0.12345129926434929], ["print ( a ,", 0.12341569789341468], ["#INDENT# for c in", 0.1231279531798469], ["#INDENT# for c", 0.1231279531798469], [": #INDENT# for c", 0.1231279531798469], ["dp [ n ]", 0.12310327179407271], ["y_2", 0.1229171888902935], ["if a + b", 0.1229160674877862], ["re", 0.12286615004647378], ["stdin . readline (", 0.1228031570387271], ["to the", 0.12272923376034324], [") #NEWLINE# x =", 0.12268029418888557], ["distinct", 0.12242271602039596], ["the input", 0.12239626062857278], ["the sum", 0.12214541433665092], ["print ( operations )", 0.12200119870548236], ["( operations ) #NEWLINE#", 0.12200119870548236], ["print ( operations", 0.12200119870548236], ["operations ) #NEWLINE#", 0.12200119870548236], ["#DEDENT# print ( *", 0.1219864577865456], ["r", 0.12183116917765513], ["if a [", 0.12175238638963966], ["s [ i :", 0.12164194753712944], ["t ) :", 0.12156996171730129], ["random", 0.12145093160257553], ["row_sum", 0.12136953374677109], ["#INDENT# if s", 0.12115575033709848], ["// 10", 0.12113052249017975], ["#INDENT# if i not", 0.1209938569632266], ["if i not in", 0.1209938569632266], ["i not", 0.1209938569632266], ["i not in", 0.1209938569632266], ["if i not", 0.1209938569632266], [": check if the", 0.12092481965218506], ["length of the longest", 0.1208982246080169], ["of the longest", 0.1208982246080169], [") ) #NEWLINE# def", 0.12089047504238508], ["= \"\"", 0.12083146885842325], ["( ) #NEWLINE# g", 0.12082401075226935], ["a , b =", 0.12080608065023214], ["h = list (", 0.12080355902101908], ["h = list", 0.12080355902101908], ["#NEWLINE# h = list", 0.12080355902101908], ["sys #NEWLINE# read", 0.12077333491917197], ["#DEDENT# print the answer", 0.12062520759583527], ["if a +", 0.12045640305258973], ["possible", 0.12044695091712006], ["( a ) #NEWLINE#", 0.12018217340967378], [". append ( input", 0.1200802492057627], ["append ( input (", 0.1200802492057627], ["append ( input", 0.1200802492057627], ["bool (", 0.11998367821480717], ["b : #INDENT#", 0.11968166328148284], ["[ c", 0.11947565900029307], ["0 ] - a", 0.11945517391633488], ["#NEWLINE# create a dictionary", 0.1193600093191158], ["a", 0.11933436141121756], ["difference", 0.11891258021024521], ["there", 0.11879321804153196], ["otherwise", 0.11865850094848936], ["num =", 0.11837267645764588], [") == s", 0.11833656750125598], [") #NEWLINE# c .", 0.11828177155857196], ["v [ i ]", 0.11797040538016913], ["count the number of", 0.11786869180891762], ["count the number", 0.11786869180891762], [", sys . stdin", 0.11783591253964239], [", sys .", 0.11783591253964239], ["print ( k )", 0.11754465795098208], ["#INDENT# y", 0.11738362752013101], [": #INDENT# y", 0.11738362752013101], ["= a", 0.11737131059022869], [") #NEWLINE# h", 0.11730624346326644], ["i , n )", 0.11714403089245556], ["print ( ans %", 0.11708096546940079], ["( ans %", 0.11708096546940079], ["append", 0.11688234667657099], ["maximum length of the", 0.11678892667696923], ["the maximum length of", 0.11678892667696923], ["maximum length of", 0.11678892667696923], ["sofa_dict [", 0.11657337769047134], ["( len ( s", 0.11650795157687502], ["( len ( a", 0.1165060071507575], [". sqrt", 0.11617732986084967], [". sqrt (", 0.11617732986084967], ["abs ( a [", 0.11604768398792606], ["otherwise ,", 0.11604223091943429], ["iterate over the", 0.11579906905790457], ["1000000007", 0.11574823742155063], ["**", 0.1157028631731084], ["#DEDENT# print the maximum", 0.11557219634784253], ["has", 0.11551180877156972], ["ab", 0.11529069239140777], ["the array", 0.1151787455496921], ["( ) [ 0", 0.1150980789721045], ["a =", 0.11509679046722732], ["a_1", 0.11503681166964971], ["g .", 0.1148791862963079], ["#NEWLINE# result =", 0.11487070272253329], ["2 #NEWLINE#", 0.11482722802955614], ["i , n", 0.11460493130161134], ["= sum", 0.114250759757038], ["it", 0.11420789487907894], ["append (", 0.11409687266999285], [". append (", 0.11409687266999285], ["p . sort", 0.11404165061212121], ["p . sort (", 0.11404165061212121], ["n , k", 0.11393201002823922], ["= s", 0.11389882388015882], ["set ( x", 0.1137261871203992], ["in visited", 0.11325512762165614], ["( tiles [", 0.11323835317755251], ["( r , c", 0.11321317654208955], ["read ( ) .", 0.11313394190871617], ["+ 1 )", 0.11281758329849816], ["] ] ,", 0.11274254361811567], ["#NEWLINE# p .", 0.11267617322448742], ["1 #NEWLINE# for i", 0.11254768621450217], ["1 ) ) #NEWLINE#", 0.11238874527578294], ["their", 0.11229614468852767], ["first", 0.112084400939072], ["( m ) #NEWLINE#", 0.11207477766243047], [", x =", 0.1119630397895675], ["#NEWLINE# p", 0.11192608119029052], ["print ( str (", 0.1119047417305562], ["print ( str", 0.1119047417305562], ["1 ) )", 0.11190324233270112], [", x ,", 0.11180440112286051], ["ps [", 0.1116324151182095], ["#NEWLINE# h =", 0.11141807566173584], ["** x", 0.11123988162575377], ["( range ( 1", 0.11110979370825037], ["] #NEWLINE# for", 0.11102018952641173], ["np . array (", 0.11099826870526891], [". array", 0.11099826870526891], [". array (", 0.11099826870526891], ["array (", 0.11099826870526891], ["np . array", 0.11099826870526891], ["range ( t )", 0.1109831655845549], [". readline ( )", 0.11042633075368614], [". readline (", 0.11042633075368614], ["ways", 0.11034815813203244], ["1 , k +", 0.1102777940647035], ["+ s", 0.11021224215952677], ["operations +=", 0.10934206637892514], ["found =", 0.10930640711680802], [". append", 0.10923334637958036], ["a .", 0.10913986360724297], ["[ 'a'", 0.10906256889795832], ["in graph [", 0.10893211574040719], ["7 )", 0.10879881374136638], ["( p [", 0.10875047435086392], ["p [ i", 0.10873650930505746], ["( i , n", 0.10866672180396585], ["( n ) #NEWLINE#", 0.10854845194136253], [") else \"no\"", 0.1084371425179623], ["len ( s )", 0.10839239536424303], ["replace (", 0.10837066384879168], [". replace (", 0.10837066384879168], [". replace", 0.10837066384879168], ["board [ r", 0.10834113223791479], ["board [ r ]", 0.10834113223791479], ["visited . add", 0.10823842287527662], ["visited . add (", 0.10823842287527662], ["if s", 0.10820185989236747], [", sys", 0.10814592091232866], ["ans %", 0.10808666258376107], ["#NEWLINE# iterate", 0.1079780595112586], ["#NEWLINE# iterate over", 0.1079780595112586], ["array ( [", 0.10792847289678104], [". array ( [", 0.10792847289678104], ["* i #NEWLINE#", 0.1079219083033054], ["'inf' ) #NEWLINE# for", 0.10758982270329412], ["#DEDENT# print the number", 0.10756315822693703], ["** z", 0.10737552999975868], ["** y", 0.1070357403667851], ["#NEWLINE# g [", 0.10698786026047923], ["greater", 0.10646991689676735], ["( a [ i", 0.1064421168509595], ["x , y =", 0.10641240085512399], ["numbers", 0.10638772675743613], [", d", 0.10635278609275615], ["[ c ]", 0.10626577160274309], ["f (", 0.1062649113791996], ["max_increase", 0.10606794616235565], ["n - 2 )", 0.1059769068045998], ["x //", 0.10595938962831333], ["sum = 0", 0.10583250213494964], ["'' .", 0.10579436281618308], ["'' . join", 0.10579436281618308], ["at", 0.10532956455333818], [") #NEWLINE# y", 0.10532614529733679], ["** i", 0.1053034077776052], ["1 , d", 0.10519727556075216], ["#NEWLINE# moves", 0.10508974454149156], ["+ abs", 0.10495571241945587], ["+ abs (", 0.10495571241945587], ["sofa_dict [ i", 0.1049160399214242], ["sofa_dict [ i ]", 0.1049160399214242], [", t =", 0.10491572762076552], ["random #NEWLINE#", 0.10483451115756219], ["import random #NEWLINE#", 0.10483451115756219], ["import random", 0.10483451115756219], ["+= 1 #NEWLINE# #DEDENT#", 0.10433721637560527], ["read (", 0.10417995756181249], ["read ( )", 0.10417995756181249], ["components", 0.10398259234908142], ["[ [", 0.1039598881777981], [") )", 0.10394737504819972], ["s [ i ]", 0.10380443381109182], ["* sorted (", 0.1037925718094257], ["( * sorted (", 0.1037925718094257], ["* sorted", 0.1037925718094257], ["( * sorted", 0.1037925718094257], ["+ ( n -", 0.10376538945397883], ["+ ( n", 0.10376538945397883], ["#NEWLINE# #DEDENT# otherwise ,", 0.1034874990929514], ["#DEDENT# otherwise ,", 0.1034874990929514], ["#NEWLINE# #DEDENT# otherwise", 0.1034874990929514], ["#DEDENT# otherwise", 0.1034874990929514], ["there is", 0.10341865489476641], ["remove", 0.10324696582884799], ["color", 0.10320659788799483], ["print ( s )", 0.10320141142735036], ["else 0 )", 0.10293696829174324], ["#NEWLINE# convert", 0.10292784482751467], ["required", 0.10264931533583022], ["moves #NEWLINE#", 0.10251738497140236], ["i ] +", 0.10249270336001969], ["( 1 , k", 0.1024728487533828], ["c ]", 0.10234697680342372], [") #NEWLINE# #DEDENT# find", 0.10232759133789954], [", b =", 0.10206438849737494], ["10 ** i", 0.1020186224841465], ["= float ( 'inf'", 0.10197971833668112], ["i + 2", 0.10170176077586235], ["probability", 0.10151118581645203], [": #INDENT# operations +=", 0.10150983229915818], ["#INDENT# operations +=", 0.10150983229915818], ["min ( abs", 0.1015016651534278], ["min ( abs (", 0.1015016651534278], ["a , b", 0.10110591858683894], ["// 2 #NEWLINE#", 0.10086658500165929], ["u ,", 0.10077921619904424], [",", 0.10072886146831901], ["convert", 0.10064226675940466], ["r in range", 0.10058287708100373], ["r in range (", 0.10058287708100373], ["for r in range", 0.10058287708100373], ["#NEWLINE# d = list", 0.10050572225082353], ["path", 0.10049424186607717], ["nx", 0.10047238906957187], ["#DEDENT# print the minimum", 0.10028783363581958], [", n ) )", 0.10020495075560065], ["b [ i", 0.10017631636074427], ["] for", 0.09995098433210182], ["#NEWLINE# else", 0.09989015627512653], ["#NEWLINE# else :", 0.09989015627512653], ["find the minimum", 0.09976779362861504], ["n + 1 )", 0.09975739081699858], ["( ) #NEWLINE# create", 0.09969601028560733], ["t ) : #INDENT#", 0.09965423849423902], [", y =", 0.099642945402558], ["#NEWLINE# iterate over the", 0.09956117324147752], ["and all", 0.09917662525030334], ["and all (", 0.09917662525030334], ["range ( i )", 0.09904051781112823], ["( * a", 0.0989986706756022], ["( * a )", 0.0989986706756022], [") #NEWLINE# graph", 0.09897903758531941], ["i ] not in", 0.09887191397767468], ["[ i ] not", 0.09887191397767468], ["i ] not", 0.09887191397767468], ["x in range", 0.09875538510283106], ["x in range (", 0.09875538510283106], [") ] for _", 0.0985575434413212], ["than", 0.09849704664114324], ["[ k -", 0.09844916664320852], ["[ k - 1", 0.09844916664320852], ["a [ j ]", 0.09843782167292237], ["the string #NEWLINE#", 0.09843157400486464], [": #INDENT# name", 0.098347169281763], ["#INDENT# name", 0.098347169281763], ["x_max", 0.09820944708831923], ["max_length =", 0.0981931358175444], ["else 0 ) #NEWLINE#", 0.09818309077816462], [", the", 0.09810016240496028], ["( result", 0.09782154064571186], ["( result )", 0.09782154064571186], ["result )", 0.09782154064571186], ["and a [ i", 0.09772713135521006], ["#NEWLINE# if a", 0.09772142289091651], ["any", 0.09770494739639131], ["if there is", 0.09765056237267505], ["] >=", 0.09748266895201661], ["11", 0.09747958565561346], ["( ) #NEWLINE# x", 0.09731219696661628], ["the sum of", 0.09725385557004722], ["- 1 ) :", 0.09723325477065872], [") ) #NEWLINE# create", 0.09721664136451343], [") ) #NEWLINE# graph", 0.09694087433968523], ["already", 0.09691632418716487], [". read ( )", 0.09689692409879368], [". read (", 0.09689692409879368], ["in range ( a", 0.09681450032184057], ["name =", 0.0968029817672737], ["return sum", 0.09675669333368203], ["distance =", 0.09661369362387028], ["\"yes\" ) #NEWLINE# print", 0.09660227740830392], [", r + 1", 0.0965699151960598], [", r +", 0.0965699151960598], [") } #NEWLINE# for", 0.09651954834438793], ["is not", 0.09638788383322165], ["t )", 0.09631982679687374], ["s = \"\"", 0.09627161535157694], ["s = \"\" #NEWLINE#", 0.09627161535157694], ["#NEWLINE# #INDENT# if", 0.09626209987305742], [") [ 0 ]", 0.09620032168032597], [", t = map", 0.0961015556476509], ["t = map", 0.0961015556476509], ["t = map (", 0.0961015556476509], ["for r in", 0.09598511010838554], ["for r", 0.09598511010838554], ["b -", 0.09595923467841369], ["#NEWLINE# def", 0.09576204380841728], [") #NEWLINE# y =", 0.09573973661919265], [". stdin .", 0.09572022257634391], ["sys . stdin .", 0.09572022257634391], ["of moves #NEWLINE#", 0.09557719926871149], ["number of moves #NEWLINE#", 0.09557719926871149], ["* b ) #NEWLINE#", 0.0954376647616562], [") : #INDENT# k", 0.09542406488015331], ["len ( b", 0.09527212234962808], ["for", 0.09518268670187677], ["m , k =", 0.0951555720758214], [", '.'", 0.09511073978027822], ["max_diff", 0.09509217777002942], ["r +", 0.09490687752613468], [") ) [", 0.0948679149249493], ["[ i ] >", 0.09474462274682045], ["i ] >", 0.09474462274682045], ["input #NEWLINE#", 0.09473577678238863], ["mp", 0.0945263861546207], ["of n", 0.09442721940907554], ["re .", 0.09435073081032647], ["\"\" #NEWLINE# for", 0.09432995356759317], ["= \"\" #NEWLINE# for", 0.09432995356759317], [") & set", 0.09429736428355157], ["& set", 0.09429736428355157], [") & set (", 0.09429736428355157], ["& set (", 0.09429736428355157], ["#DEDENT# #DEDENT# #DEDENT# print", 0.09426252295382259], ["#NEWLINE# for r in", 0.0942623296772927], ["#NEWLINE# for r", 0.0942623296772927], ["prefix", 0.09425053545321913], ["m , x", 0.0941035119181463], [") [ 0", 0.09405260231660881], ["= false #NEWLINE# for", 0.0939890077601396], ["false #NEWLINE# for", 0.0939890077601396], ["<= 2", 0.09388190236018028], ["] == 0 and", 0.09379845555337962], ["= int ( n", 0.09377365891130145], ["] + [", 0.09376860471874367], ["greater than", 0.09374926902918457], ["0 #NEWLINE#", 0.09371559604625533], ["2 #NEWLINE# if", 0.09363486007803208], [") ** 2", 0.09358084553430279], ["( y )", 0.0935606261679747], ["( t ) :", 0.09352060490509698], ["y in", 0.09350989997921019], ["cost #NEWLINE#", 0.09340684719689661], ["n ) )", 0.09339461311199745], ["for i in a", 0.09324445265185148], ["res = 0", 0.09303603218951217], ["res = 0 #NEWLINE#", 0.09303603218951217], ["+= i #NEWLINE# #DEDENT#", 0.09283660325242014], ["+= i #NEWLINE#", 0.09283660325242014], [", a [ i", 0.09277794131705397], ["#NEWLINE# dp [ 0", 0.09268458636280108], ["( f )", 0.09268235775029], ["- n )", 0.09251782716154276], [", t", 0.09246419414527621], ["#NEWLINE# else : #INDENT#", 0.09237955883370154], [") #NEWLINE# if the", 0.09211779314831518], ["b [ i ]", 0.09206991465224114], ["min_cost =", 0.09178589846670751], [") #NEWLINE# g [", 0.09178458700639634], ["( q )", 0.09177002824899141], ["= np . array", 0.09175089355334803], ["] , [", 0.09153822782429136], ["print the minimum number", 0.09152163181721162], [") else", 0.09151427230160605], ["freq", 0.09140652806770734], [", 6", 0.09131728576437713], ["strip ( ) .", 0.0913057527443129], ["size", 0.09116184791435115], ["false #NEWLINE# for i", 0.09094253706579943], ["= math", 0.09090409927147129], ["= math .", 0.09090409927147129], ["] and", 0.0908725602767105], ["the number of moves", 0.09081723288446253], ["+ 1 , n", 0.09067705082364003], ["#INDENT# n = int", 0.09058263568355143], ["b [", 0.09053376246746386], [") #NEWLINE# graph [", 0.09041645212259973], ["a [ j", 0.09026794550033647], ["[ i ] ==", 0.09016186605528938], ["'t'", 0.09015410474665052], ["pixels", 0.0900997807575541], ["i in a :", 0.09007667746846984], ["graph =", 0.08999053968161891], [") #NEWLINE# if k", 0.08997736934724924], ["nx .", 0.08990034593074729], ["= nx", 0.08990034593074729], ["= nx .", 0.08990034593074729], ["abs ( b -", 0.08984349846253382], ["on", 0.08978369491757476], [") #NEWLINE# p =", 0.08967351034263181], ["#NEWLINE# a , b", 0.08962491879843341], ["false", 0.08957379788924695], [", d = map", 0.08956717537132702], ["'g'", 0.08951277060679988], ["n , m ,", 0.08949931903151505], ["\":\"", 0.08932370455785581], ["// n", 0.08928234945226088], [". read", 0.08923643613524958], ["] for _", 0.08919812921061845], ["] for _ in", 0.08919812921061845], ["p ) #NEWLINE#", 0.08901331753533233], ["sequence #NEWLINE#", 0.08894577063376337], ["i ] -", 0.08860776458642056], ["== 0", 0.0885000201239469], ["b : #INDENT# print", 0.0882572430207134], ["- 1 ) )", 0.08824358108362534], ["- a )", 0.08820040771342186], ["for a in range", 0.08795624833385182], ["a in range", 0.08795624833385182], ["a in range (", 0.08795624833385182], ["search", 0.08786181408639052], [", u", 0.08785392211369206], ["i in a", 0.08785172371634721], ["diff", 0.08781850322675694], [") % (", 0.08766620546401953], ["find the number of", 0.08754157593082235], ["find the number", 0.08754157593082235], ["print the maximum number", 0.08750724225555905], ["( num )", 0.08724866531448691], ["order", 0.08715346887687216], ["t = input", 0.08670035164808454], ["t = input (", 0.08670035164808454], ["#NEWLINE# t = input", 0.08670035164808454], [", l =", 0.0866944978822185], ["7 ) )", 0.08667929260268588], ["* b )", 0.08667366980591973], [", k + 1", 0.08649310687874277], [", k +", 0.08649310687874277], ["s ) )", 0.08634944566889685], ["= s [ i", 0.0862381433556393], ["( b -", 0.08615999244086239], ["- 2 )", 0.08611648014048329], ["check if there", 0.08605339573461755], ["( sorted (", 0.0859985651143331], ["( sorted", 0.0859985651143331], [") #NEWLINE# if m", 0.08597336192159043], ["y += 1 #NEWLINE#", 0.08596715441888993], ["y += 1", 0.08596715441888993], [") #NEWLINE# read", 0.08582208260596323], ["( len ( b", 0.08535234004200104], ["weight", 0.08526490381356092], ["( x ==", 0.08523651707907955], ["the minimum cost", 0.08522947415436923], ["minimum cost", 0.08522947415436923], ["minimum number of moves", 0.08508499442288943], ["for c in range", 0.08503309277785671], ["c in range", 0.08503309277785671], ["c in range (", 0.08503309277785671], ["if all", 0.08497693908824042], ["[ i ] +", 0.08482461531842814], ["( range (", 0.08467315919175983], ["( range", 0.08467315919175983], ["#NEWLINE# if k", 0.08463623761590694], ["c +", 0.08460623578111579], ["get the", 0.08453134941845068], ["b [ 0 ]", 0.0845298128200832], [") // n", 0.08452319439444445], ["<= a", 0.08445376083968495], ["n , k =", 0.08443050321113943], [". ceil (", 0.08439738469563374], [". ceil", 0.08439738469563374], ["g [ x", 0.08430392470394134], ["g [ x ]", 0.08430392470394134], ["n * ( n", 0.08426306035294015], [", d ,", 0.08426015743981076], ["for x in range", 0.08423098100037456], ["#NEWLINE# c = 0", 0.08421566425447012], ["#NEWLINE# moves =", 0.08359331323791037], ["moves =", 0.08359331323791037], ["equal to", 0.08353121618695183], ["+ d", 0.08350820859755052], ["] ) ) :", 0.08350499257274888], ["#NEWLINE# #INDENT#", 0.08338895385535174], [") ** 2 )", 0.08336800698393584], [", 5", 0.08328939899876005], ["( l , r", 0.08317827588088682], ["- 1 #NEWLINE# print", 0.08296195863808291], ["common", 0.08273595430850625], ["m , k", 0.08272316136933164], ["votes", 0.08264365200907192], ["true #NEWLINE# for", 0.08253151639604421], ["= true #NEWLINE# for", 0.08253151639604421], [") ] for", 0.08249761134622272], ["calculate the total", 0.08240236759090205], ["x **", 0.08230076083609551], [") #NEWLINE# c", 0.08196513325812416], ["#NEWLINE# graph =", 0.08192366326696657], ["of ways", 0.08183863722701931], ["number of ways", 0.08183863722701931], ["1 ] !=", 0.08181033245727722], [") #NEWLINE# if a", 0.08179002649293066], ["s [ i -", 0.08178597827054529], ["by", 0.08171385162157964], ["print ( moves )", 0.08166003745756321], ["print ( moves", 0.08166003745756321], ["l , r =", 0.08162515093186537], ["a ) #NEWLINE#", 0.08149251342565662], ["p )", 0.08149017725551848], ["message", 0.08141067452011647], ["= 0 #NEWLINE#", 0.08130752346885783], ["name )", 0.08123726219295188], ["v [", 0.0810947218550716], ["( x **", 0.08108793726875627], ["( 'inf' ) #NEWLINE#", 0.08090825371586709], ["'inf' ) #NEWLINE#", 0.08090825371586709], ["- t", 0.08087186699179143], ["a [ r", 0.08085339472342327], ["from the", 0.08082208440971156], ["row", 0.08071062906068353], ["] - b", 0.08064433848321928], ["] - b [", 0.08064433848321928], ["i ] ==", 0.08057999425052942], ["print ( len (", 0.08053397195053164], ["print ( len", 0.08053397195053164], ["x ] [ y", 0.0804256416266465], ["#NEWLINE# #INDENT# if s", 0.08039520831851116], ["= a [ 0", 0.08036791130344896], ["0 : #INDENT# x", 0.08031653857063836], ["#NEWLINE# y", 0.08031032066005567], ["the time", 0.0802643036760896], ["#NEWLINE# print the maximum", 0.0801832693745374], ["any (", 0.08008096146745551], ["#NEWLINE# graph [", 0.08004777478837291], ["sum of the", 0.08001741495259682], ["#NEWLINE# k = int", 0.0799037818416869], ["b [ 0", 0.07986002214736612], ["i #NEWLINE# #DEDENT#", 0.07979295181253743], [") /", 0.07957688924406858], ["y ) #NEWLINE# #DEDENT#", 0.07949953772050966], ["minimum time", 0.07947117594948255], ["the minimum time", 0.07947117594948255], ["1 ) **", 0.07943771819930119], ["readline (", 0.07938393406017347], ["readline ( )", 0.07938393406017347], ["0 and a [", 0.07934561863556956], ["with the", 0.07926302100800788], [", r =", 0.07924836221654162], ["= 0 ,", 0.079207383929792], ["divisible", 0.07907723297518388], ["divisible by", 0.07907723297518388], ["#NEWLINE# print ( len", 0.07896255985921322], [") in", 0.07890459017595729], ["#NEWLINE# find the maximum", 0.0788626612193466], ["will", 0.07859507438462056], ["re . search", 0.07854724755095548], [". search (", 0.07854724755095548], ["search (", 0.07854724755095548], [". search", 0.07854724755095548], ["re . search (", 0.07854724755095548], ["] [ y ]", 0.07848062590210304], ["m ]", 0.07847226060254675], ["[ i - 1", 0.07816453428581446], ["#NEWLINE# print the number", 0.07795337555994016], ["( 1 , m", 0.07762782708839848], ["i + 2 ]", 0.07761619198980668], [", r ) )", 0.07755988071509418], [", t )", 0.07754076091353988], ["[ 0 ] >=", 0.07743237258984255], ["0 ] >=", 0.07743237258984255], ["0 , 0 #NEWLINE#", 0.0773554595762231], ["numbers #NEWLINE#", 0.07732620281493921], ["i ] = 0", 0.07725021238408196], ["+ 1 ) if", 0.07724888076587136], ["1 ) if", 0.07724888076587136], ["- a", 0.07717881937690692], ["len ( s", 0.07710032639677368], ["+ t", 0.07705525525554355], ["z **", 0.07705122919722966], ["y **", 0.07705122919722966], ["1 #NEWLINE# c", 0.07691553790471026], ["= lambda x", 0.07685088193061299], ["r + 1", 0.076741287738231], ["s ) ) #NEWLINE#", 0.07671192918388096], ["c [ i ]", 0.07668932979222669], ["] ) #NEWLINE# print", 0.0766473928312423], ["result =", 0.07648913115078566], [") ) #NEWLINE# read", 0.07647112557409326], ["the number of ways", 0.07642079089893976], ["( r +", 0.07637178160516185], ["n , p", 0.0761383666255028], ["#NEWLINE# a . append", 0.07605324388055286], ["* a ) #NEWLINE#", 0.07594681171512993], ["len ( a )", 0.0758810973203116], ["[ : i ]", 0.07579474353716191], [": i ]", 0.07579474353716191], ["dist", 0.07568136804199505], ["#NEWLINE# s =", 0.07550560068198726], ["h [", 0.07515006591447357], ["print ( s", 0.07514132954864353], ["( ) for", 0.07506816356598693], ["range ( k", 0.0750638914235901], ["abs ( x", 0.07497996153451754], ["the winner", 0.07493732173349234], ["( k ) #NEWLINE#", 0.0748661847128462], ["expected", 0.07467581628814228], ["the expected", 0.07467581628814228], ["#NEWLINE# edges", 0.07460465229875679], ["y <", 0.07443419684291258], ["#DEDENT# calculate the minimum", 0.07436627957226609], ["range ( a", 0.07420231400310195], ["+ 2 ]", 0.0741281392204721], ["d - 1", 0.07406051844430318], ["divisors", 0.07396131061301076], ["i - 1 ]", 0.07393574888409568], ["or (", 0.07391142453781378], ["there is a", 0.073892020692666], ["the second", 0.07386766298690782], ["- a [", 0.0738067044726187], ["and c", 0.07359250442389964], ["max ( a )", 0.07333474500994638], ["ball", 0.07333074042265082], ["the ball", 0.07333074042265082], ["s . append (", 0.07323930390472007], ["s . append", 0.07323930390472007], ["#NEWLINE# number of", 0.07319289018649884], [") : #INDENT# r", 0.07307200513671364], [". stdin", 0.07306243720125494], ["sys . stdin", 0.07306243720125494], ["] [ y", 0.0729560625134023], [": calculate the", 0.07294109619375058], [": calculate", 0.07294109619375058], ["] + a", 0.07293005677267], ["] + a [", 0.07293005677267], ["c = 0", 0.07285305820865232], ["sum = 0 #NEWLINE#", 0.07285147077619737], ["'r'", 0.07284173743576194], ["- j", 0.07271232008054658], ["+ 1 #NEWLINE# print", 0.07270676872683646], ["read the input", 0.07247875300164511], ["needed to", 0.07244111147063564], ["math . sqrt", 0.07224586005447702], ["math . sqrt (", 0.07224586005447702], ["set ( ) for", 0.07222279721050633], ["employee", 0.07219431135017514], [") : #INDENT# for", 0.07219096248912686], ["unique", 0.07209168764849327], ["( y", 0.07198167876830631], [", y ) #NEWLINE#", 0.0719313415745278], ["( s ) )", 0.07182968292324265], ["r + 1 )", 0.07175486845396331], ["moves )", 0.07170706040036469], ["( moves", 0.07170706040036469], ["( moves )", 0.07170706040036469], ["( b ) )", 0.07156061765701646], ["#NEWLINE# k = 0", 0.07155806700510553], ["if 1", 0.07151282501272546], ["q )", 0.07150026057890946], ["+ str (", 0.07140472182419082], ["+ str", 0.07140472182419082], ["g [", 0.07135776261795916], ["[ i -", 0.07127543704052719], ["[ i ] !=", 0.07124464412272011], ["in s", 0.07122138383433044], ["#DEDENT# elif a", 0.07091383619662618], ["#NEWLINE# #DEDENT# elif a", 0.07091383619662618], ["elif a", 0.07091383619662618], ["#NEWLINE# p =", 0.0709057992025958], ["dy =", 0.0709033749125648], ["= int ( s", 0.07086442519345594], ["def f (", 0.07082168665519342], ["def f", 0.07082168665519342], [") #NEWLINE# read the", 0.07078121216846282], ["1 #NEWLINE# #DEDENT# calculate", 0.0707783131478475], ["( name )", 0.0706708864595148], ["node", 0.07046367980242305], ["m - n", 0.07035603867345863], ["make", 0.0703199808154864], ["key = lambda", 0.07027965167799101], ["#INDENT# cost", 0.07008866864660779], ["freq [", 0.07008148942080777], ["value", 0.07002067841615613], ["in range ( q", 0.06988232058383476], ["range ( q", 0.06988232058383476], ["range ( q )", 0.06988232058383476], ["join (", 0.06971081920766817], [". join (", 0.06971081920766817], ["= n //", 0.06970612246041266], ["#INDENT# p . append", 0.06968472752344483], ["( i ) :", 0.06963026323582819], ["x ==", 0.06961722565492458], [", s ,", 0.06960648920367042], ["= [ [", 0.0695395945250416], ["( 10 **", 0.06949227372529922], ["r , c )", 0.06922982611867928], [") : #INDENT# n", 0.06917350096034146], ["* c )", 0.06907650563143566], [") //", 0.06898794040576538], ["c = 0 #NEWLINE#", 0.06895433618883855], ["( abs (", 0.06892756647146998], ["c ) #NEWLINE#", 0.0688787296477271], ["// 3", 0.06880832895576657], ["6 )", 0.06879598041354029], ["[ : i", 0.06870590421169412], [") if", 0.06849777470294541], ["1 , k", 0.068429036477631], ["#DEDENT# get the", 0.06833252356701859], ["#DEDENT# get", 0.06833252356701859], ["7 ) ) #NEWLINE#", 0.068177252111337], ["[ j ] !=", 0.06815438847739637], ["j ] !=", 0.06815438847739637], ["// 2 ) #NEWLINE#", 0.06804718052404025], ["n , s", 0.0680151888682444], [", r ,", 0.06799257209119755], ["if there is a", 0.06795166628210844], ["square", 0.06794418781341688], ["y ) #NEWLINE#", 0.06784920919842737], [": #INDENT# if s", 0.06737836658302904], ["#INDENT# n =", 0.0673609455327582], ["- 1 and", 0.0672339113172858], ["+= b", 0.06717190695096471], ["hh", 0.0670083619242827], ["cost =", 0.06693279964720418], ["", 0.06682275669608662], ["( w )", 0.0668149110027216], ["queue", 0.06679773941441755], ["#NEWLINE# q =", 0.06675948567990325], ["( n - 3", 0.06668659457616705], ["#NEWLINE# cost =", 0.06667684075979582], ["a = [ [", 0.06663170508468091], ["( 2 , int", 0.06658780741753413], ["2 , int", 0.06658780741753413], ["2 , int (", 0.06658780741753413], [": #INDENT# cost", 0.06658699689701723], ["[ ] ,", 0.0665615677832267], [") : #INDENT# res", 0.06645684604859081], ["intersection (", 0.06630954153708625], [", len (", 0.06625056931041977], [") #NEWLINE# b .", 0.06611490478629076], [", m , k", 0.06608507457563154], ["print the total", 0.06597731892108133], [") , key", 0.06582463033457717], [") , key =", 0.06582463033457717], ["i ] !=", 0.06582177287986382], ["the distance", 0.0656916201835624], ["'u'", 0.06566094430065657], ["print ( x ,", 0.0654950766310662], [") ) #NEWLINE# k", 0.06538831904855272], [") [ :", 0.06535547637373734], ["'.' ,", 0.06519387228178625], ["if sum", 0.06515111271135926], ["m ) ] #NEWLINE#", 0.06510229163444248], ["x ,", 0.06503562707479411], ["distance (", 0.06500068856647762], ["( a *", 0.06488002448683718], ["ways to", 0.06486598971285594], ["of ways to", 0.06486598971285594], ["number of ways to", 0.06486598971285594], ["a ) ) :", 0.06482788876995838], ["abs ( a -", 0.06478000092375469], [") #NEWLINE# x ,", 0.06465416424226283], ["#NEWLINE# c =", 0.0646192341566875], ["dfs ( x", 0.06459853104544773], ["y in range", 0.06447999958104746], ["y in range (", 0.06447999958104746], ["for y in range", 0.06447999958104746], ["and a [", 0.06446692261289527], [": x", 0.06428130743429701], [") : #INDENT# u", 0.06427746860907553], ["same", 0.0642369221557866], ["( \":\"", 0.06423418536755046], ["split ( \":\" )", 0.06423418536755046], ["split ( \":\"", 0.06423418536755046], ["( \":\" )", 0.06423418536755046], [". split ( \":\"", 0.06423418536755046], ["\":\" )", 0.06423418536755046], ["= 0 , 0", 0.0642309416496266], ["if g", 0.06422495321720773], ["such", 0.06420109224513827], ["such that", 0.06420109224513827], ["faction", 0.06417272120015567], ["( l ,", 0.06407716611898932], ["dev", 0.06405566406098123], ["true #NEWLINE# #DEDENT# #DEDENT#", 0.0640259595055644], ["min ( b", 0.06401482800406941], ["the longest common subsequence", 0.06396066263935841], ["common subsequence", 0.06396066263935841], ["longest common subsequence", 0.06396066263935841], ["longest common", 0.06396066263935841], ["the longest common", 0.06396066263935841], ["( q ) :", 0.06395101444095896], ["j ] :", 0.06394206219717367], ["#NEWLINE# x , y", 0.06387154595499085], ["h ) #NEWLINE#", 0.06379987909766141], ["k ==", 0.06378357014192541], ["#NEWLINE# if sum (", 0.06353491767886509], ["change", 0.06351745953363203], [": #INDENT# u ,", 0.0633876267589736], ["k - 1 ]", 0.06336427110559252], ["grade", 0.06325131254713126], [">= 2 : #INDENT#", 0.06320109487930688], [">= 2 :", 0.06320109487930688], ["pos )", 0.06319141720225453], ["0 ] [ 0", 0.06315968398257112], ["#NEWLINE# def f", 0.06313742042946223], ["#NEWLINE# def f (", 0.06313742042946223], ["#NEWLINE# print ( r", 0.06311685891071878], ["#NEWLINE# #DEDENT# s =", 0.06303699915333533], ["#DEDENT# s =", 0.06303699915333533], ["middle", 0.06299879080091085], ["n : #INDENT# print", 0.06297091507812769], ["candidate", 0.06284089493730612], ["( ( x", 0.0628403034139013], ["in a :", 0.06281493043244704], ["in a : #INDENT#", 0.06281493043244704], ["% (", 0.06277536504162702], ["- a [ -1", 0.06263246093212653], ["#NEWLINE# x ,", 0.06252523419259774], ["the substring", 0.062475395472066694], [") ) for _", 0.062462420267866886], ["f )", 0.0624026548562284], ["] - a [", 0.062248101502119284], ["] - a", 0.062248101502119284], ["tree", 0.06222161070503239], ["( 1 , d", 0.06193313520178681], ["i ] #NEWLINE# ans", 0.06189458375996894], ["d = list (", 0.06186579185177451], ["d = list", 0.06186579185177451], ["#NEWLINE# c = list", 0.0616194020007241], ["if a", 0.0616122928229182], ["#DEDENT# if the", 0.06152170854787969], ["( name", 0.061503678551116076], ["bingo", 0.06145539299181328], ["b , c", 0.0614041016165508], ["b , c )", 0.06135908964945403], ["than the", 0.06132454257304401], ["1 , m +", 0.06127110431822807], [") - sum", 0.06123063395499784], [") - sum (", 0.06123063395499784], [", x , y", 0.06112853386462714], ["#NEWLINE# g =", 0.06101009220687056], ["( a ) )", 0.06064338015568503], ["sqrt (", 0.060410902833863564], ["i ] >=", 0.060366849587389186], ["[ i ] >=", 0.060366849587389186], [": #INDENT# n =", 0.06027620175285362], ["% 2 == 0", 0.06027162533941322], ["2 == 0", 0.06027162533941322], [" #INDENT#", 0.060259288210464175], ["f ( n", 0.060230679058876226], ["n - 3", 0.060141744274286424], [", p =", 0.06005425976177956], ["1 #NEWLINE# #DEDENT# elif", 0.06002708623508346], ["[ [ 0 ]", 0.059949221107799176], ["they", 0.059916985703083236], ["the same", 0.05990613165216828], ["move", 0.059872127884324305], ["a ) -", 0.059867656007372386], [", 8", 0.059842838438100746], ["q ) : #INDENT#", 0.05977976703692023], ["q ) :", 0.05977976703692023], ["n <", 0.059693077477778037], ["#DEDENT# calculate the number", 0.05965335025445817], [") #NEWLINE# q =", 0.05956952835448707], ["( ( b", 0.05956251179291601], ["2 * a", 0.059521096941951845], ["s ) #NEWLINE#", 0.0593263893278563], ["min_length", 0.05925341715889189], ["+ (", 0.05924399691568808], ["] > a [", 0.05915918391787926], ["i ] > a", 0.05915918391787926], ["> a [", 0.05915918391787926], ["] > a", 0.05915918391787926], ["j ] == 0", 0.059125963488635705], ["if sum (", 0.0590146735052078], ["a [ r ]", 0.058989113149057616], ["if n <", 0.058904155612888934], [", d + 1", 0.05884864444892886], ["if the number", 0.05869564702055147], [", len", 0.05858327594358736], ["visited =", 0.05843442416892566], [", k", 0.05843332217268133], ["#NEWLINE# a ,", 0.05816316451693954], [": #INDENT# u", 0.05810210920646714], ["( node", 0.058023032182388724], ["dp [ 0 ]", 0.05787597071185051], ["dp [ 0", 0.05787597071185051], ["k ) #NEWLINE# print", 0.05781532939490441], ["x [ i ]", 0.05772822208172543], ["// b", 0.057708062340248986], [", b , c", 0.05766721324741648], ["ones", 0.05761287673017004], ["x : x", 0.05758338540248056], ["lambda x : x", 0.05758338540248056], ["update", 0.05754166027241378], ["needed #NEWLINE#", 0.05747608223761572], ["p . append", 0.057457071365017785], ["p . append (", 0.057457071365017785], ["dp =", 0.057419023656967036], ["test", 0.057417898053475136], ["-1 ] )", 0.0572456020165942], [", 1 :", 0.057227426341793175], ["( set ( a", 0.057170564204851226], ["+ 2", 0.05701413203314025], ["#NEWLINE# b .", 0.056811794854709496], ["// 3 #NEWLINE#", 0.05679682278786847], ["+ p", 0.05679588409913512], ["<= 2 *", 0.056754432987791856], ["- b [", 0.0565983205989218], ["p =", 0.05633992685344921], ["u , v", 0.05626482584251678], ["y )", 0.056244195397071615], ["g =", 0.05611128116812207], ["] == 2", 0.05608838374405097], [") for _", 0.0560622484406494], [") for _ in", 0.0560622484406494], ["a + b", 0.0560351367619953], [") #NEWLINE# if not", 0.05598486291450077], ["( \"\"", 0.055678962498140964], ["( \"\" .", 0.055678962498140964], ["( \"\" . join", 0.055678962498140964], ["max_grade", 0.05534489847873985], ["maze", 0.05529911904724951], ["key = lambda x", 0.055252630803422895], ["#INDENT# c +=", 0.05502040765877336], [": #INDENT# c +=", 0.05502040765877336], ["y ==", 0.05488427758535953], ["#NEWLINE# if not", 0.05486255554418739], [") : #INDENT# dp", 0.054811959253547225], ["range ( 2", 0.05479533977943744], ["in range ( 2", 0.05479533977943744], ["( math", 0.05476832024087588], ["( math .", 0.05476832024087588], ["#NEWLINE# if s", 0.05476727156313147], ["#NEWLINE# sum", 0.05442441619708113], ["h [ i", 0.054353513066820076], ["#INDENT# u , v", 0.05408495478258477], ["#INDENT# u ,", 0.05408495478258477], ["even", 0.05401289544885211], ["( b [", 0.05392565865218267], ["0 and a", 0.05389836107113074], ["range ( j", 0.05389046483303139], ["in range ( j", 0.05389046483303139], [", 2 ) #NEWLINE#", 0.05380910909911939], [": #INDENT# p .", 0.05368368077117777], ["#INDENT# p .", 0.05368368077117777], ["cost of", 0.053548069190781214], ["cells", 0.053520666805705296], ["return the", 0.053499615843443336], ["] == '1' :", 0.05335624429060599], ["total number", 0.05324859621793729], ["the total number of", 0.05324859621793729], ["the total number", 0.05324859621793729], ["total number of", 0.05324859621793729], ["== '.'", 0.05301270470288681], ["= lambda x :", 0.05295686147789893], ["n == 0 :", 0.052883279994573734], ["if n == 0", 0.052883279994573734], ["i - j", 0.052877935993682144], ["[ ] , [", 0.05281016972402035], ["for i in s", 0.05280620616445454], ["( a ) -", 0.052778275217493384], ["#NEWLINE# if p", 0.05276292493468151], ["+ 1 ] :", 0.05274791479730469], ["the golorp", 0.05271170665916826], ["1 , m", 0.05270792047980836], ["n , t", 0.05266448290761904], ["n , t =", 0.05266448290761904], ["true #NEWLINE# #DEDENT#", 0.05262818028334208], ["b +", 0.052580837728798305], ["the cost", 0.05246611202077294], ["h ) #NEWLINE# #DEDENT#", 0.05237323172716749], [", m , x", 0.05224596282448171], ["m , x ,", 0.05224596282448171], [") / 2", 0.05223795386485081], ["b_1", 0.052094592618643625], [", n ) :", 0.05202317407048628], ["1 ) #NEWLINE# print", 0.05183971969440497], ["[ 2 ] :", 0.05180347710539138], ["#INDENT# for j in", 0.05177385784859748], ["#INDENT# for j", 0.05177385784859748], ["] , [ ]", 0.051712254123296254], ["calculate the distance", 0.05170472987278128], ["( n - 2", 0.0515801958333293], ["[ i ] <", 0.051550736867748984], ["i ] <", 0.051550736867748984], [": #INDENT# res", 0.05145121353240167], [", d +", 0.051230751341252975], ["0 ] and", 0.0511779343702631], ["[ 0 ] and", 0.0511779343702631], ["] . add (", 0.051077108285289455], ["] . add", 0.051077108285289455], ["group", 0.05098808751609184], ["for d", 0.05097843372079707], ["( area", 0.0508041241108705], ["a [ -1", 0.05073522158602908], ["a [ -1 ]", 0.05073522158602908], ["arange", 0.050734836683621436], ["np . arange (", 0.050734836683621436], ["arange (", 0.050734836683621436], [". arange (", 0.050734836683621436], [". arange", 0.050734836683621436], ["np . arange", 0.050734836683621436], [": #INDENT# x +=", 0.05060673027418389], ["#INDENT# x +=", 0.05060673027418389], [". join", 0.05044924301113376], ["join", 0.05044924301113376], ["s [ : i", 0.05042335146790593], ["strip ( ) )", 0.05036621314491528], ["< 0 : #INDENT#", 0.05033111345510513], [") #NEWLINE# sum", 0.050304893241585866], ["i ] [", 0.05029626812572781], ["1 #NEWLINE# while", 0.050264327243590666], [") #NEWLINE# dp", 0.05024548524481834], [") #NEWLINE# f =", 0.05023499690117018], ["2 * b", 0.050162843847414804], ["#NEWLINE# #DEDENT# get the", 0.05012752820899501], ["#NEWLINE# #DEDENT# get", 0.05012752820899501], ["#NEWLINE# k", 0.050084130669568266], ["90", 0.05007102863936046], ["sys #NEWLINE# n", 0.050012045982898524], ["import sys #NEWLINE# n", 0.050012045982898524], ["total", 0.049971117940032624], ["h =", 0.049873627181266283], ["greater than the", 0.049832038205112276], ["longest_common_subsequence_length", 0.049747182052834314], ["letters", 0.04971430295775651], ["time #NEWLINE#", 0.049698973088820375], ["( re .", 0.04966458348374973], ["( re", 0.04966458348374973], ["] [ 3", 0.04960912844798738], ["cards", 0.04960592308165559], ["1 , n )", 0.049558236628771714], ["a . append", 0.049432217594244675], ["a . append (", 0.049432217594244675], ["1 ) }", 0.049381006278348794], ["1 ) } #NEWLINE#", 0.049381006278348794], ["i ] ) #NEWLINE#", 0.04934184165735166], ["998244353", 0.04933726174214584], [") #NEWLINE# q", 0.04922707148109914], ["#INDENT# u", 0.049157025935080895], ["< 0 :", 0.04911336395883825], ["print ( dp", 0.049092042736481996], ["#NEWLINE# ans = 1", 0.048965119208169136], ["x +=", 0.04895700398506314], ["it 's", 0.04887060882122971], ["#NEWLINE# queue", 0.048798381253744166], ["elif a [ i", 0.048795576539272], ["c , d", 0.04868728578459603], [", [", 0.04867899178686173], ["#NEWLINE# q", 0.048632393494309645], ["#NEWLINE# k +=", 0.048566097788737696], ["] == '.'", 0.048562774623021526], ["#NEWLINE# #DEDENT# s", 0.04848346165369165], ["#DEDENT# s", 0.04848346165369165], [": #INDENT# for j", 0.048400505834839], ["#NEWLINE# ps", 0.048373205928023605], ["for x , y", 0.04828450022850855], ["x , y in", 0.04828450022850855], ["else 0", 0.048209099998942025], [": i + 1", 0.048135862654718004], [", len ( s", 0.048125399379378334], ["#DEDENT# return res", 0.04808230784764195], ["#DEDENT# return res #NEWLINE#", 0.04808230784764195], ["for d in", 0.04807373239935072], ["d in", 0.04807373239935072], ["x [ j", 0.048018890198348915], ["x [ j ]", 0.048018890198348915], ["= true #NEWLINE# #DEDENT#", 0.0479958046844566], ["m + 1 )", 0.04790184376301296], ["update the", 0.04787808472806734], ["is greater than", 0.047834324800381765], ["is greater", 0.047834324800381765], [": if", 0.047776606173692004], ["b in range (", 0.04768495083379466], ["for b in range", 0.04768495083379466], ["b in range", 0.04768495083379466], ["d = map", 0.047680870878768454], ["d = map (", 0.047680870878768454], ["bool", 0.047589477773222984], ["( b ) #NEWLINE#", 0.04755294459439573], ["#DEDENT# if c", 0.04743962476822006], [", 0 #NEWLINE# for", 0.04708464265939335], ["m = int (", 0.04699708618511346], ["m = int", 0.04699708618511346], ["* a #NEWLINE#", 0.04694456912455075], ["( n ) )", 0.04694307920999847], ["#NEWLINE# visited", 0.04684170588363522], ["2 + (", 0.04681363187232714], ["( n , k", 0.046380978767081915], ["[ 0 :", 0.04624765984315008], ["d + 1 )", 0.046231113675136236], ["n , x", 0.04614598081993059], ["( cost", 0.04613804654795509], ["s ==", 0.04612180307503516], [": if the", 0.046092440121674225], ["num ) #NEWLINE#", 0.045997314118817266], ["\"0\"", 0.04593313030208101], ["6", 0.045819883945549054], ["> b", 0.04579749737589954], ["a : #INDENT#", 0.045436573437744265], ["x_list", 0.045424342059147686], ["lambda x", 0.04540994423179031], ["#NEWLINE# dp", 0.045325491794396024], ["( h ) :", 0.04527704446762583], ["== 1 )", 0.045181125326564806], [", [ ]", 0.04510753954862718], ["c = [", 0.04496288999415043], ["+ a [", 0.04488503542055674], ["a , b ,", 0.04487837956556621], ["] == '-' :", 0.04486547831949952], ["#NEWLINE# k =", 0.044823888272430466], ["#DEDENT# dp", 0.044788120037979454], ["26 )", 0.044655337355888426], [", y in", 0.04455501229432934], ["for x ,", 0.04455501229432934], ["( k +", 0.04452457714869419], ["#NEWLINE# s = sum", 0.04444238426806304], [". sum (", 0.0442939280679915], [". sum", 0.0442939280679915], ["[ 1 ] ==", 0.04409268919719607], ["( j )", 0.04396474280564126], ["1 +", 0.043884574433546375], ["k = 0 #NEWLINE#", 0.04386259480917319], [", t ) :", 0.04377015213971941], ["graph [ v ]", 0.04375571190524244], ["graph [ v", 0.04375571190524244], ["true #NEWLINE# for i", 0.04356455583223475], ["// 2 #NEWLINE# if", 0.04355883583957734], ["] else", 0.0433946938372909], [", abs (", 0.04326453920765694], ["if 1 <=", 0.04318370124800139], ["s = int (", 0.04314556914755362], ["s = int", 0.04314556914755362], ["#NEWLINE# area", 0.04313970539773109], ["if all (", 0.04313071811241141], ["i for i", 0.043124143650409265], ["< k : #INDENT#", 0.043029014344891696], ["= a *", 0.04290685034458979], ["distance #NEWLINE#", 0.0427723453800253], ["if p [ i", 0.042755564548640136], [", key = lambda", 0.04274668122678185], ["#NEWLINE# a [ i", 0.04273759807068647], ["+= abs (", 0.04262874154713439], ["+= abs", 0.04262874154713439], ["#NEWLINE# c = [", 0.04261713586622418], ["+ [", 0.04261094441601969], ["range ( i +", 0.042598132082807466], [", b +", 0.04253792294267395], [", m ) :", 0.04250875607692707], ["n = len", 0.04248999669678448], ["n = len (", 0.04248999669678448], ["a = [ ]", 0.042485492692244074], ["#NEWLINE# for a ,", 0.04248091875557168], [") ) #NEWLINE# f", 0.04245295597046749], [", 0 #NEWLINE#", 0.04227540701999147], ["] #NEWLINE# ans +=", 0.042262346597688884], ["if p [", 0.04225426434459148], ["#NEWLINE# for d", 0.04217193414011408], ["impossible", 0.04213907453489139], ["in a", 0.042101218402137666], ["#NEWLINE# number", 0.04205831858832216], ["for l", 0.04200796986478024], ["x , y ,", 0.04180233485574949], ["( x -", 0.04175469031118236], ["= d #NEWLINE#", 0.041705613401892605], ["s . find (", 0.04169391503948032], ["s . find", 0.04169391503948032], ["( p )", 0.041589386056815295], [", 'c'", 0.041427057702015935], ["range ( 2 ,", 0.041423622166991934], [": x [", 0.04132000953788124], ["x : x [", 0.04132000953788124], ["] * len", 0.041285611821533556], [") // 2 #NEWLINE#", 0.04113145547278952], ["% 2 != 0", 0.041078566808751736], ["2 != 0", 0.041078566808751736], ["in range ( k", 0.04107332456018942], ["#INDENT# dp [ i", 0.0410051788437305], ["name ) :", 0.04099799406824198], ["( name ) :", 0.04099799406824198], ["m ) #NEWLINE#", 0.04096488496703354], ["conditions", 0.04089218321762698], ["'.' : #INDENT#", 0.04087536305990613], ["'.' :", 0.04087536305990613], ["] ) +", 0.040816350037217425], [") : calculate", 0.04066790091457129], [") : calculate the", 0.04066790091457129], ["[ j ] :", 0.04062854940343141], [") : if the", 0.0405671020204963], [") : if", 0.0405671020204963], ["x ) #NEWLINE# print", 0.04056102320461763], ["-1 ] ) #NEWLINE#", 0.04055637718662802], [") ) #NEWLINE# t", 0.040532053190301745], ["dp [ i -", 0.040512028394597596], ["powers", 0.04051072791137245], [", c )", 0.040430953426038904], ["[ y ] =", 0.040429873814925014], ["1 #NEWLINE# #DEDENT# print", 0.04030396905733446], ["d + 1", 0.04020840558246118], ["#INDENT# count +=", 0.040182035702274396], ["#INDENT# count += 1", 0.040182035702274396], ["!= n", 0.03993469272297805], ["import math #NEWLINE#", 0.03990125581806866], ["n , k )", 0.03980942225455178], [", l , r", 0.039733455012800685], ["n , p ,", 0.03970115392346121], [", a [", 0.03964099022991024], ["distances", 0.039436774173398755], ["or s", 0.039402386913157346], ["return res #NEWLINE#", 0.03929389032187198], ["return res #NEWLINE# #DEDENT#", 0.03929389032187198], ["return res", 0.03929389032187198], ["x2 ,", 0.03925950911504525], ["n - 1 :", 0.03924763397381354], ["#NEWLINE# for d in", 0.03907771720209066], ["\"\" . join (", 0.039048497162409906], ["\"\" . join", 0.039048497162409906], ["\"\" .", 0.039048497162409906], ["] ) + abs", 0.03902453348176763], ["1 #NEWLINE# calculate", 0.038920227896091744], ["i + 1 :", 0.03891824146662695], ["c +=", 0.038888934479739], ["= chr", 0.03887759941619011], ["= chr (", 0.03887759941619011], [". append ( i", 0.03872069216807727], ["append ( i", 0.03872069216807727], ["k = 0", 0.03866979849671307], ["min ( r", 0.03860193822084042], ["[ 1 ] :", 0.03853432008062703], ["k in range", 0.038484872106839596], ["k in range (", 0.038484872106839596], ["for k in range", 0.038484872106839596], ["y ] =", 0.03847946634231621], ["golorp", 0.03838964330345243], ["i ] == a", 0.03838051720057223], ["#NEWLINE# f =", 0.03833225184618132], ["] in", 0.03819487897176547], ["n == 0", 0.03818876819235545], ["math #NEWLINE# n ,", 0.03814383021607775], ["( ) #NEWLINE# ans", 0.03813388514620714], ["w ) #NEWLINE#", 0.0380087362853453], ["range ( w )", 0.037943060522748887], ["i for", 0.037912811335774434], ["] = 0", 0.03786234866606963], ["] = 0 #NEWLINE#", 0.03786234866606963], [") ] ) )", 0.03780668193677342], ["] == '-'", 0.037801491399711507], [", s =", 0.03758494015319272], ["( s , t", 0.03758261026646638], ["math . ceil (", 0.037563648788411494], ["math . ceil", 0.037563648788411494], ["i ] += 1", 0.03754878499553055], ["integer", 0.0374931463876683], ["a :", 0.03748015304758787], ["and not", 0.037331608733413665], ["b = a", 0.03723486099925637], ["t =", 0.037233224373681706], ["> a [ i", 0.03718954811076866], ["+ a [ i", 0.037188479702723355], ["0 ) #NEWLINE# #DEDENT#", 0.03717091084305901], ["= s [", 0.036871162975405665], ["#INDENT# x ,", 0.0368346341948934], ["#INDENT# x , y", 0.0368346341948934], [": #INDENT# x ,", 0.0368346341948934], ["i ] #NEWLINE# #DEDENT#", 0.03673231481462701], ["#INDENT# res", 0.036683838859653144], ["if l [", 0.03667454096365025], ["0 ] ) +", 0.036482596085504894], ["res #NEWLINE# #DEDENT#", 0.03644146400317695], ["( key = lambda", 0.036441351465683315], ["u , v =", 0.03636926330275059], ["print ( \"\"", 0.03630999504098709], ["print ( \"\" .", 0.03630999504098709], ["re #NEWLINE#", 0.036173641290568215], ["s - 1", 0.03616960157135101], ["* b #NEWLINE#", 0.03611864414818088], ["= b [", 0.03605294501645399], ["[ 0 ] )", 0.03604971501374406], ["c , d =", 0.03603539063083627], [", m )", 0.03602936456501709], ["k and", 0.03602843972926048], ["#DEDENT# count", 0.035948462785255715], ["] for i in", 0.0358961518039911], ["'-' :", 0.03584935116328352], ["'-' : #INDENT#", 0.03584935116328352], [") #NEWLINE# count", 0.035781159835465835], ["= len ( a", 0.0356597800129894], ["* k ) #NEWLINE#", 0.03564158937336646], ["and x", 0.03551882315208161], ["math #NEWLINE#", 0.03547866861656813], ["in range ( w", 0.03547338217444369], ["c [", 0.03540477988547561], ["edge", 0.03531930929202979], ["x ) ) #NEWLINE#", 0.035253826201929156], ["n , a", 0.035207066180629965], ["m , d =", 0.035162712273609634], ["[ node ]", 0.03514094221769968], ["node ]", 0.03514094221769968], ["== k", 0.034993032426259923], [", it", 0.03497056513382299], ["#NEWLINE# n , m", 0.03495818377386508], ["6 ) : #INDENT#", 0.03480070404287443], ["6 ) :", 0.03480070404287443], ["< =", 0.03477923333141058], ["y ] [", 0.034778764462067506], ["[ y ] [", 0.034778764462067506], ["#NEWLINE# p = [", 0.034753544806494875], ["( f ) #NEWLINE#", 0.034735015829996815], [", 0 , 0", 0.03468542139179502], [") #NEWLINE# a ,", 0.034457167667356174], [") #NEWLINE# f", 0.034425424994324515], ["] #NEWLINE# #DEDENT# print", 0.03442350149609982], ["remainder", 0.034395986705812724], [": n ]", 0.034368943212955756], ["d )", 0.03422955221594275], ["^", 0.034114092353374564], ["- j )", 0.034102020190697066], ["#DEDENT# g", 0.03405012107811565], ["( m ) )", 0.03399196837853574], ["[ i ] [", 0.033969931660794546], ["empty", 0.033966776060951664], ["and i", 0.0339415064633143], ["( w", 0.033762712529866], ["key =", 0.03369310770180417], ["( [ [", 0.03354616558625395], ["b ) ==", 0.033533065201889145], ["a ) )", 0.03334968116375069], ["x ] [", 0.0333487556846143], ["[ x ] [", 0.0333487556846143], ["y ,", 0.03322605541849906], [", z", 0.03320723683914347], ["+= a #NEWLINE#", 0.033168236669345985], ["( n , m", 0.03313408235095365], ["t = int", 0.03304964701094495], ["t = int (", 0.03304964701094495], [". #NEWLINE#", 0.03298411493308596], [") ) #NEWLINE# for", 0.03297114418109646], ["0 , 0 ,", 0.03287938853891259], [", x2 ,", 0.032856565816231], [", v =", 0.03273972572625114], ["#INDENT# count", 0.032709026864499766], ["#DEDENT# print ( s", 0.032684296339839373], ["] = dp", 0.032667009647515705], ["] = dp [", 0.032667009647515705], ["+ 1 ) )", 0.03265281306432515], ["j ] : #INDENT#", 0.03254289977954764], ["( abs", 0.03251876800403368], [", 2 )", 0.032457692374111106], ["( 10", 0.03243390155474672], ["#NEWLINE# cost", 0.032405744003235315], ["1 #NEWLINE# a", 0.03234598501645544], ["#NEWLINE# a [", 0.03231973981555932], ["i in s", 0.03224994368892107], ["= x #NEWLINE#", 0.032236415344990395], ["n + 1", 0.03219781923407027], [": #INDENT# if y", 0.03207445078923462], ["#INDENT# if y", 0.03207445078923462], [") + min", 0.032068612536412106], [") + min (", 0.032068612536412106], ["#NEWLINE# k += 1", 0.03200330399576396], ["% 2 !=", 0.03196584493546471], ["2 !=", 0.03196584493546471], ["in range ( h", 0.031905051757631885], ["= h", 0.03183750369897838], ["- 2 ) :", 0.031749962927886524], [") #NEWLINE# a [", 0.03167755306040574], [") ] +", 0.031665608257260086], ["0 ] = 1", 0.03153904866328236], ["s [ i +", 0.03153355980152199], ["remove (", 0.031520780781956845], [". remove (", 0.031520780781956845], [". remove", 0.031520780781956845], ["x #NEWLINE#", 0.03148831301105129], [", [ ] #NEWLINE#", 0.03144217790594639], ["] for i", 0.03143160023897173], ["( u ,", 0.031403782846767196], [", m + 1", 0.031400360490417445], [", m +", 0.031400360490417445], [", y ,", 0.031394060064973923], ["[ node", 0.031358135819548105], ["( abs ( x", 0.031319420045301236], ["if p", 0.03126833272243219], ["h [ 0 ]", 0.031264526802119934], ["( 1 , len", 0.031258806949022305], ["'d'", 0.031199136338584184], ["( n *", 0.031088958411063714], ["( ) #NEWLINE# def", 0.031072556858018463], [": #INDENT# count +=", 0.03104222699147978], ["range ( h )", 0.03096007216012968], ["#NEWLINE# if n %", 0.030941157077206873], ["== s [", 0.030912151870437138], ["] [ x ]", 0.030865206951310113], ["] [ x", 0.030865206951310113], ["1 ] : #INDENT#", 0.030779175305277125], ["n , x ,", 0.03073530598191612], ["k ) #NEWLINE# #DEDENT#", 0.030656592396584675], ["< k", 0.030646126350175423], ["#INDENT# if i ==", 0.030589007600152356], ["f ) #NEWLINE#", 0.030545533470150342], ["#INDENT# c += 1", 0.030513942741230007], ["t = 0", 0.030512840284475547], ["l , r )", 0.03047724044328031], ["1 for i", 0.030357190983555955], ["= none", 0.03031965434859667], [") ) [ :", 0.030309039990783705], ["#NEWLINE# print ( \"\"", 0.03020810803000484], [", v", 0.03014830781255978], ["segment", 0.03012427149152646], ["( str (", 0.030084352161625822], ["s , t )", 0.02998506736159655], ["[ 2 ] ,", 0.029982780390138585], ["[ 3 ]", 0.029982335641992923], [") #NEWLINE# #DEDENT# ans", 0.02994650841631461], ["y , z", 0.029841054322528305], ["[ n ]", 0.029833630583833568], ["'w'", 0.029788952128687336], ["] == 'w'", 0.029788952128687336], ["== 'w'", 0.029788952128687336], ["m , d", 0.029669001477300307], ["** 2 + (", 0.029638603164272605], [") ** 2 +", 0.029638603164272605], ["len ( q )", 0.029540041821426284], ["len ( q", 0.029540041821426284], ["sum +=", 0.02946070680809491], ["1 , 0 )", 0.029426519800759034], ["#DEDENT# dp =", 0.029327860067258845], ["#INDENT# return true #NEWLINE#", 0.02923307750979743], ["( g", 0.029221952024034378], ["#NEWLINE# #DEDENT# res =", 0.029212038088229073], ["] == '1'", 0.029176163314798144], ["x .", 0.029136262466149167], ["append ( s", 0.029043920525980562], [". append ( s", 0.029043920525980562], [": #INDENT# k =", 0.029040091765662947], [") * k", 0.028958250588195796], ["rows", 0.028893969706966064], ["] or", 0.028783591583518786], ["set ( )", 0.02868730269822408], ["1 , i", 0.028556782852180187], ["( y -", 0.028288462373713973], ["m = len (", 0.02821623387340562], ["m = len", 0.02821623387340562], ["[ y ]", 0.028150625244192328], ["len ( b )", 0.02810183474777549], ["r .", 0.028084255968774344], [", a ,", 0.028066222376474975], ["( b )", 0.027985544816661153], ["append ( ( a", 0.027962624106643498], ["#NEWLINE# h", 0.027940845151368077], ["c += 1", 0.02791533714989926], ["c += 1 #NEWLINE#", 0.02791533714989926], ["#NEWLINE# dp [", 0.0277983531868833], [": #INDENT# return true", 0.027778496809840368], ["#INDENT# return true", 0.027778496809840368], ["k [", 0.027768508799513602], ["% y )", 0.027683090137275032], ["a - b", 0.027625904804754995], ["= min ( a", 0.027609291993598174], ["m ) )", 0.027559972688779473], ["cnt1", 0.027547497810450645], ["1 , c", 0.02748124995956758], ["solve ( n", 0.027475933761505984], ["solve ( n ,", 0.027475933761505984], ["] ) #NEWLINE# for", 0.027472773195549083], ["+ k )", 0.02742988772636112], ["3 -", 0.027399845784629593], ["] = p", 0.027399460602746176], ["= dp", 0.027337176972151513], ["= dp [", 0.027337176972151513], [") : #INDENT# l", 0.027320409098678323], ["[ i ] *", 0.027254106187520426], [": #INDENT# graph [", 0.02724579522089712], ["#INDENT# graph [", 0.02724579522089712], ["( i - j", 0.027230014400172052], ["get (", 0.027183329919641543], ["a #NEWLINE# #DEDENT# #DEDENT#", 0.02713965848966474], ["( l ) )", 0.0270857566186932], ["x =", 0.027079137925422894], ["ceil (", 0.027041328978038775], [", c ) #NEWLINE#", 0.026926820331385586], ["and k", 0.026921178959076437], [", y4", 0.026920766070785963], [", y3", 0.026920766070785963], [". add (", 0.02686894276731492], [". add", 0.02686894276731492], ["range ( w", 0.02678681079892862], [") ) //", 0.02677159836811405], ["( k + 1", 0.026640113781299813], ["] >= 0", 0.026627842285496982], ["- x [", 0.026622775962604005], ["s = sum", 0.026537722607837735], ["s = sum (", 0.026537722607837735], ["] != 0", 0.026501133155795293], ["] ) for", 0.026419165288539128], ["== '.' : #INDENT#", 0.02640685991103936], ["] == '.' :", 0.02640685991103936], ["== '.' :", 0.02640685991103936], ["k +=", 0.026385927321766353], ["( u , v", 0.02629465476192678], ["#NEWLINE# if sum", 0.02628254681040313], ["f [ 0 ]", 0.026269660609581864], ["f [ 0", 0.026269660609581864], ["#DEDENT# print ( len", 0.026226839790875485], ["zeroes", 0.02619202428731766], [") ) ==", 0.02619192077660286], ["+= a [ i", 0.02610608225541248], ["0 #NEWLINE# q", 0.026082946813072445], ["= 0 #NEWLINE# q", 0.026082946813072445], [": #INDENT# flag =", 0.026076521584201446], ["#INDENT# flag", 0.026076521584201446], [": #INDENT# flag", 0.026076521584201446], ["#INDENT# flag =", 0.026076521584201446], ["1 ] and", 0.026041018454768604], ["c + 1 )", 0.026016050823488884], ["v ) ) #NEWLINE#", 0.025928805841526497], [", v ) )", 0.025928805841526497], ["#NEWLINE# print ( s", 0.025918399888872082], ["if w", 0.025917607308336775], ["k in", 0.02589814213018927], ["[ ( 0", 0.02585326091914253], ["[ ( 0 ,", 0.02585326091914253], ["= l", 0.02579234440286907], ["if x ==", 0.025772460987287287], ["p = [", 0.025736189632547507], ["for y in", 0.025724117688030852], ["2 ] [", 0.025638881830809285], ["0 , 0", 0.02563431348160647], ["< m :", 0.025622488309590463], ["< m : #INDENT#", 0.025622488309590463], ["0 #NEWLINE# ans =", 0.025355821867420823], ["+ 1 : ]", 0.02529649383238706], ["] #NEWLINE# g", 0.025218565433013512], ["h [ 0", 0.025151004638773938], ["n , a ,", 0.024969578792666116], ["key", 0.02490301802965132], ["#INDENT# print", 0.024876262583436046], ["i ] #NEWLINE# if", 0.024732878159961086], ["w =", 0.024646888224108533], ["mid =", 0.02453714600087971], ["range ( a )", 0.024487369739049396], [", d =", 0.024466575860352644], [") ) #NEWLINE# b", 0.024465439340710604], ["k #NEWLINE# #DEDENT#", 0.024450723979731227], ["b [ j ]", 0.024450329439494652], [") % 2 ==", 0.024427563551241854], ["[ j ] #NEWLINE#", 0.024314492995197987], ["range ( h", 0.024289010969792118], ["a : #INDENT# if", 0.024204880517436515], ["number of steps", 0.024202269529989554], ["of steps", 0.024202269529989554], ["s #NEWLINE#", 0.024193136356893175], ["( s .", 0.02411300247920048], ["candidates", 0.02408872125791726], ["v ,", 0.024073539506514856], ["y ]", 0.02402993402698742], ["for y", 0.023986539184123277], ["x + y", 0.023901605608585837], ["* a )", 0.023883777937347538], ["+ b <", 0.023821786624592736], ["a + b <", 0.023821786624592736], ["5", 0.02378663352363565], ["a - b )", 0.023761545627726945], ["stdin .", 0.023749728004694357], [": #INDENT# count", 0.023686767952076734], ["if k >", 0.02363437654942183], ["= a +", 0.023313364458349563], ["( key", 0.023309151405552498], ["( key =", 0.023309151405552498], [". sort ( key", 0.023309151405552498], ["sort ( key =", 0.023309151405552498], ["sort ( key", 0.023309151405552498], ["data", 0.023290855604102628], ["and a +", 0.023227846497986607], ["= [ [ 0", 0.023215492083251806], ["[ 2 ] [", 0.023182598769732197], ["#NEWLINE# for l", 0.023145369441095933], ["< k :", 0.02310876941266652], ["name ) #NEWLINE#", 0.023031260275021448], ["( name ) #NEWLINE#", 0.023031260275021448], [") ] )", 0.023010780397976573], [", abs", 0.022944551279351685], ["1 for i in", 0.022913646657798478], ["d -", 0.022802766943035267], ["[ i ] +=", 0.022776596820522653], ["] - x", 0.022765230354295275], ["else : #INDENT# a", 0.022709064274742584], ["1 ] [ 0", 0.022522235062039726], ["[ 4", 0.02250838374177732], ["= none #NEWLINE#", 0.022507788487989136], ["#NEWLINE# m =", 0.02240213671336944], [") #NEWLINE# if sum", 0.0223764581488659], ["extra", 0.0223496636796053], ["import math", 0.02233453291370582], ["len ( a", 0.022300020401036725], ["= max (", 0.022254648312161805], [", 7", 0.02224689241249615], ["( sum (", 0.022131199369387098], ["a and", 0.02211740819621124], ["] != i", 0.02211565966352619], ["#NEWLINE# def solve", 0.022097850534347492], ["#NEWLINE# def solve (", 0.022097850534347492], ["w ) :", 0.022047665337699616], ["w ) : #INDENT#", 0.022047665337699616], ["n ] ) #NEWLINE#", 0.021785462103143124], ["area =", 0.02173775479507896], ["= 1 #NEWLINE# for", 0.021677952665231162], [", w =", 0.021616625941804427], ["res #NEWLINE#", 0.021537842681152594], ["] #NEWLINE# k", 0.02153290289967419], [") ) ]", 0.02148957181599353], ["items", 0.021431726403996102], ["items (", 0.021431726403996102], ["items ( )", 0.021431726403996102], [". items ( )", 0.021431726403996102], [". items (", 0.021431726403996102], [". items", 0.021431726403996102], ["r ) )", 0.021349873051462406], ["( p ) #NEWLINE#", 0.021344146559382368], [", y , z", 0.0213309683916611], ["print ( c )", 0.021317792520824597], ["h ) :", 0.02130528436766994], ["h ) : #INDENT#", 0.02130528436766994], [", w ,", 0.021287458876783835], [") ) and", 0.021253734525103495], ["#INDENT# for y in", 0.021184546006411058], ["k + 1 )", 0.021161407565984728], ["( b +", 0.021116508365189985], ["= list ( range", 0.02104681234646363], ["b ) //", 0.021035786512103128], ["lambda x :", 0.021031840861268546], ["none", 0.021024311139150847], ["b , c ,", 0.020999350311483395], ["0 #NEWLINE# for j", 0.02097341112608288], ["( d ) :", 0.020913861552695624], ["- c )", 0.02079731356908146], ["0 ] ==", 0.020795543980436884], ["[ 0 ] ==", 0.020795543980436884], [") // 2 )", 0.020746426566948813], [", c ,", 0.020717318111784146], ["s1 ,", 0.02068939621943079], ["== '-' : #INDENT#", 0.020600275024863016], ["== '-' :", 0.020600275024863016], ["and s", 0.02059069546211751], ["1 ) for", 0.02039892280285987], ["( x1 ,", 0.020384438748319477], ["!= k", 0.020380609888340805], ["x2 , y2 =", 0.020275467693986957], ["pos -", 0.020228790259087536], ["y3", 0.02022363293854535], ["x4", 0.02022363293854535], ["y4", 0.02022363293854535], ["== '1' : #INDENT#", 0.020169425446711624], ["== '1' :", 0.020169425446711624], ["] != 0 :", 0.020010739969497832], ["\"inf\"", 0.01995024560799396], ["] -", 0.019910950981461204], [", s2", 0.01986162694885788], ["( c ) #NEWLINE#", 0.01971367978899944], ["#NEWLINE# def dfs", 0.01970176601944349], ["#NEWLINE# def dfs (", 0.01970176601944349], ["( ) #NEWLINE# b", 0.019622903208331738], [") : #INDENT# sum", 0.01960824559825365], ["1 , len (", 0.019476148012086043], ["n - 1 #NEWLINE#", 0.019437338523728455], ["( y ) #NEWLINE#", 0.019403940749945274], ["#DEDENT# r", 0.019403472066423105], ["print ( 0 )", 0.01935414780331239], ["1 , 0", 0.019340866012251982], ["print ( c", 0.019320102229728634], ["+ 1 <=", 0.019282651421561967], ["0 and", 0.019265901127722355], ["+= d [", 0.01921493283212584], ["-1 #NEWLINE# for i", 0.019189988379587946], [": #INDENT# for y", 0.01911761441704389], ["#INDENT# for y", 0.01911761441704389], ["d +", 0.01892884551604898], ["- max (", 0.018910210522367063], ["- max", 0.018910210522367063], ["- 1 ] #NEWLINE#", 0.01886859731318957], ["#DEDENT# #DEDENT# return", 0.018585518152036774], ["= b #NEWLINE#", 0.018446999563144068], ["- i *", 0.01844005765715464], ["[ 3", 0.018304716040085243], ["abs ( x -", 0.01829079459497822], ["x2 , y2", 0.01822716517231441], ["factor (", 0.018201341431154518], ["b ) + 1", 0.01820099688204189], [": #INDENT# print", 0.018199710112001236], ["q =", 0.018177582816359672], ["c + 1", 0.018117867862202208], ["and a", 0.01810729653947628], ["float ( \"inf\"", 0.018098987184179363], ["float ( \"inf\" )", 0.018098987184179363], ["c [ 0 ]", 0.0180702930629369], ["c [ 0", 0.0180702930629369], ["= max", 0.018068543537548894], ["== m", 0.01805427000503291], ["[ y", 0.018024488784226026], [": #INDENT# k", 0.017973271599263055], ["add (", 0.01797313120821565], ["list ( set (", 0.01790601934803319], ["list ( set", 0.01790601934803319], ["2 == 0 :", 0.017853351997798205], ["else : #INDENT# for", 0.01783003126449908], ["* 3", 0.01765436558844659], ["y + 1", 0.017591579987430505], ["range ( n ,", 0.017575463218125347], ["s2 ,", 0.017545862641468114], ["- a [ i", 0.017486127633339954], ["0 , len (", 0.017480593914665426], ["0 , len", 0.017480593914665426], ["ans +", 0.01747763623715387], ["#INDENT# graph", 0.017454282205368318], [": #INDENT# graph", 0.017454282205368318], ["1 , len", 0.0174181814866751], ["( k ) :", 0.017377182965956337], ["m = max", 0.017375190798476714], ["m = max (", 0.017375190798476714], ["y +", 0.017254702178673063], ["graph [ u", 0.01721496467244174], ["graph [ u ]", 0.01721496467244174], ["#INDENT# print (", 0.01718352018106239], ["#NEWLINE# if m", 0.017144214718741228], ["[ [ 0", 0.017115317435668305], ["( a - b", 0.01706194238665787], ["high", 0.017005994277800873], ["n ) #NEWLINE#", 0.01700304857794586], [", key =", 0.01695811930220835], [", key", 0.01695811930220835], ["#NEWLINE# #DEDENT# return res", 0.016947570714006616], ["a ] )", 0.01689099142956099], ["h [ 1", 0.01678780597840435], ["print ( n )", 0.016717344765813102], ["diff =", 0.016700319139010166], ["k >", 0.016652947395459233], ["i for i in", 0.016633677115310587], ["y #NEWLINE#", 0.016450920374341822], ["t in", 0.016438962194671024], ["] : #INDENT# return", 0.016345699751456146], [") #NEWLINE# dp =", 0.01630126786439266], ["count = 0", 0.01625169986429734], ["count = 0 #NEWLINE#", 0.01625169986429734], ["g = [", 0.016079189261740425], ["range ( k )", 0.015990310700639714], ["n ] =", 0.015965960442796107], ["= g [", 0.015964847240248534], ["b [ j", 0.01591572545209837], ["[ 0 ] >", 0.015776996181715856], ["0 ] >", 0.015776996181715856], ["[ v ] :", 0.01574825305458815], ["] == s [", 0.015698027229989628], ["= w", 0.0156895201592889], ["#NEWLINE# #DEDENT# #DEDENT# return", 0.015685535530563743], ["#NEWLINE# for k", 0.015575489959451664], [") !=", 0.015534600030052775], ["w [", 0.01547004355003496], ["* len (", 0.015315256299487047], ["p = 0 #NEWLINE#", 0.015220125134084796], ["#NEWLINE# p = 0", 0.015220125134084796], ["2 , 0", 0.015132183190814366], ["= 1 #NEWLINE# while", 0.015093235838104416], ["- s", 0.015065579473534403], ["( ) #NEWLINE# if", 0.015060044460492918], ["max ( a", 0.01503555361463318], ["* ans", 0.01498250574957136], ["true #NEWLINE#", 0.014918035385141325], ["( n ,", 0.014868118608994792], ["1 <", 0.014857327394713906], ["#INDENT# if f", 0.01481822035160635], [": #INDENT# if f", 0.01481822035160635], [") #NEWLINE# k =", 0.014803965958641063], [". copy ( )", 0.01476609216221439], ["( \"inf\"", 0.014742797878566395], ["\"inf\" )", 0.014742797878566395], ["( \"inf\" )", 0.014742797878566395], ["j )", 0.014702785711262496], ["== '-'", 0.01466567978744449], ["r ) ) #NEWLINE#", 0.01466403316167886], ["( num ) #NEWLINE#", 0.014654440229918951], ["2 + 1 )", 0.014650727461731307], [") ==", 0.014617967408933558], ["( 26 )", 0.014574591854094845], ["( 26", 0.014574591854094845], ["k <", 0.014548354304059883], ["s , t", 0.014535689025162344], ["[ i ] .", 0.014516314760332525], ["i ] .", 0.014516314760332525], ["( ( k", 0.01447469532117667], ["twos", 0.014436819465077896], [") #NEWLINE# l .", 0.01436820238282221], ["#DEDENT# c =", 0.014347119539660442], ["#NEWLINE# #DEDENT# c =", 0.014347119539660442], ["0 : #INDENT# ans", 0.014297193420549015], ["#NEWLINE# elif", 0.014277464061407888], ["#INDENT# if p [", 0.01426708016795242], [") #NEWLINE# sum =", 0.014212285768507135], ["== s [ i", 0.01418007649684747], ["append ( (", 0.014075275102047214], [". append ( (", 0.014075275102047214], ["] [ m", 0.014069864072972388], ["'b' )", 0.01405237867079384], [", len ( a", 0.014002460708916527], ["= x *", 0.013933349840343228], ["h .", 0.013882184398862667], ["[ b ]", 0.01385803390350802], ["x ] ==", 0.013796098015382686], ["[ x ] ==", 0.013796098015382686], ["def solve ( n", 0.013737966880752992], ["( m -", 0.013698818452858929], ["] >= 0 :", 0.013534507799119057], ["( q", 0.013528986820708988], ["1 ] ) )", 0.013417399627770079], [") : #INDENT# a", 0.013405811881639425], ["#INDENT# if v", 0.01338097420957391], ["second", 0.013368515049099132], ["i ] == '1'", 0.013337463591367147], ["x [ 0 ]", 0.01331996317493172], ["x [ 0", 0.01331996317493172], ["] ) *", 0.01328589592524583], ["s1 , s2", 0.013284362794470293], [". find", 0.013231013618007234], [". find (", 0.013231013618007234], ["none : #INDENT#", 0.013206325481387561], ["none :", 0.013206325481387561], ["i >", 0.013204472365078287], ["] == s", 0.013018519254976265], ["+ 1 , i", 0.012961320698325014], ["x += 1 #NEWLINE#", 0.012922674249542965], ["x += 1", 0.012922674249542965], ["c :", 0.012855190210447443], ["c : #INDENT#", 0.012855190210447443], ["nodes", 0.012655949955648506], ["return true #NEWLINE# #DEDENT#", 0.01261959408364451], ["return true #NEWLINE#", 0.01261959408364451], ["#NEWLINE# s", 0.012547094183143767], ["1 ] :", 0.012517850580577713], ["( q ) #NEWLINE#", 0.012505744150781156], ["'-'", 0.012436203297671792], ["+= d", 0.012433446151584667], ["#INDENT# k =", 0.01240320310433367], [") #NEWLINE# #DEDENT# s", 0.012351896396930758], ["0 : #INDENT# res", 0.012325670971011062], ["j ] ) %", 0.01220950604492592], ["1 : ] )", 0.012197104984389058], ["d ) : #INDENT#", 0.0121501467347137], ["d ) :", 0.0121501467347137], ["#NEWLINE# f", 0.012130046116790449], ["append ( a )", 0.01206460942491035], [". join ( str", 0.01203874273173397], ["join ( str", 0.01203874273173397], ["join ( str (", 0.01203874273173397], ["bfs (", 0.011995742520680709], [". append ( y", 0.011938365638411995], ["append ( y", 0.011938365638411995], ["( r", 0.011916862327442474], ["n - i -", 0.011889035767311746], ["b2 )", 0.011852792747799486], ["n ) ) #NEWLINE#", 0.011837967060450984], [") #NEWLINE# k", 0.011773646704069727], ["sqrt", 0.011742372209295438], ["[ j ] for", 0.011632534906902147], [". copy (", 0.011617041753829526], [". copy", 0.011617041753829526], ["= false #NEWLINE# if", 0.011586638035637512], ["p = 0", 0.011570951189856469], ["#NEWLINE# c +=", 0.011439548161712693], ["#NEWLINE# c += 1", 0.011439548161712693], ["count += 1 #NEWLINE#", 0.011267096260012127], ["count += 1", 0.011267096260012127], ["range ( n -", 0.011217659199333242], ["[ u ] .", 0.011156205382199504], ["u ] .", 0.011156205382199504], [": #INDENT# if p", 0.011128534132565482], ["#INDENT# if p", 0.011128534132565482], ["* len", 0.011098047190902459], ["> n", 0.01105748461405312], ["'", 0.011042956517864496], ["m *", 0.011042814419763604], ["<= x", 0.011036547055177502], [": (", 0.01101048768264223], ["= dp [ i", 0.010840716577831684], ["t = 0 #NEWLINE#", 0.010825532565606585], ["k += 1", 0.010807216600855896], ["k += 1 #NEWLINE#", 0.010807216600855896], ["dir", 0.01074327795603645], ["b , x", 0.01068761251535323], [", x ) #NEWLINE#", 0.01059647146779774], ["( y1", 0.010559461386431004], ["3 ] #NEWLINE#", 0.010519392944613378], [": #INDENT# print (", 0.01046563087042262], ["copy (", 0.01034684696176455], ["== 0 and (", 0.01031045674094994], ["import sys #NEWLINE# def", 0.0103077539763307], [": #INDENT# if abs", 0.010166787372970228], ["#INDENT# if abs (", 0.010166787372970228], ["#INDENT# if abs", 0.010166787372970228], ["y , z =", 0.010156301852791967], [", z =", 0.010156301852791967], ["p ) :", 0.01013143390601571], ["i ] -=", 0.010046304168084854], ["[ i ] -=", 0.010046304168084854], ["#NEWLINE# for v", 0.010045273768590652], ["#INDENT# if l", 0.010029622612917052], [": #INDENT# if l", 0.010029622612917052], ["// 2 ,", 0.010002250464987778], ["d - 1 )", 0.009979202328249788], ["( d - 1", 0.009979202328249788], ["tuple", 0.009914264239894725], ["+ 1 , j", 0.009843886109848501], [") - 1 )", 0.009803262560572809], ["\"yes\" ) #NEWLINE# for", 0.009703687298641558], [") #NEWLINE# if s", 0.009697556164808276], ["+ y", 0.009654028748267401], [", t ) #NEWLINE#", 0.009544433045927277], ["y2 =", 0.009489891231409774], ["p [", 0.009481019373036798], ["dfs (", 0.009409129490423957], ["dfs", 0.009409129490423957], [", s", 0.009310756255790479], ["] #NEWLINE# dp [", 0.0092592714192356], ["i ] +=", 0.009216745167139545], [") #NEWLINE# c =", 0.009179740033206134], ["( p ,", 0.009165258395662481], ["m //", 0.009155074883873427], ["f ,", 0.009089042742498776], ["n * (", 0.00897578552120502], [") == 1", 0.00895454615328588], ["- i + 1", 0.008861167664623347], ["false #NEWLINE# if", 0.008821107510411843], ["( a ) //", 0.008699670988015568], ["* q", 0.008513009053817387], ["q ) #NEWLINE#", 0.008505411116111429], ["print ( count", 0.008503234774112047], ["( count )", 0.008503234774112047], ["print ( count )", 0.008503234774112047], ["( count", 0.008503234774112047], ["( count ) #NEWLINE#", 0.008503234774112047], ["r #NEWLINE#", 0.008497818007594889], ["count +=", 0.008427991165803221], ["0 and (", 0.008363040686080996], ["append ( i )", 0.008338049545149755], ["j ) #NEWLINE#", 0.008307811049844191], ["'c'", 0.008303975960929926], [") #NEWLINE# for j", 0.008231049919088707], ["#NEWLINE# #DEDENT# res", 0.008175781717931246], [", y )", 0.008168740256249493], ["2 * (", 0.00812097546376239], ["9", 0.008092784023781961], ["= 0 )", 0.008085725966039693], ["j ) )", 0.008068152599245445], ["j ) ) #NEWLINE#", 0.008068152599245445], ["( x1", 0.007968937377976453], [", 0 ) ]", 0.007875808090796231], ["if flag", 0.007833195630646486], ["- 1 #NEWLINE# #DEDENT#", 0.007826803424103648], ["none #NEWLINE#", 0.007769222777688881], ["= x", 0.007586648820744499], ["d ) #NEWLINE#", 0.007513502849248095], ["2 **", 0.0074317546832043165], ["- i +", 0.007316564632420843], ["polynomial", 0.007308188161366968], ["== a [ i", 0.007279926834433964], ["1 #NEWLINE# y", 0.00726657668413128], ["k % 2", 0.0072632303451983906], ["return true", 0.0072127077631213765], [", { }", 0.006985923980546869], ["b : #INDENT# return", 0.006949225133470951], ["d ) )", 0.006912697951994446], ["#NEWLINE# l .", 0.006670143048721787], ["x [ i", 0.006660483632269679], ["g [ i ]", 0.006652074556015682], ["return 1", 0.006649472421756333], ["u , v )", 0.006594176234363605], ["= true #NEWLINE#", 0.006579384951417017], ["] : #INDENT# p", 0.006564335321040016], [", m ,", 0.00653686299320231], ["#INDENT# e", 0.006438797307784278], [": #INDENT# e", 0.006438797307784278], ["#INDENT# return false #NEWLINE#", 0.0063742936927862655], ["b ) +", 0.006351262834195808], ["i in s :", 0.0063298189128313575], ["bfs", 0.00629362884514561], ["len ( ans", 0.00629101823710543], ["len ( ans )", 0.00629101823710543], ["* m )", 0.006169879148427194], ["in c", 0.006106367379848165], ["] #NEWLINE# dp", 0.005999885282509997], ["( sum", 0.005982414868874747], ["w [ i ]", 0.005971933739781375], ["w [ i", 0.005971933739781375], ["j ] for", 0.005942074344530298], [", a , b", 0.005858789579415427], ["if u", 0.005841947983067915], ["( 2 )", 0.005834305033523721], ["for l in range", 0.005809604888023346], ["l in range (", 0.005809604888023346], ["l in range", 0.005809604888023346], ["+= f", 0.00575858818983211], ["d :", 0.005536368687512513], ["#NEWLINE# count = 0", 0.00547429162330053], ["= len ( s", 0.005396504803236038], ["] = b", 0.005338992732353966], ["append ( y )", 0.005280816786992147], ["( s2", 0.005276610353641936], ["lines", 0.00519881812954182], ["j ] #NEWLINE# #DEDENT#", 0.005184483300145781], ["a [ i +", 0.005090619590605596], ["if f", 0.004989817175896743], ["#NEWLINE# dp =", 0.004950763530491649], ["#DEDENT# #DEDENT# #DEDENT# return", 0.004897953056809429], ["( 1 , 0", 0.004848711810969335], ["1 : #INDENT# return", 0.004737656435396252], ["i ] == 1", 0.004633001607829052], ["] = a [", 0.004602795176660867], ["h #NEWLINE#", 0.004504355193038337], [": #INDENT# a .", 0.00446627091769701], ["#INDENT# a .", 0.00446627091769701], [". stdin . readline", 0.004326229173065988], ["( ( n -", 0.004306872094143718], ["== 0 else", 0.004304476643083757], ["= max ( a", 0.004248266366930499], ["m", 0.0042028217512963964], ["j ] [ 1", 0.004122066734759322], ["#NEWLINE# for y", 0.00406840518862034], ["#NEWLINE# for y in", 0.00406840518862034], ["n *", 0.004023010547386057], ["[ j ] +", 0.003991405143231109], ["[ 1 ] ]", 0.0039227202645793005], ["#INDENT# if l [", 0.003903042706082922], ["#NEWLINE# g = [", 0.003856626095207317], ["pop ( 0 )", 0.0038351204729088315], [". pop ( 0", 0.0038351204729088315], ["pop ( 0", 0.0038351204729088315], ["dp = [", 0.0035008967852638555], ["#NEWLINE# count", 0.003477479904790936], ["#DEDENT# #DEDENT# if not", 0.0034682526067028774], ["#INDENT# k", 0.003401790841511502], ["4 ]", 0.003384688996323475], ["x = 0 #NEWLINE#", 0.003377018770554654], ["x = 0", 0.003377018770554654], ["!= -1", 0.003327159608622568], ["item", 0.0033233072996910933], ["( d -", 0.0032220861728246048], ["26", 0.0030828040981784877], ["b == 0 :", 0.003075981052279781], ["[ m ]", 0.00307507987980465], ["// a", 0.0030078399543310725], ["] ) ** 2", 0.0029815732330441542], ["y2 )", 0.002972166969449429], ["#NEWLINE# for k in", 0.002957477255602526], ["] = 2", 0.0029566339958495046], ["[ 1 ] and", 0.0029420825768515994], ["( s [ i", 0.0028762681711888265], ["- 1 : #INDENT#", 0.002815114894676553], ["] #NEWLINE# #DEDENT# elif", 0.002763641431809233], ["g [ u", 0.0027522044119156195], ["g [ u ]", 0.0027522044119156195], ["] > 0", 0.0027118764638762783], ["3 ] ) #NEWLINE#", 0.002693226796438096], [") ] #NEWLINE# dp", 0.0026831354509242464], ["n , x =", 0.002664017366645642], ["+ 2 )", 0.002658104914315159], ["( ) ] )", 0.0025550150995057993], ["sys #NEWLINE# def", 0.0025238627735357346], ["= [ -1", 0.002387845773999985], ["else : #INDENT# m", 0.002318371929265029], ["[ 0 ] :", 0.002294126177262749], [") #NEWLINE# a2", 0.002285427139177851], ["] ) for i", 0.002234678181835576], ["w )", 0.0021116156292198623], ["d == 0 :", 0.0020685757283939827], ["d == 0", 0.0020685757283939827], ["!= b", 0.002062387196682423], ["'1' : #INDENT#", 0.002030510948992377], ["[ i ] ]", 0.0019100671206723078], ["i ] ]", 0.0019100671206723078], ["i <=", 0.0018835170118988017], ["= [ -1 ]", 0.0017412892543523448], ["= -1 #NEWLINE# #DEDENT#", 0.0017258618320998037], ["( h )", 0.0016847529643295221], ["next", 0.0016681400992011567], ["b and", 0.0016498671320039912], ["( f [", 0.001591113403016437], ["if c [", 0.0015898764934531853], ["- s .", 0.0015149004317393964], ["- s . count", 0.0015149004317393964], ["c [ j", 0.0014722675091707821], ["c [ j ]", 0.0014722675091707821], [", b ,", 0.001453112901064741], ["= -1 #NEWLINE# for", 0.001412906750612515], ["def dfs", 0.0014078679465827338], ["def dfs (", 0.0014078679465827338], ["while a", 0.0014060628168085323], ["+= 2", 0.0013360018012939666], ["% n", 0.0013191994558538068], ["v ] : #INDENT#", 0.0012754804491596297], ["v ] :", 0.0012754804491596297], ["= dfs", 0.001269609791211827], ["= dfs (", 0.001269609791211827], ["r =", 0.0012388633765041512], [") or", 0.0010375202732968661], ["0 ) ]", 0.0009909002277971545], [". append ( a", 0.000970455965573499], ["append ( a", 0.000970455965573499], ["x :", 0.0009661843330780301], ["#NEWLINE# print ( a", 0.0009480855357132005], ["a >", 0.0009220336775441186], ["for b in", 0.0008968658752159961], ["+ 1 ) for", 0.0008429397281524012], ["( x , y", 0.0008399625798690588], ["[ 1 ] ,", 0.0008009256850256568], ["[ a [ i", 0.0007781495431089766], ["'a' ,", 0.0007702983631961101], ["if f [ i", 0.0006876132993202132], [") // 2 +", 0.0006854724114682582], ["range ( l", 0.0005668323682637443], ["in range ( l", 0.0005668323682637443], ["b , c =", 0.0005371619345880403], ["( 'b'", 0.00048706379113432746], [", y2 =", 0.0004854055868985977], [". keys", 0.0004440184761974427], ["keys ( )", 0.0004440184761974427], [". keys ( )", 0.0004440184761974427], [". keys (", 0.0004440184761974427], ["keys (", 0.0004440184761974427], ["#DEDENT# res =", 0.00042088290809003863], ["3 :", 0.000399840469722749], [", v )", 0.000388276736214733], ["t .", 0.00037380469560686094], [") #NEWLINE# if n", 0.00033456255234654], ["condition", 0.0003129689669475606], ["edges )", 0.00026494309881912754], ["#DEDENT# print ( \"yes\"", 0.00020588234512008573], ["1 : ] #NEWLINE#", 0.000157197185230558], ["x = [", 0.0001488177008636375], ["( 1 )", 0.00014383325195864926], ["j ] ==", 8.729876608701176e-05], ["[ j ] ==", 8.729876608701176e-05], ["else : #INDENT# return", 7.888254947595427e-05], ["#INDENT# for k", 2.829384102451947e-05], [": #INDENT# for k", 2.829384102451947e-05], ["#INDENT# for k in", 2.829384102451947e-05], ["[ ] for _", -9.710427242326226e-05], ["= 3", -0.00014300654921426342], [") : #INDENT# m", -0.00018211166340188967], ["- 1 ] ==", -0.00020112811315207093], [", 2 ) :", -0.00020193955914489097], ["dp = [ [", -0.00023110506173819518], ["* m #NEWLINE#", -0.0003367316832338643], [": ] ) #NEWLINE#", -0.00035160558862420114], ["i , j )", -0.00037466319827929415], ["#INDENT# print ( *", -0.0004377368538350574], ["for b", -0.00045195389086043604], ["use", -0.0005291282963644935], ["= f [", -0.000680590358081705], ["if h", -0.0007045534663667565], ["2 ] ,", -0.0007440290608734488], [") ) ) for", -0.0009988867726194667], ["b + 1 )", -0.001023897150148674], ["= s [ :", -0.0010241134601877012], ["#DEDENT# for x", -0.0010265129610463868], ["b + c", -0.0010459402569011045], ["print ( k", -0.0010468820829269507], ["] #NEWLINE# c", -0.0010555767616640614], ["return false #NEWLINE# #DEDENT#", -0.0011340035688594877], [") * pow", -0.0011428238053981996], [") * pow (", -0.0011428238053981996], ["== 0 and a", -0.001167527037550062], ["or y", -0.0011695188493332587], ["* pow", -0.001275240558678852], ["* pow (", -0.001275240558678852], ["i ] *", -0.0013070181300893595], ["len ( l", -0.0015172031668439293], ["len ( l )", -0.0015172031668439293], ["p ,", -0.001534114555729023], ["= l [", -0.0015485550177654565], ["range ( b", -0.001583563417035602], ["steps", -0.0016058692840093787], ["count )", -0.0016949457859698543], ["count ) #NEWLINE#", -0.0016949457859698543], ["students", -0.0017044996821688721], ["[ pos ]", -0.0017128698357030043], ["pos ]", -0.0017128698357030043], ["- 3", -0.0017357278980103693], ["round", -0.0017438184527573636], ["3 ] )", -0.0017744553399178502], [". add ( a", -0.0019390076484416944], ["0 if", -0.001958080593245134], [", j ) )", -0.0019581667217319], ["* cnt", -0.001962413203166654], ["+ dp", -0.0019773018924341707], ["i ] ] +=", -0.0020045814209675933], ["( j ,", -0.002076406718307811], ["for l in", -0.0020848262511197267], ["l in", -0.0020848262511197267], ["] ) #NEWLINE# a", -0.0020955098965994958], ["10 +", -0.0022409981503736564], ["#NEWLINE# l = list", -0.0022419602767259454], ["p ) : #INDENT#", -0.0023075514206943397], ["is none", -0.0023445193864976392], ["cost [", -0.002359094029727573], ["dp [ i ]", -0.0023791253415786934], ["sys .", -0.0025491746597630215], ["#DEDENT# return true #NEWLINE#", -0.0025638101034704502], ["n + m", -0.002571566383048406], ["] = i #NEWLINE#", -0.002621475632963689], ["v #NEWLINE#", -0.0026448445401376615], ["n + 1 #NEWLINE#", -0.0026680182121093373], ["b #NEWLINE# #DEDENT# #DEDENT#", -0.0027099054983409066], ["> a", -0.002731891082531503], ["[ 3 ] :", -0.0028596906069576905], ["== '1'", -0.0028761710411915977], ["[ r -", -0.002901956937734815], [", r )", -0.002953755813280338], ["#NEWLINE# w", -0.003093764349941733], ["% y", -0.003102924703823826], [": ] )", -0.00313741455919372], ["#NEWLINE# dfs", -0.0031404349123820407], ["#NEWLINE# dfs (", -0.0031404349123820407], [") : #INDENT# x", -0.0032404332691555087], ["i ] [ 1", -0.0032495893292521266], ["#DEDENT# #DEDENT# return true", -0.0033415144860417076], ["#NEWLINE# for v in", -0.003352130071520693], ["u in", -0.003355947290993733], ["% mod ) #NEWLINE#", -0.0033802295859285906], ["#DEDENT# elif a [", -0.003400476739641807], ["elif a [", -0.003400476739641807], [": #INDENT# return false", -0.003420616132036202], ["a1 *", -0.003503869070558157], ["a [ i -", -0.003507915221972758], ["2 ] :", -0.003509474151934382], ["2 ] : #INDENT#", -0.003509474151934382], ["0 ) #NEWLINE# print", -0.00355943095500083], ["b == 0", -0.0036308557446486154], ["#NEWLINE# n = len", -0.0036492665958768613], ["#NEWLINE# #DEDENT# c", -0.0036728654048012004], ["^=", -0.0037361194395073767], ["str ( int", -0.003748864166116572], ["str ( int (", -0.003748864166116572], ["tuple (", -0.003757324568488254], ["3 ) #NEWLINE#", -0.00385183093802466], [": #INDENT# c [", -0.003944925470428166], [": #INDENT# if b", -0.003959505849010672], ["1 , j", -0.003966694903037167], ["] = [ ]", -0.003983845393642235], ["== b", -0.004001627039666844], ["= a .", -0.0040028000983622905], ["return false #NEWLINE#", -0.0040200832377583285], ["[ s [ i", -0.00412499888598797], ["} #NEWLINE# #DEDENT#", -0.004211508672628318], ["] [ n", -0.004274008032738349], ["print ( f", -0.004281658919182258], ["if b [", -0.004327024091963526], ["== '0'", -0.004337148223138993], ["b2 =", -0.004394994903419399], ["#NEWLINE# x = 0", -0.004399131755911994], [": #INDENT# dp", -0.004426855457043071], ["#INDENT# dp", -0.004426855457043071], ["and s [ i", -0.004449925192135638], ["v ) #NEWLINE# #DEDENT#", -0.004494963031005615], ["#INDENT# return false", -0.0045944622180754255], ["l ) )", -0.004596026250040481], ["#INDENT# return 0 #NEWLINE#", -0.00459858633271513], ["#INDENT# return 0", -0.00459858633271513], [": #INDENT# return 0", -0.00459858633271513], ["0 ] !=", -0.004643370478719683], ["[ 0 ] !=", -0.004643370478719683], ["#NEWLINE# #DEDENT# if f", -0.0047202629214657555], ["1 or", -0.004761392043430091], ["sys #NEWLINE# n =", -0.004821124889649556], ["#NEWLINE# m = int", -0.0048645778806361995], ["if v", -0.004921261104787941], ["if y", -0.004928582817815568], ["j + 1 )", -0.004929332104795471], ["x >", -0.005015626456539182], ["( s1", -0.005126348531629166], ["[ pos", -0.005192372399320929], ["x if", -0.0052271520222263775], ["1 #NEWLINE# for", -0.005287386452168697], ["10 ** 9", -0.005374792191375568], ["** 9", -0.005374792191375568], ["n or", -0.005382769150707524], ["center", -0.005399436182632322], ["b ) )", -0.0054065635493024105], ["and j", -0.005408560431748362], ["z )", -0.00542384700253122], ["( stars", -0.0055051751018630295], ["[ kt", -0.005583877178117196], ["in g", -0.005675081429175442], ["if k ==", -0.00569113540314915], [", c", -0.00577860341710432], ["#INDENT# if b", -0.005780261320954489], ["#INDENT# return 1", -0.005784290248397528], [": #INDENT# return 1", -0.005784290248397528], ["l . append", -0.005790075977337253], ["l . append (", -0.005790075977337253], ["#INDENT# c [", -0.0058591897968862], ["j ] #NEWLINE#", -0.005951466028887192], [", {", -0.00595659084322728], [", t ,", -0.006008688202265733], ["] ] +=", -0.006014385339192283], ["sum =", -0.006056827589684082], [", 5 ,", -0.006150687688906227], ["1 ] [ y", -0.0061649220682857405], ["[ ( i ,", -0.006189584520586696], ["k , a", -0.006213129622800606], ["find (", -0.006235641009920549], ["g )", -0.0063598348773590396], ["a ) ) #NEWLINE#", -0.006366306284464675], ["clen", -0.006381573917848222], ["d ==", -0.00639545862224533], ["[ 1 ] <=", -0.0064394695555372305], ["for k in", -0.006446458716106772], ["3 ]", -0.0064842069368085935], ["numpy", -0.006510494516578547], ["numpy as np #NEWLINE#", -0.006510494516578547], ["numpy as np", -0.006510494516578547], ["np #NEWLINE#", -0.006510494516578547], ["import numpy", -0.006510494516578547], ["numpy as", -0.006510494516578547], ["import numpy as", -0.006510494516578547], ["import numpy as np", -0.006510494516578547], ["as np #NEWLINE#", -0.006510494516578547], ["as np", -0.006510494516578547], ["0 ] ) -", -0.006527548169625496], ["i ] ) +", -0.0066562179783269506], ["#DEDENT# k =", -0.006662139299997174], ["smallest", -0.00666839563403159], ["<= n", -0.006811289922695794], ["( r -", -0.006816529780604219], ["a -=", -0.006836401145928204], ["append ( a [", -0.0068680023466979635], [") ) for", -0.00692819066716152], ["while k", -0.0070129736816613025], ["m , a", -0.007035076338516783], ["k ) #NEWLINE#", -0.007073196156692486], ["i ==", -0.0070810641628063], ["[ 3 :", -0.007134845352453132], ["+ 2 ) ]", -0.0071792706575792495], ["* k #NEWLINE#", -0.007241261006548937], ["10 ** 6", -0.0072527336420385256], ["** 6", -0.0072527336420385256], ["( ) #NEWLINE# c", -0.0072593693610950956], ["#DEDENT# return true", -0.007268147010769778], ["one", -0.007347041136130128], ["= max ( dp", -0.007449150949112709], ["b1 )", -0.007524398315009657], ["modpow (", -0.0077132842064146535], ["depth [", -0.0077132842064146535], ["modpow", -0.0077132842064146535], ["#DEDENT# a ,", -0.007751048165180512], ["#NEWLINE# n ,", -0.0077711553058933255], ["6 ]", -0.00782292728111074], ["n ]", -0.007842767305123798], ["v ) )", -0.007848560356179987], [") ] = 4", -0.007898022128271624], ["4 #NEWLINE# ans", -0.007898022128271624], ["] = 4 #NEWLINE#", -0.007898022128271624], ["] = 4", -0.007898022128271624], ["4 #NEWLINE# ans [", -0.007898022128271624], ["a/b", -0.007940121326302651], ["2 ] #NEWLINE#", -0.0079605771523186], ["p [ 0", -0.007960854906233147], ["kt", -0.007976967397310278], ["heapq .", -0.008017114956542946], ["i ] ) )", -0.008099834891488123], ["m3", -0.008103644906938398], [") + 1 #NEWLINE#", -0.008186516285794553], ["== len", -0.008190250174453392], ["== len (", -0.008190250174453392], ["x + 1 ]", -0.008219125330955018], ["for k", -0.008247714477740694], ["#NEWLINE# b . append", -0.008257281886691179], ["b ) #NEWLINE# #DEDENT#", -0.008349377309996747], ["#NEWLINE# a2", -0.008594151151320818], [", x ) :", -0.00859772427717337], ["jaws", -0.008666665898867321], ["0 #NEWLINE# break #NEWLINE#", -0.008803802010053596], ["0 #NEWLINE# break", -0.008803802010053596], ["i ] ] =", -0.008811520447032112], ["n #NEWLINE#", -0.008814886750858671], ["depth", -0.008815181950188175], ["max_w [ k", -0.008815181950188175], ["+= sum (", -0.008882778817485172], ["discard (", -0.008972529444528563], [". discard", -0.008972529444528563], [". discard (", -0.008972529444528563], ["discard", -0.008972529444528563], ["+= 1 #NEWLINE# if", -0.008976392633262456], ["h , w", -0.009017413363627732], ["o1", -0.009026311003738997], ["m * k", -0.009100088286456687], ["0 #NEWLINE# ans", -0.009133923773418385], ["= 0 #NEWLINE# ans", -0.009133923773418385], ["* ( n -", -0.009344052774209972], ["] == a", -0.009380361644394411], ["] == a [", -0.009380361644394411], ["== a [", -0.009380361644394411], ["food", -0.009394316653125444], ["#INDENT# ans += 1", -0.009406366101728063], ["( m *", -0.009530745639910859], ["c50", -0.009539152274889565], ["fifty", -0.009539152274889565], ["hundreds", -0.009539152274889565], ["c100", -0.009539152274889565], [": #INDENT# x", -0.00959993865527848], ["#INDENT# x", -0.00959993865527848], ["q #NEWLINE#", -0.009627432674776414], ["] + 1 ,", -0.009706164939856432], ["guy [ 3", -0.009713571607654528], ["dists [ k ]", -0.009713571607654528], ["dists [ k", -0.009713571607654528], ["guy [ 3 ]", -0.009713571607654528], ["] : #INDENT# if", -0.009722570366285382], [", w ) #NEWLINE#", -0.009793219852778349], ["s : #INDENT# if", -0.009848250721118024], ["( ) #NEWLINE# q", -0.009884413080151394], ["parent [ k ]", -0.009917079693961698], ["* ( n +", -0.009920842035561322], [", l ,", -0.010022356154196863], ["[ s ]", -0.010065867452589585], ["#INDENT# ans = 0", -0.010101465778187116], ["( l -", -0.010102590036422316], ["#INDENT# dp [", -0.010111833119114864], [": #INDENT# dp [", -0.010111833119114864], ["ans [ ( 2", -0.010154599879206376], ["[ ( 2 ,", -0.010154599879206376], [", 1 ) ]", -0.010154599879206376], [", 2 ) ]", -0.010154599879206376], ["0 ) ] =", -0.010154599879206376], ["1 ) ] =", -0.010154599879206376], ["[ ( 1 ,", -0.010154599879206376], ["ans [ ( 0", -0.010154599879206376], ["ans [ ( 1", -0.010154599879206376], ["2 ) ] =", -0.010154599879206376], ["if 1 <= rl", -0.010158024937096435], ["+ b < rr", -0.010158024937096435], ["b < rr", -0.010158024937096435], ["rl <= a +", -0.010158024937096435], [") #NEWLINE# b", -0.010219843525253113], ["if i <", -0.010279136047508705], ["] #NEWLINE# h", -0.010282917958645084], ["#INDENT# w [", -0.010319936962997291], ["<= b2 [", -0.010319936962997291], ["0 ] <= w", -0.010319936962997291], ["r_in [", -0.010319936962997291], ["<= r_in [", -0.010319936962997291], ["<= r_in", -0.010319936962997291], ["<= r_out", -0.010319936962997291], ["1 ] <= w", -0.010319936962997291], ["] <= r_out [", -0.010319936962997291], ["<= b1 [", -0.010319936962997291], [": #INDENT# w [", -0.010319936962997291], ["( r_out [", -0.010319936962997291], ["] <= r_in [", -0.010319936962997291], ["] <= b1", -0.010319936962997291], ["] <= b1 [", -0.010319936962997291], ["( r_out", -0.010319936962997291], ["] <= r_out", -0.010319936962997291], ["] : #INDENT# w", -0.010319936962997291], ["] <= b2", -0.010319936962997291], ["<= r_out [", -0.010319936962997291], ["] <= r_in", -0.010319936962997291], ["] <= b2 [", -0.010319936962997291], ["[ 2 :", -0.010355268413854335], [") // 2", -0.01035527584890239], [") : #INDENT# f", -0.010356338421715364], ["j ] [ 0", -0.010454100950136918], ["== 0 )", -0.010515251691303152], ["golorp [", -0.010528306040807876], ["dp [ i", -0.01056467820008409], ["1 ] <=", -0.010599348572490161], ["[ ] #NEWLINE# #DEDENT#", -0.01063047151809513], ["while n %", -0.010668486387189235], ["= [ 1 ]", -0.01068552132129566], ["] [ v ]", -0.010745754936665092], ["parent", -0.010760493688819157], ["] + b", -0.01083972792857043], ["len ( d )", -0.010881861524000815], [", 10", -0.010884107891952578], ["j1", -0.010901888314159502], ["i1", -0.010901888314159502], ["max ( dp", -0.010902526330909691], [") [ : :", -0.010951717169921788], ["#INDENT# s .", -0.010964585160461131], [": #INDENT# s .", -0.010964585160461131], ["decimal", -0.010976410617747161], ["k ] [ v", -0.01101897743773522], ["#NEWLINE# q = [", -0.011053058673774346], ["{ } ,", -0.011101224694462314], ["{ } , {", -0.011101224694462314], ["] , guy [", -0.011101224694462314], ["] , guy", -0.011101224694462314], ["} , { }", -0.011101224694462314], ["guy [ 2", -0.011101224694462314], ["guy [ 2 ]", -0.011101224694462314], ["'1' :", -0.011140310167474094], ["#NEWLINE# s = [", -0.011143626238152361], ["'('", -0.011155902629019703], ["1 for x", -0.011155961431740243], [", a =", -0.01115798074957426], ["matrix", -0.011198639266194525], ["ans = (", -0.011212520291037394], ["5 #NEWLINE# ans", -0.011282888754673748], ["5 #NEWLINE# ans [", -0.011282888754673748], ["] = 5", -0.011282888754673748], ["] = 5 #NEWLINE#", -0.011282888754673748], [") ] = 5", -0.011282888754673748], ["= 5 #NEWLINE# ans", -0.011282888754673748], ["in t", -0.011313634218859543], [") : print (", -0.0113944430577392], [") : print", -0.0113944430577392], ["[ [ [", -0.011403810284839333], ["[ 1 ] >", -0.011481563924398221], ["1 , y", -0.011492771132763353], ["op", -0.011497376541368867], ["b1 =", -0.011507289618568322], ["#NEWLINE# q . append", -0.011538492674186914], ["+ b : #INDENT#", -0.01160917135668164], ["rr <= a", -0.01160917135668164], ["+ b :", -0.01160917135668164], ["1 <= rr", -0.01160917135668164], ["< rr", -0.01160917135668164], ["<= rr", -0.01160917135668164], ["a + b and", -0.01160917135668164], ["a + b :", -0.01160917135668164], ["+ b and", -0.01160917135668164], ["else 0 #NEWLINE#", -0.011611954799665826], ["a [ :", -0.01162765224677727], ["[ 3 ] )", -0.011701650291824173], ["j #NEWLINE#", -0.011702049581982956], ["1 ] ]", -0.011794466298261598], ["1 ] .", -0.011838487990580557], ["[ list ( map", -0.011865996022891921], ["%= mod", -0.01187498786714018], ["%= mod #NEWLINE#", -0.01187498786714018], ["2 ] ]", -0.011892647372839201], ["[ 2 ] ]", -0.011892647372839201], ["if i ==", -0.011905094531739751], ["x !=", -0.01196461806094341], ["readline ( ) .", -0.011978955175563943], ["] #NEWLINE# if", -0.012008412285887386], ["c1 [", -0.012020176447389643], ["] , b [", -0.012024718879410408], ["modfraction (", -0.012027911069731358], [". n *", -0.012027911069731358], ["self . n", -0.012027911069731358], ["'a' *", -0.012031954305150317], ["= x [", -0.012051344514372665], [", p ,", -0.012053865181922026], ["[ 3 ] #NEWLINE#", -0.012075447006797418], ["max ( 1", -0.012103811169114059], ["max ( 1 ,", -0.012103811169114059], ["max_w [", -0.012120875181508744], ["parent [ k", -0.012120875181508744], ["y ] #NEWLINE#", -0.012136652791315613], ["d #NEWLINE# #DEDENT# #DEDENT#", -0.012196688814829479], ["** 2 +", -0.012210779889755212], ["distlist", -0.012212167802302219], ["[ ( 1", -0.012234605918149212], ["add ( a", -0.012262759462060091], ["self . level [", -0.012265452434896107], [". level [", -0.012265452434896107], ["left =", -0.012286360615365205], ["0 for i", -0.012330211658985077], ["0 for i in", -0.012330211658985077], ["#NEWLINE# if n", -0.012333667648403296], [") ] for j", -0.012373577306466673], ["0 ] [ 1", -0.012424235889776862], ["file", -0.012424567956198444], ["best [", -0.012488877781270107], ["[ tup", -0.012488877781270107], ["[ tup ]", -0.012488877781270107], ["+ dists [", -0.012488877781270107], ["+ dists", -0.012488877781270107], ["] + dists [", -0.012488877781270107], ["] [ tup", -0.012488877781270107], ["] + dists", -0.012488877781270107], ["tup ]", -0.012488877781270107], ["] [ tup ]", -0.012488877781270107], ["#DEDENT# if f", -0.01253649321739273], ["a ) #NEWLINE# #DEDENT#", -0.012651429999408575], ["s ) ]", -0.012675750668661539], ["= n #NEWLINE#", -0.012684134048530131], [", y +", -0.012764214867191051], ["l [ 1", -0.012852998991248815], ["r_in", -0.012899921203746615], [", 2", -0.012904964305525946], ["masks", -0.012926081271179364], ["#INDENT# a = a", -0.012948971010707752], ["b in", -0.012957850868890215], ["0 #NEWLINE# #DEDENT# #DEDENT#", -0.01296871439840858], [") #NEWLINE# ans +=", -0.01297217139838458], ["- rl +", -0.013060317776266846], ["- rl + 1", -0.013060317776266846], ["a + 2 *", -0.013060317776266846], ["rl + 1", -0.013060317776266846], ["rl +", -0.013060317776266846], ["- rl", -0.013060317776266846], ["+ 2 * b", -0.013060317776266846], ["<= rl <= a", -0.013060317776266846], ["( z", -0.013061943067265516], ["t #NEWLINE#", -0.013171024600178381], ["] [ v", -0.013180138458860423], ["b ]", -0.013186569465501601], ["( [ 1 for", -0.013192405326625684], ["max_w", -0.01322277292528226], ["r [", -0.0132324056850924], [") ) #NEWLINE# m", -0.013258465525745377], ["] [ :", -0.013331035884249122], ["( m + 1", -0.013443275550059797], ["inputs [", -0.01345522275563815], ["inputs [ :", -0.01345522275563815], ["] [ w", -0.013507749680388625], ["conditionsraw", -0.0135363934810387], ["8", -0.013560231581189368], ["] = i", -0.013606294552024526], ["[ x + 1", -0.013606502836716898], ["low =", -0.013622396019436671], ["shore ]", -0.01362736039269938], ["shore ] [", -0.01362736039269938], ["= 5 #NEWLINE#", -0.01363457498179287], ["= 5", -0.01363457498179287], ["( x +", -0.013647570161732006], ["( a , b", -0.013655072808164708], ["a = int (", -0.013673918771311466], ["a = int", -0.013673918771311466], ["] * m", -0.01368845495527898], ["// d", -0.013693728974330896], ["( 4 ) :", -0.013725579725335516], ["c =", -0.013732200511800772], [". d % mod", -0.01374618407969298], ["* xf", -0.01374618407969298], ["d % mod #NEWLINE#", -0.01374618407969298], ["d % mod", -0.01374618407969298], ["* xf .", -0.01374618407969298], [". d %", -0.01374618407969298], ["( sol )", -0.01382995445581746], ["( sol", -0.01382995445581746], ["cap", -0.013852658895954916], [", boi", -0.013876530868077892], [", boi [", -0.013876530868077892], ["c2 [", -0.013922900425968016], ["cand2 [ d", -0.013935716265302529], ["cand2 [ d ]", -0.013935716265302529], ["cand2 [", -0.013935716265302529], ["ind1", -0.013935716265302529], ["#DEDENT# c", -0.013954399205709612], ["getperm ( pointlist [", -0.013956763202631107], ["getperm ( pointlist", -0.013956763202631107], ["s ]", -0.013958995142917478], ["n - 2", -0.014036945176658563], ["return false", -0.014061784842277306], ["a ) : #INDENT#", -0.014062294003572368], ["1 ] [ 1", -0.014069044178274256], [") : #INDENT# c", -0.014089118911044422], ["y1 ,", -0.014091284323453324], ["d [ 0", -0.014103758924002363], ["d [ 0 ]", -0.014103758924002363], ["#INDENT# a . append", -0.014119405140007295], ["bid", -0.0141482778410571], ["7", -0.014157908773156182], ["1 )", -0.014250022550188396], ["2 ] )", -0.014258297605425838], ["%=", -0.014369209843935988], ["#NEWLINE# f = [", -0.014425150140067868], ["] for j in", -0.014472853196613056], ["] for j", -0.014472853196613056], ["( b [ i", -0.01447553370954911], ["] == 0", -0.014479037418902429], ["] #NEWLINE# n", -0.014486361680007553], ["1 <= rl <=", -0.014511464195852053], ["<= rl <=", -0.014511464195852053], ["1 <= rl", -0.014511464195852053], ["( 2 * a", -0.014511464195852053], ["<= rl", -0.014511464195852053], ["] ) //", -0.014534981131472486], ["- ( a +", -0.014560709388221106], ["g [ i", -0.014563941626612637], ["#NEWLINE# b1", -0.014595175474286282], ["x == 0", -0.014626330364372008], ["u =", -0.01464753198048067], ["( c -", -0.014689858871234262], [": ", -0.014704352661255818], ["y -=", -0.014707991254903286], ["[ k + 1", -0.014765808133862735], [", x )", -0.014817435854864891], ["#NEWLINE# r =", -0.014891722349509967], ["#NEWLINE# graph .", -0.014910379027159467], [". add_edge (", -0.014952096095911136], [". add_edge", -0.014952096095911136], ["-1 #NEWLINE# for", -0.014978138012621782], [", 1 )", -0.014985513248781614], ["j ) ]", -0.014996484938300508], [", j ) ]", -0.014996484938300508], ["// 2 + 1", -0.015083814501512492], ["[ x +", -0.015085030159005594], ["sol )", -0.015127987175930417], [", l", -0.015173725087355401], ["in range ( self", -0.015229732688905746], ["range ( self .", -0.015229732688905746], ["range ( self", -0.015229732688905746], ["#NEWLINE# s1 =", -0.015234179777950071], ["* ( m", -0.015254635468881901], ["( c [ i", -0.0152557671213212], ["[ ] for", -0.01526240641488342], [", guy [", -0.015264183954885683], [", guy", -0.015264183954885683], ["lr [ i ]", -0.015301546862644757], ["lr [ i", -0.015301546862644757], ["compression [ j", -0.015301546862644757], ["s ) #NEWLINE# #DEDENT#", -0.015356183763574116], ["k , m", -0.01535755887042337], [", k , m", -0.01535755887042337], ["#NEWLINE# for b", -0.01545957797317817], ["self . d", -0.015464457089654604], [", dp [ i", -0.015469312948668969], ["x1 , y1", -0.01548947415169191], ["int ( n )", -0.015505195299752134], ["] ) ]", -0.015543460287456427], ["] > 0 :", -0.015605163731736527], ["] ) **", -0.01563307389113168], [", s )", -0.015663506427135862], ["and s [", -0.015686770771934117], ["1 ] += a", -0.015697342150580235], ["[ i , i", -0.015697342150580235], ["i ] += a", -0.015697342150580235], ["bns . append", -0.015697342150580235], ["bns .", -0.015697342150580235], ["1 , i ]", -0.015697342150580235], ["#NEWLINE# bns . append", -0.015697342150580235], ["#NEWLINE# bns .", -0.015697342150580235], ["] #NEWLINE# bns .", -0.015697342150580235], ["bns . append (", -0.015697342150580235], ["+ 1 ] +=", -0.015697342150580235], ["getperm", -0.015701358602959996], ["( pointlist [", -0.015701358602959996], ["getperm (", -0.015701358602959996], ["n , graph", -0.01573069128081261], ["graph , mask )", -0.01573069128081261], ["n , graph ,", -0.01573069128081261], ["( n , graph", -0.01573069128081261], ["index ] #NEWLINE#", -0.015743434806616156], ["] = mat [", -0.015751610777126137], ["= mat", -0.015751610777126137], ["= mat [ i", -0.015751610777126137], ["newm [ n", -0.015751610777126137], ["= mat [", -0.015751610777126137], ["] #NEWLINE# newm [", -0.015751610777126137], ["] #NEWLINE# newm", -0.015751610777126137], ["] = mat", -0.015751610777126137], ["minj +", -0.015755294322436053], [". g [", -0.015769867416294988], ["self . g [", -0.015769867416294988], ["self . level", -0.015769867416294988], [". level", -0.015769867416294988], ["sin", -0.015818663166201483], ["( -1 ,", -0.015826257078035748], [", c +", -0.015889498157867974], ["x = int (", -0.015937495668963297], ["x = int", -0.015937495668963297], ["rr <=", -0.015962610615437255], ["f = [", -0.016020444881694303], ["b ) -", -0.01603844539836322], ["i ] and", -0.016106990772126947], ["1 ] #NEWLINE# if", -0.016118943940472624], ["i ] = (", -0.016159275542680023], ["* r", -0.01618450811741325], ["parent [", -0.016221007683257262], [": 2 ] )", -0.016312001798711968], ["#NEWLINE# count =", -0.01633003230679254], ["str ( i", -0.016333613560094787], ["in v [ 0", -0.016366423080540256], ["in v [ 1", -0.016366423080540256], ["<= b2", -0.016436193164939217], ["n - 1 )", -0.01643654836483252], ["( s ,", -0.016446975427266503], ["add_edge (", -0.016481422907081534], ["add_edge", -0.016481422907081534], ["s ) #NEWLINE# if", -0.016506268994649097], ["f : #INDENT#", -0.0165529391155423], ["f :", -0.0165529391155423], ["suffix_arr [", -0.016558680224386065], ["( b ) :", -0.016559967183915645], ["f #NEWLINE#", -0.016568011848193946], ["stars", -0.016647709431746798], ["] [ ( i", -0.01665183704169347], ["boi [", -0.01665183704169347], ["best", -0.01665183704169347], ["2 ] <=", -0.01666617202655441], ["else : #INDENT# x", -0.016671997934220004], ["!= s", -0.01678365572385152], ["#INDENT# if i", -0.016846269187107698], ["for a , b", -0.01692032654152102], [", b in", -0.01692032654152102], ["a , b in", -0.01692032654152102], ["for a ,", -0.01692032654152102], ["] [ -1 ]", -0.016946208100063444], ["] [ -1", -0.016946208100063444], ["1 ] + 1", -0.016951905202248888], ["t : #INDENT#", -0.016981409421048192], ["j ] +", -0.01698608083655781], ["( dp [ i", -0.016994982069835702], ["- n", -0.0170011388086765], ["#NEWLINE# bns", -0.017005453996461924], ["] #NEWLINE# bns", -0.017005453996461924], ["[ ( 2", -0.017024494876026443], ["if i !=", -0.017193080526603705], ["u ] =", -0.01721473203130161], ["[ u ] =", -0.01721473203130161], ["mask ]", -0.017264850269055304], ["[ mask ]", -0.017264850269055304], ["[ w", -0.017295851592812883], ["t +=", -0.01731450641880333], ["#DEDENT# if n ==", -0.017341299656807585], ["rl <= a", -0.017413757035022463], ["<= a + b", -0.017413757035022463], ["<= a +", -0.017413757035022463], ["#NEWLINE# a1", -0.017434072134723023], ["pointlist [", -0.017445954003288886], ["( pointlist", -0.017445954003288886], ["] , it", -0.017445954003288886], [", it [", -0.017445954003288886], ["] , it [", -0.017445954003288886], ["index ==", -0.017485692025756314], ["] [ i ]", -0.017488567227807957], [": j", -0.017493547344480876], [", k ) #NEWLINE#", -0.017507291143213127], [". g", -0.017522074906994436], ["self . g", -0.017522074906994436], ["and d", -0.017525158993507855], ["( x2", -0.017629399641603247], ["- b", -0.017695714641392225], ["x = list", -0.017701505245198007], ["x = list (", -0.017701505245198007], ["x ] =", -0.017714014411317897], ["[ x ] =", -0.017714014411317897], ["#NEWLINE# newm [", -0.017720562124266905], ["#NEWLINE# newm", -0.017720562124266905], ["j ] + 1", -0.01781342443647026], ["0 ) #NEWLINE#", -0.017851467406138154], ["ev", -0.017879156029832283], ["if f [", -0.01791340242564503], ["cand2", -0.017917349483960395], ["cand1 [ d ]", -0.017917349483960395], ["cand1 [ d", -0.017917349483960395], ["cand1 [", -0.017917349483960395], ["* b", -0.017945332665389398], ["= solve", -0.017962710631784964], ["= solve (", -0.017962710631784964], ["have", -0.017977008286521625], ["colors [", -0.01797793289235727], ["keys", -0.017999271290741824], ["mon [ i", -0.018006050654212628], ["mon [ i ]", -0.018006050654212628], ["as np #NEWLINE# n", -0.018020151487897623], ["np #NEWLINE# n", -0.018020151487897623], ["boi", -0.018039490128501257], ["= y", -0.01803983156669272], [", p", -0.018060223960048825], ["if a ==", -0.018110909299054567], ["( b", -0.01812240661884321], ["* b +", -0.01816852403337128], [") ] ) #NEWLINE#", -0.018253626734800715], ["1 , a", -0.018349133202453346], [", 0 ,", -0.018379748021257646], ["#INDENT# n", -0.018399493448754738], ["len ( f [", -0.018401010344737602], ["[ d ] #NEWLINE#", -0.01844669673250472], ["1 ] #NEWLINE# ans", -0.018464013035525882], ["#NEWLINE# h [", -0.01846921624737226], ["] = 2 #NEWLINE#", -0.01850287503422689], ["#DEDENT# def dfs", -0.01851060225891118], ["#DEDENT# def dfs (", -0.01851060225891118], ["[ -1 ] *", -0.018534674650303187], ["% 2 ==", -0.018548534961409197], ["( ( 1", -0.018556997141609702], [") // k #NEWLINE#", -0.018601850071945914], ["#INDENT# for", -0.018616226221560346], [", 0 , -1", -0.018681385730026354], ["[ p ]", -0.018704106213176443], ["v [ 1", -0.018704483520617432], ["v [ 0 :", -0.018704483520617432], ["v [ 0", -0.018704483520617432], ["v [ 1 :", -0.018704483520617432], ["b or", -0.01874537160470303], ["vals [", -0.01874558177678226], [", 2 , 1", -0.018749702119061795], ["n in", -0.018802951607709287], ["n , k ,", -0.018841218528806988], [", dp", -0.018849841419042643], [". n", -0.018901003109577843], ["#DEDENT# #DEDENT# #DEDENT# if", -0.018906877101112704], ["i ) #NEWLINE# #DEDENT#", -0.018931852158766988], ["[ 1 for", -0.018973760240574417], ["#INDENT# sum =", -0.01897478581835741], [": #INDENT# sum =", -0.01897478581835741], [", j + 1", -0.018998187728522423], [", j +", -0.018998187728522423], ["+= w", -0.019001809755798512], ["* p", -0.019023394055988078], ["= ( s", -0.019101616451110106], ["sorted", -0.019120119910754862], ["- xs", -0.01912505121559659], ["frontier . append (", -0.01912505121559659], ["frontier . append", -0.01912505121559659], ["frontier .", -0.01912505121559659], ["- xs [", -0.01912505121559659], ["- xs [ 0", -0.01912505121559659], ["x ) :", -0.019141517691428293], ["] == 1", -0.01915764958094921], ["self . coef [", -0.019181184070569696], ["] //", -0.01918340221746804], ["0 ] #NEWLINE# #DEDENT#", -0.019224277216118635], ["+ 1 ] ,", -0.0192792977110271], ["2 , 2 ,", -0.019309770366766323], ["'c' *", -0.019326086664503236], ["'b' *", -0.019326086664503236], ["ans = [ ]", -0.01935153090578319], [", mod ) %", -0.019429353756720336], ["b + 1", -0.019449577185809443], ["zeroes [", -0.019452549149103424], ["twos [", -0.019452549149103424], ["2 ==", -0.019490251640133325], ["#DEDENT# return false", -0.01953080598453971], ["#DEDENT# return false #NEWLINE#", -0.01953080598453971], ["= v", -0.01958456720211762], ["ss", -0.019593914061479655], ["[ i ] <=", -0.019598143684364952], ["i ] <=", -0.019598143684364952], ["f .", -0.01959951099231245], ["bns", -0.019621677688225304], ["1 ] *", -0.01962715049215898], ["len ( f", -0.01962796701483601], ["] + 1 )", -0.01965237320864205], ["inmask [ i ]", -0.019668091934170285], ["inmask [ i", -0.019668091934170285], ["inmask [", -0.019668091934170285], ["mat [ i", -0.01968951347140767], ["mat [", -0.01968951347140767], ["mat [ i ]", -0.01968951347140767], ["ar2", -0.01968951347140767], ["] >", -0.019707621101799005], ["set ( ) #NEWLINE#", -0.01972047827293348], ["= set ( )", -0.01972047827293348], [") #NEWLINE# l ,", -0.019721720420901638], ["int ( a [", -0.019748696785362976], ["print ( res", -0.019836528559877956], ["k - 1 )", -0.019837251399446608], ["elif s", -0.019909421989646323], [": #INDENT# n", -0.01993654357817796], ["+ b [", -0.01997835572244883], ["[ v ] #NEWLINE#", -0.01999204973074106], ["v ] #NEWLINE#", -0.01999204973074106], ["= -1 #NEWLINE#", -0.020083677497145454], ["od", -0.02011405053356132], ["( u", -0.020143887504253267], ["j ] ]", -0.020155394599086784], ["false ,", -0.02019432092440316], ["a ) :", -0.020221080381923693], ["rl <=", -0.02031604987419287], ["l ] [ r", -0.02036659978622024], ["[ r - l", -0.02036659978622024], ["r - l ]", -0.02036659978622024], ["] [ r", -0.02036659978622024], ["] [ r -", -0.02036659978622024], ["- l ]", -0.02036659978622024], [": 0", -0.020443211348179457], ["- i -", -0.020446085576848985], ["j ] [ k", -0.020473704164891703], ["] #NEWLINE# ans .", -0.02049753702234113], ["x : #INDENT#", -0.02049927270986305], ["e =", -0.02050922592677432], ["] ] #NEWLINE# #DEDENT#", -0.020537527990650287], ["( ans +", -0.02059944154097767], ["modfraction", -0.020619276119539467], ["x -=", -0.020626406070837978], ["p +=", -0.020630266741972814], ["r_out [", -0.020639873925994583], ["] <= w [", -0.020639873925994583], ["<= w", -0.020639873925994583], ["<= w [", -0.020639873925994583], ["] <= w", -0.020639873925994583], ["( ) #NEWLINE# for", -0.020650888156930718], ["rd", -0.020727461722779488], ["a ) //", -0.0207877957795891], ["in d", -0.020805121957074024], [", 1 , 2", -0.020807762275783577], ["% b", -0.02082486265670389], [". append ( n", -0.0208362147121528], ["append ( n", -0.0208362147121528], ["#INDENT# f [ i", -0.020859829009946724], ["[ k +", -0.02089610022894354], ["#DEDENT# k", -0.021040366864424256], ["cnt2", -0.021042543960694614], ["k .", -0.02107685250735403], ["k + 1", -0.021101561496126266], [", x ) )", -0.021136507312443358], ["] * m #NEWLINE#", -0.021149010838243373], ["[ y1", -0.021157303028175686], ["xf .", -0.021161266427745587], ["( [ 1", -0.021199953061479815], ["u ) #NEWLINE#", -0.0212319129293512], ["( u ) #NEWLINE#", -0.0212319129293512], ["1 , xs [", -0.021250056906218437], ["1 , xs", -0.021250056906218437], ["( [ i ,", -0.021268237012952978], ["suffix_arr", -0.021289731717067797], ["bugs", -0.021345047568912895], ["s4 [", -0.021348803786375933], ["] + s2 [", -0.021348803786375933], ["] + s2", -0.021348803786375933], ["+ s4 [", -0.021348803786375933], ["+ s2 [", -0.021348803786375933], ["= s1 [", -0.021348803786375933], ["+ s4", -0.021348803786375933], ["] + s4", -0.021348803786375933], ["] + s4 [", -0.021348803786375933], ["x + 1", -0.021352749113332667], ["#INDENT# l . append", -0.02137903852981694], ["in d :", -0.021445050902158827], ["in d : #INDENT#", -0.021445050902158827], ["* h", -0.021487139678520433], ["( v ,", -0.02156534120666346], ["keys ( ) :", -0.02156925086081636], [". coef [ j", -0.021578832079390913], ["new_coef", -0.021578832079390913], ["( self . degree", -0.021578832079390913], ["self . coef", -0.021578832079390913], ["0 ] [ j", -0.021614800699816476], ["x #NEWLINE# #DEDENT#", -0.021718018754440502], [": #INDENT# m =", -0.0217217069773232], ["#INDENT# m =", -0.0217217069773232], [", r ) #NEWLINE#", -0.021725456168535138], ["-1 ] *", -0.021740472134212138], ["% mod )", -0.02177520659125801], ["#INDENT# y =", -0.021813730877151313], [": #INDENT# y =", -0.021813730877151313], ["x , y )", -0.021841038635908454], ["i < n", -0.02184910014541999], ["( 0 , 0", -0.02186516563710495], ["c ] )", -0.021872278109333006], [") #NEWLINE# cost", -0.021890890255687395], ["cand1", -0.02189898270261826], ["#DEDENT# res", -0.021901447870954494], ["r :", -0.02201040111220542], ["r : #INDENT#", -0.02201040111220542], ["copy", -0.022027328097167023], ["[ a [", -0.02205163381404306], ["#NEWLINE# if l", -0.022056031851815757], ["% a", -0.02206642590540613], [") > 0 :", -0.022128854907788768], ["] * k", -0.022145292301205207], ["0 else 0", -0.02215825214699642], ["in p : #INDENT#", -0.02216478592870558], ["#INDENT# f [", -0.02223322787447252], [": #INDENT# f [", -0.02223322787447252], ["#DEDENT# print ( sum", -0.022241237924538394], ["x ) : #INDENT#", -0.022309321858187743], ["0 , 0 )", -0.022382841541483102], ["( k ,", -0.022471416255160137], ["d ) #NEWLINE# #DEDENT#", -0.022477093434102115], ["#NEWLINE# i += 1", -0.022477737096279347], ["inmask", -0.02247781935333747], ["[ x ] :", -0.022503599767707702], ["if mon", -0.022507563317765787], ["if mon [", -0.022507563317765787], ["print ( 0", -0.02253393550843951], ["2 ) ]", -0.022536002410257303], ["i !=", -0.022548767321583618], ["if m", -0.022558575657839024], ["[ mask", -0.02256800359429441], ["#NEWLINE# for f in", -0.02259422030034456], ["for f", -0.02259422030034456], ["for f in", -0.02259422030034456], ["#NEWLINE# for f", -0.02259422030034456], ["( str ( x", -0.022625681078011967], ["sofar", -0.022679740204275548], ["pointlist", -0.022679740204275548], ["] [ j -", -0.022746156221228914], ["] #NEWLINE# for j", -0.022755192955333417], ["len ( str (", -0.022783315110833844], ["len ( str", -0.022783315110833844], ["] and a [", -0.0227936924709399], ["] and a", -0.0227936924709399], [", mask )", -0.022799989923941364], ["x - 1 ]", -0.022800545838181883], ["[ v ] )", -0.02282675653455411], ["= [ i for", -0.022853612040922115], ["q . append (", -0.022869897935638348], ["true #NEWLINE# #DEDENT# if", -0.022881878017968146], ["= p [", -0.022908333745119306], ["compression [", -0.022952320293967134], ["] , b", -0.022953087754462122], ["#NEWLINE# s2 =", -0.023025965688561193], ["a = a", -0.02303247437159202], ["2 , 1 ,", -0.02303404172578601], ["#NEWLINE# l ,", -0.023034814985335453], ["= d", -0.023053057312695968], ["= ans", -0.023102079727225392], ["( i + 1", -0.023120411057190607], ["mask )", -0.023133169864732985], ["chr (", -0.023200440206369563], ["chr", -0.023200440206369563], ["r_out", -0.023219858166743906], ["% 4 ==", -0.02322106374751422], ["4 ==", -0.02322106374751422], ["* a +", -0.023248142906979054], ["0 ] : #INDENT#", -0.023250250188403595], ["0 ] :", -0.023250250188403595], [") >= 2", -0.02330066011155871], [") >= 2 :", -0.02330066011155871], ["i", -0.02330837695669902], [", i ]", -0.02331887019168303], [", i ] )", -0.02331887019168303], ["#INDENT# return #NEWLINE# #DEDENT#", -0.0233849013400311], ["#INDENT# return #NEWLINE#", -0.0233849013400311], [": #INDENT# return #NEWLINE#", -0.0233849013400311], ["0 : #INDENT# s", -0.023388170734607125], ["list ( input (", -0.02340133428858558], ["list ( input", -0.02340133428858558], ["( s1 )", -0.023411018915336538], ["s1 )", -0.023411018915336538], ["cut", -0.02342138569217512], ["p -", -0.023429314334989716], ["la =", -0.023433220751964745], ["< n : #INDENT#", -0.023435454508837116], [") #NEWLINE# mod", -0.023435588042264865], [") #NEWLINE# mod =", -0.023435588042264865], ["a ,", -0.023450142466893423], ["p ==", -0.02345631360918859], ["target", -0.023458972777105114], ["#NEWLINE# sum =", -0.02347159177861819], ["-1 ] [ 0", -0.023571065788451955], ["mat", -0.023627416165689197], [", negbig", -0.023655257463408665], ["[ negbig , negbig", -0.023655257463408665], ["[ negbig", -0.023655257463408665], ["negbig , negbig ]", -0.023655257463408665], ["negbig ,", -0.023655257463408665], ["negbig ]", -0.023655257463408665], ["[ negbig ,", -0.023655257463408665], [", negbig ]", -0.023655257463408665], ["negbig , negbig", -0.023655257463408665], ["} , {", -0.02368209665909892], ["} ,", -0.02368209665909892], [") * a", -0.023708727929340485], [") ] .", -0.0237293413485457], ["mod - 2 ,", -0.023737688583889707], [": print (", -0.023795843236222598], [": print", -0.023795843236222598], ["( n -", -0.023808137102297372], ["+= sum", -0.02383004126154523], ["cd3", -0.02389183687577197], ["ab3", -0.02389183687577197], ["n == 1 :", -0.023898790396880736], [", l )", -0.023914546686872238], ["n ) #NEWLINE# #DEDENT#", -0.02394888630946704], ["coef [ j", -0.02397648008821213], [". coef [", -0.02397648008821213], ["coef [ j ]", -0.02397648008821213], [": #INDENT# cur [", -0.024053679142231752], ["#INDENT# cur [", -0.024053679142231752], ["q = [", -0.02409152788468474], ["+= 1 #NEWLINE#", -0.024121975446787385], ["#NEWLINE# d = [", -0.024178582169241392], ["eq", -0.024196264712069065], ["0 , -1", -0.024229887184773903], ["( i ,", -0.02423804742423784], ["l [", -0.0243171009992852], ["cn", -0.02431896062101428], ["] ) ,", -0.024319199359821686], [") == 3", -0.024322468270363096], ["( 2 **", -0.02432300256372536], ["pf ) ) :", -0.02432629983166902], ["( len ( pf", -0.02432629983166902], ["( pf ) )", -0.02432629983166902], ["pf ) )", -0.02432629983166902], ["( a + b", -0.02433750098632866], ["( str", -0.024342370213672943], ["[ i for i", -0.024358644300505994], ["[ i for", -0.024358644300505994], ["ttba", -0.024373010513907282], [") #NEWLINE# #DEDENT#", -0.02439322821490834], ["a [ index", -0.024410607172331115], ["a [ index ]", -0.024410607172331115], ["#NEWLINE# #DEDENT# if len", -0.02444544734059871], ["-= a [", -0.024476353678817078], ["available", -0.024477697643443954], [", i +", -0.024491893095793606], ["shore", -0.02452924870685888], ["] #NEWLINE# #DEDENT# if", -0.024594937052307655], ["range ( x", -0.024649383177862114], ["in range ( x", -0.024649383177862114], ["] #NEWLINE# f", -0.02470520579977063], ["( [ i +", -0.024713182097596677], ["[ 1 : ]", -0.024766830719459513], ["def solve", -0.02478500195774271], ["def solve (", -0.02478500195774271], ["pos += 1 #NEWLINE#", -0.02487803319864777], ["pos += 1", -0.02487803319864777], ["if n % 2", -0.024881699361913572], ["tup", -0.02494844402895996], ["ones [", -0.025010420334561554], ["0 ] == 0", -0.02508593668150181], ["graph .", -0.025172561469674604], ["= [ false ]", -0.025213788223558034], ["f [ i ]", -0.025249483074570218], ["correct_s", -0.025278720186170535], ["10 ** (", -0.025279972541521138], ["] % 2", -0.025294910678562217], ["i , i +", -0.02532064471419541], ["y1 ]", -0.02535906217666205], ["left", -0.025425056020622547], ["d ] #NEWLINE#", -0.025440491664709176], ["1 , 2 ,", -0.025459406403389926], ["'b' ) , (", -0.025465622537974117], ["'b' ) ,", -0.025465622537974117], ["j ] [ i", -0.025476998322011956], ["s ,", -0.02547862346419768], ["xs [ 0", -0.025500068287462124], ["xs [ 0 ]", -0.025500068287462124], ["n = map", -0.025528623556929444], [", n = map", -0.025528623556929444], ["n = map (", -0.025528623556929444], ["bin (", -0.025560074491276234], ["bin", -0.025560074491276234], ["[ x - 1", -0.025583883144014323], ["#INDENT# ans = [", -0.025590441640635654], ["u )", -0.025613106825044762], ["#DEDENT# #DEDENT# #DEDENT# else", -0.02576140509203173], ["print ( ''", -0.025763003994296447], ["print ( '' .", -0.025763003994296447], [". d", -0.025774095149424338], ["[ k ] =", -0.02578138107086748], ["b1 [", -0.02579984240749323], ["b2 [", -0.02579984240749323], ["if abs", -0.025805593254155074], ["if abs (", -0.025805593254155074], ["h , w )", -0.02581803324983135], ["( h , w", -0.02581803324983135], ["10 #NEWLINE#", -0.025839022819455357], ["#INDENT# return sys", -0.025860626052720524], ["#INDENT# return sys .", -0.025860626052720524], ["return sys .", -0.025860626052720524], [": #INDENT# return sys", -0.025860626052720524], ["return sys . stdin", -0.025860626052720524], ["return sys", -0.025860626052720524], ["* a", -0.025864828572220437], ["s [ -1 ]", -0.025881035718170728], ["s [ -1", -0.025881035718170728], ["dists [", -0.02589193581699966], ["if x <", -0.025914924479932145], ["#INDENT# for x", -0.02594300802288056], ["while q", -0.025968054746260356], ["-1 ] -", -0.025972994323480506], ["[ -1 ] -", -0.025972994323480506], ["( t )", -0.026040440106943674], ["pass", -0.026082841811733638], ["k ) : #INDENT#", -0.026107550484611226], ["it [", -0.026168931004933324], ["dd", -0.02616925328484884], [", c =", -0.026176111862553603], ["[ index ]", -0.026191680767170437], ["#NEWLINE# c [", -0.026209071927260064], ["def gcd (", -0.026224425272575718], ["def gcd", -0.026224425272575718], ["k ]", -0.026236516667242284], ["posibles_jefes_mencionados", -0.026252526042572256], ["ans = 1 #NEWLINE#", -0.0262604154388398], ["ans = 1", -0.0262604154388398], ["ar [ x", -0.026273697553603592], ["in range ( min", -0.026283249006947066], ["range ( min", -0.026283249006947066], ["range ( min (", -0.026283249006947066], [") ) %", -0.026286105475297552], [", b [", -0.026337081954834328], ["level [", -0.026338763573481586], ["b , l", -0.0263501945943634], ["sorted (", -0.026398386102529422], ["- 1 :", -0.026407918232428742], ["factor", -0.026454390005793058], ["range ( n +", -0.026458409070620692], ["mints", -0.02647232558732467], ["mints (", -0.02647232558732467], ["mints ( )", -0.02647232558732467], ["+ k - 1", -0.026472926669032382], ["- 1 ] +", -0.026496702371897298], [") ] for i", -0.026527687096751972], ["n - i", -0.026586782010649863], ["dp", -0.026599901207638096], ["( l ) #NEWLINE#", -0.026601203906007332], ["s3 [", -0.026686004732969917], ["] + s3 [", -0.026686004732969917], ["] + s3", -0.026686004732969917], ["+ s3", -0.026686004732969917], ["+ s3 [", -0.026686004732969917], ["return ans #NEWLINE#", -0.026687232645425364], ["return ans #NEWLINE# #DEDENT#", -0.026687232645425364], ["s1 [", -0.026692514014741903], ["lr [", -0.026777707009628327], ["] -= 1", -0.026811144471669757], ["] -= 1 #NEWLINE#", -0.026811144471669757], ["#DEDENT# return ans", -0.026812600485078723], [": #INDENT# t =", -0.026817875219164986], ["+ m", -0.026861615278607122], ["( ) ) for", -0.02688112005408817], ["n and", -0.026897565901628957], ["ans [ -1 ]", -0.026952024429219398], ["ans [ -1", -0.026952024429219398], [", p , q", -0.02697068122392436], ["deque (", -0.02707239263702436], ["len ( x )", -0.027104296708468246], ["len ( x", -0.027104296708468246], ["0 ] * m", -0.02712281015251326], ["[ 3 ] +", -0.027127818787227122], ["3 ] +", -0.027127818787227122], ["] + 1 :", -0.027139239482863356], ["i + k", -0.027145578459856833], [", y1", -0.027179625746229442], ["- 2 , mod", -0.02718029606692204], ["print ( i )", -0.02718972384946196], ["] ) % mod", -0.027230753628833454], ["] = a", -0.027277908321879547], ["a2 , b2", -0.02734635676432094], ["flag = false", -0.02735061567073047], ["flag = false #NEWLINE#", -0.02735061567073047], ["+ k -", -0.027384539037980923], ["if n %", -0.027386892213140935], ["i - 1", -0.027387736247799287], ["i + 1 #NEWLINE#", -0.02741450036090442], ["degree", -0.027422749025274057], ["in [", -0.027460393292079676], ["i -", -0.02750305586407093], ["] #NEWLINE# #DEDENT# for", -0.027507824381922154], ["( ) #NEWLINE# s", -0.027532330352257193], ["ans += 1 #NEWLINE#", -0.02761977547589509], ["#DEDENT# for _ in", -0.027621165451804607], ["#DEDENT# for _", -0.027621165451804607], ["#NEWLINE# #DEDENT# #DEDENT# ans", -0.02765801013462622], ["= [ 1", -0.027679146295803335], ["1 ] >=", -0.02773358417339756], ["#INDENT# print ( a", -0.027740604034379245], ["[ v ] =", -0.027771823428664678], ["v ] =", -0.027771823428664678], ["fence [", -0.02778935592729061], ["pf )", -0.027801485521907456], ["( pf )", -0.027801485521907456], ["len ( pf", -0.027801485521907456], ["len ( pf )", -0.027801485521907456], ["= int ( a", -0.027811072753502294], ["#INDENT# if f [", -0.027843875743282197], [": #INDENT# nxt [", -0.027853270429924075], ["#INDENT# nxt [", -0.027853270429924075], ["otbr", -0.02785486915875118], ["ztba", -0.02785486915875118], ["ttbr", -0.02785486915875118], ["d ] =", -0.027871432530605058], ["[ d ] =", -0.027871432530605058], [": #INDENT# t", -0.02789477985789777], ["i ] + 1", -0.02789750231782792], ["== b : #INDENT#", -0.02790265416873538], ["== b :", -0.02790265416873538], ["dfs ( u", -0.027917572975842606], ["+ 1 ) ,", -0.027929576840846026], ["[ e ]", -0.027960640760478734], ["#INDENT# def", -0.027968707732270875], ["for u in", -0.027992360016848135], ["t = [", -0.027993034177729366], ["% m", -0.028014821005141737], ["c [ 1 ]", -0.028022496140112242], ["c [ 1", -0.028022496140112242], ["#DEDENT# if s [", -0.028191386976322178], ["4 ) : #INDENT#", -0.02821233157978909], ["4 ) :", -0.02821233157978909], ["mod ) %", -0.02822170615664861], ["mod ) % mod", -0.02822170615664861], ["a10", -0.028258176810227815], ["x +", -0.028293353300993796], ["#NEWLINE# print ( ``", -0.028330543891721086], ["#NEWLINE# from itertools", -0.02834309941405439], ["#NEWLINE# from itertools import", -0.02834309941405439], ["pos +=", -0.028391915625312045], ["2 , 1", -0.028437977916446706], ["sp [", -0.028438560209441854], [", mod - 2", -0.02845832043882719], ["mod - 2", -0.02845832043882719], [") #NEWLINE# e =", -0.02846593132183473], ["l ) :", -0.028485083274366912], ["t #NEWLINE# #DEDENT#", -0.028521218292656424], ["* a + 2", -0.02855146360636321], ["a + 2", -0.02855146360636321], ["dp )", -0.028603662474855664], ["u in range (", -0.028612280039557], ["u in range", -0.028612280039557], ["for u in range", -0.028612280039557], ["[ 1 ] =", -0.028614813784558605], ["#NEWLINE# for u in", -0.0286390532089807], ["* 6", -0.028641793997713418], ["( m +", -0.0286475500275562], ["== 1 or", -0.02864844170442454], ["1 ^", -0.028686484901714493], ["e ) #NEWLINE#", -0.02869716356264427], ["coef [", -0.02877177610585455], [". coef", -0.02877177610585455], ["> n : #INDENT#", -0.02877387413706466], ["> n :", -0.02877387413706466], ["in p :", -0.02886249115739601], ["heappop (", -0.028873204797808954], ["fact [", -0.028885387953608253], ["[ int ( input", -0.028887174521775222], ["self ) : #INDENT#", -0.028900335494088016], ["( self ) :", -0.028900335494088016], ["self ) :", -0.028900335494088016], ["if i in", -0.028931535053833064], ["m + 1", -0.028933629188961422], ["i - 1 )", -0.02895404628730907], ["ret [", -0.02895442324157387], ["i + 1 )", -0.028959393864392648], ["1 #NEWLINE# ans =", -0.028962380429618382], ["s +", -0.028985524375910992], ["if dp [ i", -0.02898977033367278], ["r1", -0.028992353575901172], ["= len (", -0.029017292216105984], ["= len", -0.029017292216105984], ["l - 1", -0.029082677208030733], [", 'a' )", -0.029103568614827553], [", 'b' , 'b'", -0.029103568614827553], ["( 'a' ,", -0.029103568614827553], [", 'b' , 'a'", -0.029103568614827553], ["( 'b' ,", -0.029103568614827553], [", 'a' , 'a'", -0.029103568614827553], [", ( 'b'", -0.029103568614827553], ["'a' , 'a' ,", -0.029103568614827553], [", ( 'b' ,", -0.029103568614827553], [", 'b' )", -0.029103568614827553], ["'b' , 'a' ,", -0.029103568614827553], [") , ( 'b'", -0.029103568614827553], ["'b' , 'b' ,", -0.029103568614827553], ["0 , 1 ]", -0.029107622106298376], ["[ 0 , 1", -0.029107622106298376], ["( pf", -0.029223391672133003], ["searchsorted", -0.029224657051224116], ["np . searchsorted", -0.029224657051224116], [". searchsorted", -0.029224657051224116], ["searchsorted (", -0.029224657051224116], [". searchsorted (", -0.029224657051224116], ["np . searchsorted (", -0.029224657051224116], ["= np . searchsorted", -0.029224657051224116], ["[ -1 ] +", -0.02923614413277495], ["( x + 1", -0.029252258403125068], ["( b ,", -0.029267847525747567], [") &", -0.029271901183978676], ["( j + 1", -0.029278512952284168], ["else : #INDENT# i", -0.029315956500508875], ["x [", -0.029323269763330877], ["= [ [ ]", -0.02934180415195738], ["[ [ ] for", -0.02934180415195738], ["[ [ ]", -0.02934180415195738], ["print ( 1", -0.02935456286940776], ["print ( 1 )", -0.02935456286940776], ["n % i", -0.029363628240511384], ["< n :", -0.029421255337812202], ["ansr", -0.029421681274040174], ["] [ i", -0.029440684059388437], ["index ]", -0.029447174934114573], ["m2 )", -0.029456506220649475], ["q . append", -0.029498682953888616], [", 0 ] #NEWLINE#", -0.029525888769644192], ["newm [", -0.029534270207111506], ["l .", -0.029546608138588764], [") % mod )", -0.029665454716851038], ["#NEWLINE# q .", -0.029760487672890745], ["b ) %", -0.029871994701948925], ["( 1 , 1", -0.029891741049446946], ["0 ] <=", -0.029901936346690243], ["[ 0 ] <=", -0.029901936346690243], ["0 #NEWLINE# for a", -0.029946361537727534], ["ultima_salida_inesperada", -0.03000288690579686], ["anteriores", -0.03000288690579686], ["0 for", -0.03000515238209635], ["[ j - 1", -0.03006338017992045], ["( ) for _", -0.03006340949391208], ["rr -", -0.030087103976850507], ["#NEWLINE# #DEDENT# d =", -0.030110190046730285], [", p )", -0.030132997151099357], ["append ( ( i", -0.030148840408068325], [") > 0", -0.03018580927474872], ["#NEWLINE# f [", -0.030233667499901168], ["else 2", -0.03027012227834244], ["1000000007 #NEWLINE#", -0.030305435371813842], ["[ ] #NEWLINE# while", -0.030328767563018836], ["[ s [", -0.030363975372618042], ["#INDENT# if not visited", -0.030381397871685475], ["] , a [", -0.030389598019904603], ["] , a", -0.030389598019904603], ["ceil", -0.03040802624643927], [": #INDENT# if i", -0.03041139532744673], [": 3", -0.03042450082945473], ["m = [", -0.030457649925271894], ["ans [ (", -0.030463799637619113], ["#NEWLINE# ans [ (", -0.030463799637619113], ["] ) )", -0.030553556127737472], ["n ] )", -0.030565250698768833], ["fence", -0.030568291520019678], ["leaves", -0.030578730195046595], ["= 2 *", -0.030598708306963176], ["== a", -0.030663020052503643], ["cand", -0.0306933009825866], ["( s ) ]", -0.03069816325408244], ["d #NEWLINE# #DEDENT#", -0.030724390037996454], [") >=", -0.030736159917860554], ["count", -0.03073639939310279], ["-1 ] ,", -0.030793430880698084], ["< m", -0.030839311295772356], ["cf", -0.030893719480427337], ["k ) :", -0.03097611263471919], ["0 ] #NEWLINE# for", -0.031023309926555994], ["cnt [ i", -0.031080968159324034], ["cnt [ i ]", -0.031080968159324034], ["a01", -0.031083994491250592], ["* k ) )", -0.031089474446288207], ["#INDENT# print ( i", -0.031089869678305813], [", m , s", -0.031109665354745762], ["m , s", -0.031109665354745762], ["total =", -0.031134880211654628], ["#NEWLINE# n = int", -0.03113599837000362], ["self . degree", -0.031169424114675756], ["k )", -0.03117468771414329], ["] <= 0 :", -0.03120013700372631], ["#NEWLINE# if n ==", -0.031207394362799797], ["i ] [ j", -0.03131703759430063], [", n - 1", -0.03135325093543383], ["other .", -0.03137411948193947], ["s = [", -0.031374994621850893], ["rest", -0.03140484648253513], ["reversed", -0.031490546362194484], ["reversed (", -0.031490546362194484], ["mon [", -0.031510588644872106], ["in range ( 4", -0.03151763287897057], ["( 4 )", -0.03151763287897057], ["range ( 4", -0.03151763287897057], ["range ( 4 )", -0.03151763287897057], [">= k : #INDENT#", -0.031528844667305454], [">= k :", -0.031528844667305454], [", m2", -0.031559998839849245], ["= [ tuple (", -0.03158263171013913], ["= [ tuple", -0.03158263171013913], ["1 , 1", -0.03158664260422634], ["sp", -0.03159840023271317], [", ''", -0.03165570351386123], ["s ) +", -0.031719775180872926], ["( s ) +", -0.031719775180872926], ["y :", -0.03177503445340805], ["k %", -0.03180180728322702], ["bound", -0.031887633336095435], ["= g", -0.031894968139279174], ["d [ ind", -0.03190328572582136], ["overlap", -0.03191444890767924], ["guy [", -0.031916020996579156], ["+= 1", -0.03193604451594006], ["0 ] -=", -0.0319371509152002], ["[ 0 ] -=", -0.0319371509152002], ["- y )", -0.03195037916642464], ["#NEWLINE# i +=", -0.031957276165060215], ["sec", -0.03198020854013467], ["] [ 2", -0.03198769477976782], [": #INDENT# v =", -0.03199651729221047], ["s4", -0.0320232056795639], ["0 , -1 )", -0.03206763497477995], ["dp2 [", -0.03213662635721596], [": #INDENT# for x", -0.032160960686454625], ["root", -0.032212431140783905], ["[ -2", -0.03222863919769094], ["[ -2 ]", -0.03222863919769094], ["s = list (", -0.03224702880136081], ["s = list", -0.03224702880136081], [") : #INDENT# self", -0.032270211343206866], ["[ index", -0.032282412679981734], ["[ t [", -0.032285258270113054], ["vals", -0.03229903267311272], ["1 #NEWLINE# p", -0.03233536966082055], ["( b , a", -0.03249306207069887], ["fact", -0.03249606144780929], ["lr", -0.032515787083120105], ["#NEWLINE# t2", -0.03252227621471573], ["] #NEWLINE# x", -0.03254853430403181], ["[ nt", -0.03259861466674011], ["] [ nt ]", -0.03259861466674011], ["1 ] [ nt", -0.03259861466674011], ["] [ nt", -0.03259861466674011], ["nt ]", -0.03259861466674011], ["[ nt ]", -0.03259861466674011], [": #INDENT# for", -0.03259974504881409], ["e [ 0", -0.032616800997639764], ["e [ 0 ]", -0.032616800997639764], ["!= 0 and", -0.0326307464383658], ["s [", -0.03268395556574923], ["else : #INDENT# k", -0.03269842226449879], ["!= i for", -0.03273284616108051], ["for i in v", -0.03273284616108051], ["in v [", -0.03273284616108051], ["i in v", -0.03273284616108051], ["i in v [", -0.03273284616108051], ["!= i for i", -0.03273284616108051], ["- 1 #NEWLINE#", -0.03278128100977853], ["[ x ] .", -0.03279765867480335], ["x ] .", -0.03279765867480335], ["( x ) )", -0.03280329299680906], ["visit [", -0.03287773918262714], ["if l", -0.03290223887676536], [") - 1 ,", -0.03291844694005905], ["#DEDENT# i +=", -0.032953172561836955], ["#DEDENT# i += 1", -0.032953172561836955], ["#INDENT# t =", -0.03297261010116003], ["0 : #INDENT# continue", -0.03298067909823209], [") #NEWLINE# graph .", -0.03303153554847447], ["#INDENT# h", -0.03304133836014767], [": #INDENT# h", -0.03304133836014767], ["] [ 1", -0.03306548004818908], [") % 2", -0.03309306996567619], ["-2", -0.0331912823530658], [") #NEWLINE# e", -0.03326040443530563], ["] ] =", -0.0332857139372729], ["guy", -0.03330367408338694], ["#NEWLINE# #DEDENT# for j", -0.03330675087432233], ["!= i", -0.033342902132524964], ["[ 0 : :", -0.03335851535352279], ["0 : :", -0.03335851535352279], ["0 : : 2", -0.03335851535352279], ["2 * a +", -0.0334261962140701], ["ok", -0.03343848287557505], ["ok (", -0.03343848287557505], ["newm", -0.03347217290139304], ["false ]", -0.03349819109248197], ["false ] *", -0.03349819109248197], ["[ false ] *", -0.03349819109248197], ["[ false ]", -0.03349819109248197], ["pow_2 [", -0.033518602644378837], ["( zip", -0.033540608520522965], ["( zip (", -0.033540608520522965], ["v ] ) #NEWLINE#", -0.033564310416070574], ["count =", -0.033596040583714445], ["( y ,", -0.033613137311610634], ["+ 7 #NEWLINE#", -0.03364341186014658], ["if not visited [", -0.03364529090949309], ["if not visited", -0.03364529090949309], ["else : #INDENT# t", -0.03364783696360178], ["!= -1 :", -0.033689040964474504], ["!= -1 : #INDENT#", -0.033689040964474504], ["#NEWLINE# if c", -0.033698206318717595], [", graph , mask", -0.03370862417316988], ["graph , mask", -0.03370862417316988], ["[ j ] ]", -0.03371655415638197], ["= 2", -0.0337230488713242], ["#INDENT# t", -0.03372893520408721], ["posibles_jefes_filtrados", -0.03375324776902147], [": #INDENT# self", -0.03375518983669002], [": #INDENT# self .", -0.03375518983669002], ["dists", -0.033787072614386474], ["0 ] ,", -0.03379219255004505], ["[ 0 ] ,", -0.03379219255004505], ["= q .", -0.03379764785057545], ["( x ) :", -0.0338245085126241], ["max ( dp [", -0.033888770101866736], ["[ 1 ] [", -0.033889193343361664], ["[ tuple (", -0.033894054160751114], ["[ tuple", -0.033894054160751114], ["'0' #NEWLINE#", -0.03391165373073299], ["n % i ==", -0.03391774907154975], ["] == -1 :", -0.033968982990364785], [": #INDENT# if arr", -0.033989564465360805], [", b", -0.034033089880011524], ["h )", -0.034045051662130336], ["sum ( c", -0.03410349702113693], ["- i - 1", -0.034103621735787765], [", b2", -0.03413033606251319], ["- k )", -0.03414298609582684], ["q :", -0.03415178718839714], ["q : #INDENT#", -0.03415178718839714], [". rfind (", -0.03415925519233431], ["rfind", -0.03415925519233431], [". rfind", -0.03415925519233431], ["rfind (", -0.03415925519233431], ["* 2", -0.034195048914011976], ["d //", -0.034221303796657034], ["= ( a", -0.03424300425782469], ["x for x in", -0.03427405755181948], ["'0' :", -0.034278355577648], [">= k", -0.034280812005099484], ["= 4", -0.03431657556917408], ["= 4 #NEWLINE#", -0.03431657556917408], ["colors )", -0.03437027633942717], ["range ( 3 )", -0.03442886251801622], ["p ]", -0.03445189113865967], [", m2 )", -0.03462464898596177], ["2 , mod )", -0.034636977916571714], ["[ e", -0.03464892560513285], ["or '.xx'", -0.03469180615286089], ["or 'x.x' in", -0.03469180615286089], ["or '.xx' in", -0.03469180615286089], ["or 'xx.'", -0.03469180615286089], ["or 'x.x'", -0.03469180615286089], ["or 'xx.' in", -0.03469180615286089], ["<= b", -0.034709425800690565], ["( a ) :", -0.0347173286755309], [": #INDENT# def", -0.034750104169513046], ["t :", -0.034804290768520145], ["+ k", -0.03481851929519917], ["2 ) *", -0.034818753097579494], ["#NEWLINE# e =", -0.034848112909175444], ["solve ( ) :", -0.034861262028881124], ["def solve ( )", -0.034861262028881124], ["( u )", -0.03494522235886274], ["[ j ] ,", -0.03498788333628434], ["ans #NEWLINE# #DEDENT#", -0.035001668010563695], ["+ len (", -0.03500632387788942], ["+ len", -0.03500632387788942], [", dp [", -0.03500709309785942], ["[ u ] :", -0.035059958735222094], ["u ] :", -0.035059958735222094], ["u ] : #INDENT#", -0.035059958735222094], ["9 + 7 #NEWLINE#", -0.03506742268872089], ["#NEWLINE# t =", -0.03513338307239103], ["#INDENT# assert", -0.035133915228286246], [": #INDENT# assert", -0.035133915228286246], ["en", -0.03514983112794711], ["#NEWLINE# right", -0.03522102167452081], ["#NEWLINE# right =", -0.03522102167452081], ["2 + 1", -0.035278723330009865], [": #INDENT# c", -0.03528790922904156], ["] ) ==", -0.035338168352382605], ["** 3", -0.03535650483405967], [", mod -", -0.03536931843308131], ["0 else", -0.03541612021651595], ["false :", -0.03542006153377429], ["false : #INDENT#", -0.03542006153377429], ["k + 1 ]", -0.03548820905741315], ["sum ( dp", -0.035512430755806186], ["0 #NEWLINE# while true", -0.03557360346448561], ["return ans", -0.03564876868023258], ["len ( d", -0.035655199496182205], ["1 ] ==", -0.035677973751745015], ["a // 2", -0.035686902840748526], ["b =", -0.03571136127996385], ["p = 1", -0.035745110346846215], ["[ [ -1", -0.03575106943889639], ["= [ [ -1", -0.03575106943889639], ["bisect #NEWLINE#", -0.03575462317797803], ["import bisect #NEWLINE#", -0.03575462317797803], [", b3", -0.035778041791745444], ["1 ) for i", -0.03581005181114274], ["#INDENT# i =", -0.03581296462273249], ["j - 1 ]", -0.03584804278431391], ["else : #INDENT# s", -0.035924078884341265], ["( 3 ,", -0.03592481511847748], ["from heapq", -0.03596057832781466], ["heapq import", -0.03596057832781466], ["from heapq import", -0.03596057832781466], ["-2 ]", -0.036042622399809], ["g ,", -0.0360448492420411], ["> len (", -0.036064409754927695], ["> len", -0.036064409754927695], ["cur [", -0.03608051871334762], ["if e", -0.03609557058448272], ["] ) -", -0.03610038702608165], ["val =", -0.03614431562663036], ["dp2", -0.03615370465186795], ["l = list", -0.036196968596499124], ["l = list (", -0.036196968596499124], ["= m -", -0.036296518495496845], ["[ i ] =", -0.0362971411046332], ["i ] =", -0.0362971411046332], ["compression", -0.03634117379878129], ["!= 1 : #INDENT#", -0.036382432507740634], ["!= 1 :", -0.036382432507740634], ["k ] =", -0.0364355499210122], ["( [ i", -0.03644346114630077], ["import bisect", -0.03645438656084681], ["flag =", -0.03646306310762046], ["1 for x in", -0.03652672450938605], ["tolist ( )", -0.03653082131403014], ["tolist ( ) #NEWLINE#", -0.03653082131403014], [". tolist ( )", -0.03653082131403014], [". tolist", -0.03653082131403014], ["tolist (", -0.03653082131403014], ["visit", -0.03653082131403014], ["tolist", -0.03653082131403014], [". tolist (", -0.03653082131403014], ["in ans : #INDENT#", -0.03655919874345699], ["in ans :", -0.03655919874345699], ["#INDENT# c", -0.036562370167851], ["append ( v )", -0.03657122932386769], [": #INDENT# cnt =", -0.03658379519902023], ["i + 1 ,", -0.036602373743165495], ["#NEWLINE# #DEDENT# x =", -0.0366493350690507], ["!= 0 )", -0.036657150092259234], [", y -", -0.036657685524880794], ["#NEWLINE# for u", -0.03668496023742748], ["( aa", -0.03670086549588341], ["#INDENT# self .", -0.03672514682365635], ["#INDENT# self", -0.03672514682365635], ["] #NEWLINE# a =", -0.0367283777690555], [": #INDENT# p =", -0.03672944338589669], ["= self .", -0.036754337219695975], ["ansc", -0.0367771015925502], ["al [", -0.03678084510401176], ["#INDENT# v =", -0.03681103770431001], ["= 0 #NEWLINE# if", -0.03682384877777999], ["1 , -1 ,", -0.036844801604254636], ["not visited", -0.03690918394730071], ["not visited [", -0.03690918394730071], ["#DEDENT# #DEDENT# #DEDENT# ans", -0.03692722281389281], ["] #NEWLINE# p =", -0.03693133262696844], ["states [ i ]", -0.03699428538317558], [". votes", -0.03699428538317558], ["states [ i", -0.03699428538317558], ["inputs", -0.03700186257800492], ["* d #NEWLINE#", -0.03702843768409231], ["] <= k", -0.03704249347163231], ["= [ false", -0.03709362497684234], ["[ 2 ]", -0.03710516228521954], [", graph", -0.037114424616844895], [", graph ,", -0.037114424616844895], ["used [", -0.037114633839197136], [". append ( v", -0.037138194893461145], ["append ( v", -0.037138194893461145], ["sol", -0.03714766598748848], [", 2 , 2", -0.037210319045241275], ["right =", -0.03722413556250181], ["for i ,", -0.03733429830424886], ["'xx.' in", -0.03736040662615789], ["'x.x' in", -0.03736040662615789], ["'.xx' in", -0.03736040662615789], ["'xx.'", -0.03736040662615789], ["'.xx'", -0.03736040662615789], ["'x.x'", -0.03736040662615789], [") #NEWLINE# while", -0.037416753953279806], ["s + 1", -0.037456712109809345], ["( self )", -0.037463689603919256], ["self )", -0.037463689603919256], ["] ] ==", -0.037468849406715535], ["posteriores", -0.037503608632246076], ["continuos", -0.037503608632246076], ["bisect", -0.03750498674036222], ["** n", -0.03751353421278474], ["local_max", -0.03753679359379663], ["ans : #INDENT# print", -0.03754221130368117], ["mm", -0.037565050473298826], ["== 1 and", -0.03762531136295066], ["stdin", -0.03763762510816011], [", x +", -0.03772575961406392], ["] == -1", -0.03778637871071899], ["m : #INDENT# print", -0.03779108605569348], ["( self .", -0.03780031519449575], ["y - 1", -0.037827075054868875], ["stdin #NEWLINE#", -0.03789715684164088], ["( ) #NEWLINE# t", -0.037902167243885544], ["'2'", -0.03802802789147184], [">= a", -0.03810023818537741], ["[ x1", -0.03812376835169706], ["sum_range", -0.038155407962716235], ["sum [", -0.038155407962716235], ["sum_range (", -0.038155407962716235], ["   #INDENT#", -0.03820278039673389], ["self . assertio (", -0.03820278039673389], ["  #INDENT# input", -0.03820278039673389], ["self . assertio", -0.03820278039673389], ["( input , output", -0.03820278039673389], ["  ", -0.03820278039673389], [":   ", -0.03820278039673389], [" #INDENT# input", -0.03820278039673389], ["  #INDENT#", -0.03820278039673389], [":  ", -0.03820278039673389], ["#NEWLINE# output", -0.03820278039673389], ["#NEWLINE# output =", -0.03820278039673389], [". assertio ( input", -0.03820278039673389], ["#NEWLINE# self . assertio", -0.03820278039673389], ["assertio ( input ,", -0.03820278039673389], [" #INDENT# input =", -0.03820278039673389], ["assertio ( input", -0.03820278039673389], ["( input ,", -0.03820278039673389], [". assertio", -0.03820278039673389], [". assertio (", -0.03820278039673389], ["x [ 1 ]", -0.0382244112955961], ["d // 2", -0.03824386171117099], [", xs [", -0.03825010243119318], [", xs [ 1", -0.03825010243119318], ["mon", -0.03826285764020184], ["mini", -0.03826285764020184], ["// k )", -0.038277231957973966], ["1 : :", -0.038286512420319996], ["1 : : 2", -0.038286512420319996], ["[ 1 : :", -0.038286512420319996], ["pow_2", -0.03830697445071866], ["#INDENT# ans = (", -0.03832499303866753], ["+ 1 <", -0.03832543372157685], ["coef", -0.03836236814113939], [") : #INDENT# b", -0.03838412614019057], [". inf", -0.038391414122461796], ["a3 ,", -0.0384244436061491], ["mod -", -0.038451108104300406], ["val [", -0.038480916494662794], ["#DEDENT# print ( max", -0.03853240429581725], [", d ) #NEWLINE#", -0.03854023294335468], ["2 ] =", -0.03855848882976002], ["0 ] = 0", -0.03862653718362411], ["n - i )", -0.03864351823814372], ["k ] [", -0.03872213061544474], ["[ k ] [", -0.03872213061544474], ["= self", -0.03873501223258217], ["mod = 10 **", -0.03874477761918049], ["mod = 10", -0.03874477761918049], ["output =", -0.03875304947166553], [", m -", -0.038763985720908105], [") or (", -0.03883489606135888], ["[ z", -0.0388438923563486], [": #INDENT# ret", -0.03889890954048598], ["#INDENT# ret", -0.03889890954048598], ["1 ] >", -0.038900547770085905], ["\" \" . join (", -0.03890097159020727], ["\" \" .", -0.03890097159020727], ["\" \" . join", -0.03890097159020727], ["// 2 +", -0.03892356407660098], ["print ( \" \" .", -0.038984800297272214], ["print ( \" \"", -0.038984800297272214], ["v ] )", -0.03899608525260787], ["d >", -0.03906548340573077], ["] [ frm", -0.03907181687268829], ["] [ frm ]", -0.03907181687268829], [", p ) #NEWLINE#", -0.03908799079469152], ["#NEWLINE# solve3", -0.039180625532774856], [") #NEWLINE# solve3 (", -0.039180625532774856], ["#NEWLINE# solve3 (", -0.039180625532774856], [") #NEWLINE# solve3", -0.039180625532774856], ["rl", -0.03918095332880054], ["2 ] ) #NEWLINE#", -0.039252440564899335], [", i -", -0.039261722917238395], ["> 0 and", -0.03926417714158915], [", 0 ) #NEWLINE#", -0.039292903086428604], ["[ w ]", -0.03929470002629765], ["( n + 1", -0.0392984723340965], ["k ] #NEWLINE#", -0.03931527985167841], ["s [ j ]", -0.039332521667771334], ["] ] [", -0.03934164201053525], ["==", -0.039390741167310034], ["if i %", -0.03945978629178053], ["[ j ] -", -0.03952342431426367], ["append ( [ i", -0.03952697002154055], ["l + 1", -0.03954898064988864], [">= 1", -0.03955517509228222], [", j , k", -0.039583496743963206], ["#INDENT# ans = max", -0.03961309399012538], ["\"l\"", -0.039751928334057725], [", mask", -0.03976600127946444], ["d #NEWLINE#", -0.039768001592954114], ["( ' ' .", -0.039817172829908626], ["' ' . join", -0.039817172829908626], ["' ' . join (", -0.039817172829908626], ["( ' ' . join", -0.039817172829908626], ["' ' .", -0.039817172829908626], ["#NEWLINE# j = 0", -0.03984338718935143], [", x2", -0.03985444324234456], [", i ) :", -0.03986847290974346], ["+ list", -0.040023849636944796], ["+ list (", -0.040023849636944796], ["( n - 1", -0.04006434066910231], ["( n - i", -0.0402055471841559], ["[ 1 :", -0.040220363491125136], ["#INDENT# if t", -0.04022205574389286], [": #INDENT# if t", -0.04022205574389286], ["#INDENT# cnt =", -0.040356426866886674], ["x [ 1", -0.040363999736577234], ["] [ (", -0.04037266846644966], ["f in", -0.04038386377084742], ["l [ j ]", -0.04040961487027712], ["l [ j", -0.04040961487027712], ["] #NEWLINE# #DEDENT# #DEDENT#", -0.04041719158099011], ["mod #NEWLINE# #DEDENT# #DEDENT#", -0.040475495384023806], ["maxj", -0.04051361397197842], ["minj", -0.04051361397197842], ["factors", -0.04052226830120048], ["val , idx in", -0.0405751816396442], ["for val , idx", -0.0405751816396442], ["val ,", -0.0405751816396442], ["top_k", -0.0405751816396442], ["for val ,", -0.0405751816396442], ["val , idx", -0.0405751816396442], ["[ m", -0.04058210979264851], ["y0", -0.04060728516977392], ["cos", -0.040623596773328816], ["1 : ]", -0.04067799783530289], ["#DEDENT# return #NEWLINE#", -0.040679778895236544], ["#NEWLINE# #DEDENT# return #NEWLINE#", -0.040679778895236544], ["s #NEWLINE# #DEDENT#", -0.04071899912013423], [", 4", -0.04073407334893628], ["] - 1 )", -0.04074312504801294], ["#INDENT# ar", -0.04079134984050062], [": #INDENT# ar", -0.04079134984050062], ["+ s2", -0.04084962903498653], ["] + 1 #NEWLINE#", -0.0408546876236276], ["#DEDENT# print (", -0.04087181904023095], ["#INDENT# j += 1", -0.04091511910447925], ["#INDENT# j +=", -0.04091511910447925], [": #INDENT# j +=", -0.04091511910447925], ["< 0", -0.040967021655072135], ["p , q", -0.040972556063114625], ["arr = [", -0.04100112769338484], ["1 ] -=", -0.04100786662546413], ["la", -0.04100813631593831], ["k - 1", -0.04115648968234775], ["#NEWLINE# #DEDENT# #DEDENT# elif", -0.04115655452074994], ["-1 #NEWLINE#", -0.04116167371744908], ["#NEWLINE# dp = [", -0.041167654722504964], ["#NEWLINE# s = 0", -0.04118124537110368], ["search_from", -0.041190240913715585], [">= 0 : #INDENT#", -0.04119432157256304], [">= 0 :", -0.04119432157256304], [") #NEWLINE# cnt +=", -0.04135476103012644], ["val (", -0.0413634761608374], ["x *", -0.04138766018639611], ["big", -0.041395488420870576], [") : #INDENT# s", -0.04142878254397838], ["r0", -0.04145294226348706], ["] == 1 :", -0.04149000965027176], ["if j ==", -0.04152819355814901], ["* m", -0.0415778002623185], ["c ) #NEWLINE# #DEDENT#", -0.04159016476419914], ["x ) #NEWLINE# #DEDENT#", -0.04162194028952807], ["ax", -0.041622461540518435], ["1 and", -0.041640128367586064], ["] [ t", -0.04168431526221555], [", h )", -0.04169726513739817], ["+ s [", -0.04176108044700987], ["] * ( n", -0.04180455668000869], [") == 1 :", -0.041877934503933754], ["i >=", -0.04188328114507124], ["ttt", -0.04191276152053096], ["f [ i", -0.04196392853298605], ["= true ) #NEWLINE#", -0.04198198498614208], ["( 3 )", -0.042008696352452295], ["( c1", -0.04202845217642741], ["inv", -0.04204277489376482], ["#NEWLINE# #DEDENT# if n", -0.042128252121014904], ["] #NEWLINE# y", -0.04216547381249957], ["#DEDENT# for j in", -0.04221157236080229], ["#DEDENT# for j", -0.04221157236080229], ["( l + 1", -0.04221544148470133], ["done_map_r", -0.04222889279302121], ["done_map_l", -0.04222889279302121], ["#INDENT# val", -0.04223979852695202], ["d [ j", -0.04224293103773133], ["d [ j ]", -0.04224293103773133], ["x -= 1 #NEWLINE#", -0.04225961838775641], ["x -= 1", -0.04225961838775641], ["] > p", -0.042261797406133325], ["> p", -0.042261797406133325], ["#DEDENT# def solve", -0.0423020367134358], ["#DEDENT# def solve (", -0.0423020367134358], ["x ) - 1", -0.042326214410265836], ["= m #NEWLINE# #DEDENT#", -0.04234033468245136], ["x for", -0.04234768451995093], ["x for x", -0.04234768451995093], ["requirements", -0.04241530312177118], [", q ,", -0.04241795669699635], [") : #INDENT# p", -0.042444529452746016], ["] #NEWLINE# ans", -0.04245558435182788], ["#NEWLINE# s1", -0.04245684069160376], ["== i", -0.04247893701815275], ["3 ] :", -0.04248595284089814], ["3 ] : #INDENT#", -0.04248595284089814], ["i ] - a", -0.042488713888925805], ["xf", -0.042496756415533646], ["m ) #NEWLINE# #DEDENT#", -0.04250274204728095], [", b ) #NEWLINE#", -0.04251620797979004], ["a1 ,", -0.04255612412476071], ["2 ) : #INDENT#", -0.04257828758689336], ["2 ) :", -0.04257828758689336], ["negbig and", -0.042579463434135593], ["== negbig and", -0.042579463434135593], ["ans [ i", -0.04259363058925786], ["res = [", -0.04259911463100537], ["visited [ i ]", -0.04261712574097792], ["true ) #NEWLINE#", -0.04266626527026569], [", a1", -0.04267801038358335], ["b = [ ]", -0.04267877677545711], ["s : #INDENT# print", -0.04270383108007085], [") : #INDENT# i", -0.04270904261209937], ["range ( 3", -0.042726193987947324], ["in range ( 3", -0.042726193987947324], ["+= a [", -0.042726363674200005], ["maxi", -0.04276437030375499], ["+ 1 ] =", -0.04277651744939189], ["] <", -0.042795965583263054], ["#INDENT# if r", -0.04287785993167699], [": #INDENT# if r", -0.04287785993167699], ["1 #NEWLINE# #DEDENT# return", -0.04291027297987762], ["< d :", -0.04298215040581536], ["< d : #INDENT#", -0.04298215040581536], ["#INDENT# nonlocal", -0.04299763967982634], [": #INDENT# nonlocal", -0.04299763967982634], ["v :", -0.04301101428513226], ["flag", -0.04301673631490595], ["l2", -0.04306499439059579], ["1e9", -0.04308197124168203], ["answer ) #NEWLINE#", -0.04310430849128937], ["print ( answer )", -0.04310430849128937], ["( answer ) #NEWLINE#", -0.04310430849128937], ["<= 0 : #INDENT#", -0.04311366852056934], [", r ) :", -0.043117095131836286], [": #INDENT# minn =", -0.043141171405478344], [": #INDENT# minn", -0.043141171405478344], ["2 and", -0.04320392119473689], [": 2 ]", -0.04332283745239732], ["#NEWLINE# class", -0.04334854446069363], ["pass #NEWLINE#", -0.04335079631464293], ["[ [ 0 for", -0.04344364725777653], [", q =", -0.04345140995670155], ["2 , mod", -0.043504740993698325], ["= mid", -0.04354386224806599], ["= arr [", -0.04357241899623234], ["% i", -0.043590758353010246], ["#NEWLINE# ans = [", -0.04360081446470693], ["li (", -0.04362395438994658], ["li ( )", -0.04362395438994658], ["'b' , 'a'", -0.04365535292224133], ["'b' , 'b'", -0.04365535292224133], ["'a' , 'a'", -0.04365535292224133], ["( 1 ) #NEWLINE#", -0.0436561368902471], ["#DEDENT# if k", -0.04367230725502288], ["q [", -0.04368702226152743], ["chk_r", -0.0437007096894892], ["chk1", -0.0437007096894892], ["return a", -0.04370661074358635], ["* ( k -", -0.04373942794762861], ["as", -0.04379056797246991], ["<= 0 :", -0.043835232372908754], ["stdout ,", -0.04386917657694989], ["] ) - 1", -0.0439312765292116], ["r = 0 #NEWLINE#", -0.04395216754049848], ["down", -0.043960919571816394], ["cc", -0.04396814336506707], ["+ b *", -0.0440424758993699], ["a +", -0.044042852178998004], ["0 #NEWLINE# if", -0.04404438567077849], ["] += a [", -0.04404847905339191], ["[ x -", -0.04406288060001162], ["graph ,", -0.044067332038468285], ["solve3 (", -0.04407820372437171], ["solve3", -0.04407820372437171], ["divs", -0.04408088407017073], ["in s : #INDENT#", -0.04412031760876666], ["( \" \" . join", -0.04412353861942692], ["( \" \" .", -0.04412353861942692], ["b3 )", -0.04419042851566448], ["- 1 ] [", -0.04422359539680388], ["= r", -0.04424068368878736], ["add", -0.044258751623304324], ["#NEWLINE# s2", -0.044310419913434936], ["( n +", -0.04432645768611082], ["( i -", -0.04439892888507685], ["( a1 ,", -0.04440317251862375], ["if max (", -0.04442214119043861], ["nonlocal", -0.044476167002115034], ["nxt [", -0.04450385027822589], [": #INDENT# nxt", -0.04450385027822589], ["#INDENT# nxt", -0.04450385027822589], ["c ] ) #NEWLINE#", -0.0445241887356602], ["def check", -0.04452578101804137], ["def check (", -0.04452578101804137], ["d : #INDENT#", -0.044528637172144114], ["tbl [", -0.044606572238479344], ["xs [ 1", -0.04462511950305871], ["xs [ 1 ]", -0.04462511950305871], [") ] #NEWLINE# def", -0.04463528314132792], ["* x", -0.04464418514948016], ["frm ] [", -0.044653504997358054], ["[ frm ] [", -0.044653504997358054], ["k > 0", -0.044671170135298435], ["+ min", -0.04468099882412871], ["+ min (", -0.04468099882412871], ["= true", -0.04469500196795416], [", k ) :", -0.044710805141452536], ["2 :", -0.04476698154062185], ["= arr", -0.044806589796304634], ["[ 1 ,", -0.04484291079721568], ["[ ( i", -0.044854045934477185], ["[ b", -0.04485479526966608], ["1 , 2", -0.04486395883289118], ["-= x", -0.0449335294532332], ["1 ] ,", -0.04495288862779429], ["<= b1", -0.0449675798146603], ["d = [", -0.04499686420682063], ["#INDENT# b =", -0.04500053924789151], ["#INDENT# print ( 0", -0.04501125404546485], ["b ) ) #NEWLINE#", -0.045059837306721896], ["#INDENT# if dp [", -0.045121908206737574], [": #INDENT# if dp", -0.045121908206737574], ["#INDENT# if dp", -0.045121908206737574], [") ] #NEWLINE# a", -0.04516609034182681], ["b ,", -0.04518567615132254], ["( ) #NEWLINE# m", -0.04521769651137319], ["enumerate (", -0.0452212789808788], ["in enumerate", -0.0452212789808788], ["enumerate", -0.0452212789808788], ["in enumerate (", -0.0452212789808788], ["-= a", -0.0452742145720624], [") #NEWLINE# arr =", -0.04527624412152549], ["#NEWLINE# arr =", -0.04527624412152549], ["] #NEWLINE# d =", -0.04529858256632053], ["i *", -0.045332564992219056], ["( arr", -0.045378641760051026], [": #INDENT# return int", -0.04538139026214309], ["#INDENT# return int (", -0.04538139026214309], ["#INDENT# return int", -0.04538139026214309], ["mod ) #NEWLINE#", -0.045381944765927974], ["#NEWLINE# import heapq", -0.04538529689653322], ["import heapq #NEWLINE#", -0.04538529689653322], ["import heapq", -0.04538529689653322], ["#NEWLINE# import heapq #NEWLINE#", -0.04538529689653322], ["r -", -0.04539133576851378], ["+ 1 #NEWLINE# if", -0.04543905185500898], ["[ : n", -0.04544665158106018], ["if max", -0.04544826378347558], ["( ops [", -0.04549297688379084], [". degree", -0.04555531216760304], ["] #NEWLINE# d", -0.045605569831852835], ["( ma", -0.0456133012674266], ["a2 ,", -0.04563857870875052], ["arr1", -0.04569935905172428], ["now =", -0.04572160332883818], [") - (", -0.045788633326448266], ["#INDENT# n , m", -0.045789260469333765], ["[ c ] )", -0.04579345890452474], ["dp [ k", -0.04580541935108249], ["- y", -0.04581926726855526], ["for u", -0.04582073773267319], ["#NEWLINE# if d", -0.04583726630384161], ["-1 ] : #INDENT#", -0.04589092695543877], ["-1 ] :", -0.04589092695543877], ["#INDENT# input", -0.04590457831238901], ["#INDENT# input =", -0.04590457831238901], ["minn =", -0.04597864301520593], ["if arr [", -0.04599188569525346], ["if arr", -0.04599188569525346], ["* ( l", -0.045999315106430905], ["* ( l +", -0.045999315106430905], ["] , dp [", -0.04601243378310458], ["] , dp", -0.04601243378310458], ["b #NEWLINE#", -0.04603733914163168], ["w ]", -0.0460989219051661], ["up", -0.046100598757805054], ["#NEWLINE# e", -0.04613807572024165], ["+ 2 *", -0.04614759598258766], ["= n - 1", -0.04620456056708883], ["1 ] - 1", -0.04620457629378727], [": #INDENT# s +=", -0.046231410776926794], ["states [", -0.04624285672896946], [") #NEWLINE# if b", -0.04630528117109285], ["== false", -0.04635594183682493], ["== false :", -0.04635594183682493], ["== false : #INDENT#", -0.04635594183682493], [", idx in", -0.04637163615959337], ["+ 1 :", -0.046400827050282915], [": #INDENT# l .", -0.046446609911634545], ["#INDENT# l .", -0.046446609911634545], ["[ ] )", -0.04653556585534097], ["[ ] ) #NEWLINE#", -0.04653556585534097], ["#NEWLINE# #DEDENT# a =", -0.04656606298017313], [": #INDENT# if j", -0.04660443980081679], ["#INDENT# if j", -0.04660443980081679], ["\"#\"", -0.04660867059364743], ["1 ] ) :", -0.04660980067001702], ["* a + b", -0.04663030103569759], ["if not", -0.046673288388575006], [", y2", -0.04667654792879428], ["class", -0.0467006969047105], ["( b1", -0.04677347456920792], ["i ] == 0", -0.04678288827494098], ["] #NEWLINE# for x", -0.046793262877510504], ["% k", -0.046897290297184833], ["input , output", -0.046976615712123866], [", output ) #NEWLINE#", -0.046976615712123866], ["assertio", -0.046976615712123866], ["assertio (", -0.046976615712123866], ["input , output )", -0.046976615712123866], ["== true : #INDENT#", -0.04698622346569611], ["== true :", -0.04698622346569611], ["== true", -0.04698622346569611], ["= [ x", -0.047046798403899984], ["( 0 ) #NEWLINE#", -0.04712732240145289], ["< x", -0.047127668061877896], ["output ) #NEWLINE# #DEDENT#", -0.04715559254448865], ["output ) #NEWLINE#", -0.04715559254448865], ["( y2", -0.0472300715674468], ["n % 2", -0.047281708601666084], [", d )", -0.047331837244638957], ["heappush", -0.04735250326788599], ["in v", -0.04739043748629055], ["packmans [ i ]", -0.04741523807074451], ["packmans [", -0.04741523807074451], ["packmans [ i", -0.04741523807074451], ["i ] - 1", -0.047434904804738796], ["+ 1 : #INDENT#", -0.04743577584710451], ["= dict", -0.04752315005172917], ["= dict (", -0.04752315005172917], ["dict (", -0.04752315005172917], ["#INDENT# if n %", -0.047547196322278766], ["( self ,", -0.04757387266525511], ["self ,", -0.04757387266525511], ["i #NEWLINE# #DEDENT# #DEDENT#", -0.047584372602354874], ["( ct [", -0.04760558637734568], ["] ) == 3", -0.04760558637734568], ["bl", -0.04763702235306203], ["#NEWLINE# mod =", -0.04770174229111938], ["#NEWLINE# mod", -0.04770174229111938], ["9 )", -0.04772444292596455], ["temp [ i ]", -0.04775043682045989], ["temp [ i", -0.04775043682045989], ["t3", -0.04778367375154394], ["( [ int", -0.04780667794615233], ["#NEWLINE# st =", -0.047833747804836076], ["] ] #NEWLINE#", -0.04785895321960344], [") #NEWLINE# v", -0.047902441579374046], ["if n % i", -0.047968576945042564], [": #INDENT# i =", -0.04797737046449471], ["#INDENT# b .", -0.047992350561721304], [": #INDENT# b .", -0.047992350561721304], [", e", -0.04799565750431317], ["( answer )", -0.048060534297907416], ["answer )", -0.048060534297907416], ["[ 2 ] )", -0.048070434444394704], [", -1 ,", -0.0480868504796739], ["0 : #INDENT# break", -0.04809150464632402], ["append ( x )", -0.04815987016226947], [". append ( x", -0.04815987016226947], ["append ( x", -0.04815987016226947], [") #NEWLINE# m =", -0.04817379045384157], ["k : #INDENT# print", -0.04821164348608675], ["0.", -0.048266322468740075], ["in ans", -0.04829004205148467], ["return int (", -0.04832520142648737], ["return int", -0.04832520142648737], ["= m #NEWLINE#", -0.04834425033266793], ["nn", -0.048349293180514875], ["#NEWLINE# print ( \" \"", -0.048359515927728934], [") : #NEWLINE#", -0.04836265686408342], ["dict", -0.04838020384971169], ["< d", -0.04838199740591566], ["round (", -0.0484432682540836], [", a2 ,", -0.04855107059823836], ["[ k ] #NEWLINE#", -0.048617564137676324], ["1 #NEWLINE# #DEDENT# i", -0.048665067592975175], ["2 #NEWLINE# #DEDENT# #DEDENT#", -0.04872135992748579], ["import math #NEWLINE# def", -0.04873713288909364], ["math #NEWLINE# def", -0.04873713288909364], [", b2 ,", -0.048738092587025675], ["( res )", -0.04875853745061535], ["#DEDENT# d =", -0.04879613145032692], ["nt", -0.04889792200011018], ["'a' * n", -0.04890523088633883], ["split ( ) #NEWLINE#", -0.04891936858916243], ["y1 =", -0.04893952745151296], ["#DEDENT# p", -0.04895867122379068], ["a <=", -0.048958869797527844], ["n - x", -0.048991782646664324], ["-1 , -1 )", -0.04903637945493334], ["bb [ i", -0.0491024551022224], ["bb [", -0.0491024551022224], ["i ) : #INDENT#", -0.04912973526735421], ["i ) :", -0.04912973526735421], ["m +", -0.04914781999041506], ["] ) %", -0.049178687582116534], ["1 ) ,", -0.049217544860356795], ["( 3 ) :", -0.04927550650197035], ["range ( max", -0.0492876013425399], ["in range ( max", -0.0492876013425399], [") #NEWLINE# st", -0.04930370068362635], [") - 2", -0.04940086304502247], ["visited [ i", -0.04943336214764244], ["#INDENT# print ( 1", -0.049450676254139535], ["+ b", -0.04946867506624138], ["] >= a", -0.049471879239365094], ["] >= a [", -0.049471879239365094], ["for val", -0.04947299065369611], ["] = [", -0.04951594818271197], ["- 3 )", -0.049522572850154684], ["k #NEWLINE# if", -0.0495810550771851], ["#DEDENT# print ( res", -0.04958372021647489], ["z :", -0.04958643301077627], ["z : #INDENT#", -0.04958643301077627], ["= q", -0.049629822112702955], ["] [ j +", -0.04963253548902788], ["= c #NEWLINE# #DEDENT#", -0.04964480855801462], ["list ( range (", -0.049646132670129635], ["list ( range", -0.049646132670129635], ["( ( a", -0.049650836549138266], ["#NEWLINE# sys . setrecursionlimit", -0.04966904231565371], [". stdout .", -0.049705090332708424], ["sys . stdout .", -0.049705090332708424], ["\"r\"", -0.049714918108911176], [", xs", -0.04972313547892165], ["[ ind", -0.049748993970887834], ["= a #NEWLINE#", -0.04975051996872352], ["#DEDENT# a =", -0.04976899712949128], ["( list ) #NEWLINE#", -0.04978188184954713], ["( list )", -0.04978188184954713], ["defaultdict ( list", -0.04978188184954713], ["defaultdict ( list )", -0.04978188184954713], ["list ) #NEWLINE#", -0.04978188184954713], ["] <= 0", -0.049791281134545624], ["else : #INDENT# ans", -0.0499292049713206], ["( temp )", -0.04992980912422581], [": #INDENT# if d", -0.0499805321019304], ["#INDENT# if d", -0.0499805321019304], ["[ a ]", -0.04999746655373166], ["lcm (", -0.05008272253666868], ["if d [", -0.0500907562613682], ["+ j", -0.05012289023854593], ["( dp [", -0.05015142567337448], ["setrecursionlimit (", -0.05016034179718287], ["setrecursionlimit", -0.05016034179718287], ["sys . setrecursionlimit (", -0.05016034179718287], [". setrecursionlimit (", -0.05016034179718287], ["sys . setrecursionlimit", -0.05016034179718287], [". setrecursionlimit", -0.05016034179718287], ["!= 1", -0.0502242979319111], ["frm ]", -0.05023519312202781], ["] [ to ]", -0.05023519312202781], ["] [ to", -0.05023519312202781], ["[ frm ]", -0.05023519312202781], ["[ frm", -0.05023519312202781], ["posttochange", -0.050239757070285794], ["-1 ] +", -0.05024729157952805], ["j , k", -0.050276338305267454], ["( w ,", -0.05028487608390149], ["= pow (", -0.05037615738651947], ["= pow", -0.05037615738651947], ["= [ (", -0.05039799829487171], ["0 : #INDENT# for", -0.05040130731841538], ["( v ) #NEWLINE#", -0.05041594870643524], ["return a #NEWLINE#", -0.05042922621268643], ["return a #NEWLINE# #DEDENT#", -0.05042922621268643], [", y ) )", -0.050440940203062494], ["= len ( t", -0.050489412509564464], ["3 )", -0.050535233668936586], [", i + 1", -0.05060032020224671], ["10 ) #NEWLINE#", -0.05067399399880554], ["( dp )", -0.05070816623723708], ["arr )", -0.05077015796762778], ["[ false", -0.050798487376530796], [", 1 ]", -0.050803973954071234], ["dp [", -0.050809304080367323], ["colors", -0.05083748482630124], ["* ( i", -0.05088535212795824], ["pf", -0.050964352847581114], ["[ 1 ] *", -0.050967329508811096], ["acc", -0.05098914783449822], ["= min", -0.05104707635784974], ["= min (", -0.05104707635784974], ["1 #NEWLINE# for j", -0.051093125902150746], ["r = 0", -0.05109494642759119], ["used", -0.051122747903037585], ["avt [", -0.05119131487126804], ["l ] [", -0.0511937557932924], ["[ l ] [", -0.0511937557932924], ["- r +", -0.05120285268082015], ["#INDENT# pass #NEWLINE# #DEDENT#", -0.05120330104748438], [": #INDENT# pass #NEWLINE#", -0.05120330104748438], [": #INDENT# pass", -0.05120330104748438], ["#INDENT# pass", -0.05120330104748438], ["#INDENT# pass #NEWLINE#", -0.05120330104748438], ["pass #NEWLINE# #DEDENT#", -0.05120330104748438], ["'\\n' )", -0.05120759537843049], ["ans += 1", -0.051276472310952996], ["str ( x", -0.051312220175095014], ["< a", -0.05131432484259456], ["stk [", -0.05133464678376595], ["for j", -0.05137289225727252], ["] [ 2 ]", -0.05139042128724627], ["- b )", -0.051412208717370726], ["low", -0.051440242023034294], ["#INDENT# s +=", -0.051455968984495865], ["#NEWLINE# ans +=", -0.05147769198362526], ["|=", -0.05148670763221006], ["#INDENT# sum +=", -0.051537873340053685], [": #INDENT# sum +=", -0.051537873340053685], ["a , d", -0.05160606906812481], [", i ) #NEWLINE#", -0.05169490461435714], ["i = 0", -0.05173657322837806], ["i = 0 #NEWLINE#", -0.05173657322837806], ["ct = 0 #NEWLINE#", -0.05175245843815029], ["ct = 0", -0.05175245843815029], ["import stdin", -0.05176273504872938], ["from sys import stdin", -0.05176273504872938], ["sys import stdin", -0.05176273504872938], ["2 * b )", -0.05176290513296255], [">= m", -0.05182017932794147], ["1 if", -0.05182492008549921], ["( ) ,", -0.051870985383159346], ["state", -0.051885782485098765], [", a % b", -0.05193910961137671], ["b , a %", -0.05193910961137671], ["( i ) ]", -0.0519499623978171], ["i ) ]", -0.0519499623978171], ["maxdiv", -0.05197737334070585], ["#NEWLINE# mod = 10", -0.05198901050578034], ["] - 1 #NEWLINE#", -0.05199325446107718], [", a %", -0.05205658166801471], ["#NEWLINE# #DEDENT# d", -0.05215138052872238], ["[ 0 , 0", -0.05224705276487996], ["#NEWLINE# #DEDENT# t", -0.05228800242364802], ["0 , 2", -0.052330269079012656], ["heapq #NEWLINE#", -0.052417309840122286], [") % k", -0.052441283199359735], [") , int (", -0.052526893836420695], [") , int", -0.052526893836420695], [", int ( input", -0.052526893836420695], ["ans : #INDENT#", -0.05259038410009673], ["ans :", -0.05259038410009673], ["] #NEWLINE# a", -0.05260449785492958], ["#NEWLINE# while true :", -0.05265154480049816], ["#NEWLINE# while true", -0.05265154480049816], ["len ( t", -0.05273458813894218], ["len ( t )", -0.05273458813894218], ["frontier", -0.052737131861949275], ["ma =", -0.052747000443013406], ["> x", -0.05280334817804305], ["* #NEWLINE#", -0.052815470444745514], ["import *", -0.052815470444745514], ["import * #NEWLINE#", -0.052815470444745514], ["#NEWLINE# #DEDENT# if s", -0.05282966378477116], ["#DEDENT# if s", -0.05282966378477116], ["[ n - i", -0.052907935963563614], ["[ -1 ] [", -0.052946220303856914], ["0 , 0 ]", -0.05297774339158213], ["input ,", -0.053089528225694606], ["phi", -0.05310158195737443], ["6 #NEWLINE#", -0.053198675576127945], [") #NEWLINE# #DEDENT# a", -0.05321084995152646], ["m ,", -0.053224401788780525], ["solve (", -0.05326545254387304], ["x0", -0.05327374921358775], ["( x *", -0.053298880772987195], ["( a1", -0.05331159981803218], ["a1 , b1", -0.05335966293162809], ["( ( 2", -0.05336460927639018], ["= dict ( )", -0.05341247904442893], ["dict ( )", -0.05341247904442893], ["dict ( ) #NEWLINE#", -0.05341247904442893], ["#INDENT# arr", -0.05347261204710613], [": #INDENT# arr", -0.05347261204710613], ["( l [ 0", -0.053494270636733864], ["n - 1 ]", -0.05350894840083207], ["y1 )", -0.05353914190810912], ["#NEWLINE# i = 0", -0.05359742764367286], ["= s1", -0.05361412974568538], ["arr =", -0.0536249142445849], ["m <=", -0.053692050514565354], [", 'a' , 'b'", -0.053712380188106756], ["mincutlen", -0.05374486416757482], ["sufflens", -0.05374486416757482], ["curcutlen", -0.05374486416757482], ["#NEWLINE# #DEDENT# elif n", -0.05375106793177514], ["ns", -0.05375939006360902], ["#NEWLINE# sys .", -0.05378570796231279], ["#NEWLINE# sys", -0.05378570796231279], [") ) #NEWLINE# l", -0.05381283941625942], [") ) #NEWLINE# d", -0.05384647936592757], ["d [ a", -0.05386373334799437], ["] ]", -0.05387489535805284], ["t +", -0.053908157245391324], ["* ( n", -0.05413853260668881], ["l ) #NEWLINE#", -0.05415094636998071], ["b .", -0.05415409059001718], ["#NEWLINE# d [", -0.05416924316265399], ["in zip", -0.05417207265129535], ["in zip (", -0.05417207265129535], ["r - l", -0.0541879623671869], ["i ] = true", -0.054228585340786645], ["ans = ( ans", -0.05423316350449493], ["- 1 ) +", -0.054251878926599266], ["#DEDENT# #DEDENT# if len", -0.05426912827557415], ["#INDENT# if n", -0.05428632304777849], ["; #DEDENT#", -0.05432336714417944], ["#NEWLINE# ; #DEDENT#", -0.05432336714417944], ["] #NEWLINE# #DEDENT# return", -0.054445102123513674], ["] #NEWLINE# p", -0.05446777230946573], [") - 1 #NEWLINE#", -0.054485015902169275], [") * ( n", -0.05449829023863969], ["return 0 #NEWLINE# #DEDENT#", -0.05451487141614775], ["return 0 #NEWLINE#", -0.05451487141614775], ["return 0", -0.05451487141614775], ["x1 , y1 =", -0.05452627017429525], [", y1 =", -0.05452627017429525], [": #INDENT# b =", -0.054576927757462465], ["s3", -0.054583540809447134], ["( e )", -0.054585985656297735], ["print ( t )", -0.05464098230488953], ["#INDENT# ct", -0.05467861778351034], [": #INDENT# ct", -0.05467861778351034], ["c %", -0.05468464541945892], ["n ) #NEWLINE# arr", -0.05468852575696524], ["<= k", -0.05471180596981593], ["i : ]", -0.0547485456177344], ["c //", -0.05476747778041481], ["( m * k", -0.05478616985278876], ["m * k )", -0.05478616985278876], ["format", -0.054791153683974185], ["0 : #INDENT# n", -0.05482401868988264], ["( d )", -0.05482905453290495], ["7 #NEWLINE#", -0.054831262171750134], ["0 #NEWLINE# #DEDENT#", -0.05485843539876367], ["2 , 2", -0.054911553919192856], ["#INDENT# g", -0.05496222468702818], [": #INDENT# g", -0.05496222468702818], ["] [ k ]", -0.05497081789502564], ["#NEWLINE# import sys #NEWLINE#", -0.055033992119344476], ["temp =", -0.055043309033611064], ["capacity", -0.05505453041713226], [", n =", -0.055107639052868605], ["1 ] <", -0.0551253975319549], ["#DEDENT# if t", -0.05515679920075558], ["y -", -0.055225970967328536], ["( al", -0.05526848052032117], ["1 ] == 1", -0.0552766867025312], ["tt", -0.0553653964456066], [") // k", -0.05540920761669618], ["'\\n'", -0.055417663238296055], ["s ) ) :", -0.055464224142767804], ["= ( ans", -0.05550630009741412], ["[ 2 ] +", -0.05554090350379325], [". append ( 0", -0.055552020316377], ["append ( 0", -0.055552020316377], ["append ( 0 )", -0.055552020316377], ["output )", -0.05555813561731178], [") #NEWLINE# quit (", -0.055569091599876136], [") #NEWLINE# quit", -0.055569091599876136], ["quit ( ) #NEWLINE#", -0.055569091599876136], ["#NEWLINE# quit ( )", -0.055569091599876136], ["#NEWLINE# quit", -0.055569091599876136], ["quit ( )", -0.055569091599876136], ["#NEWLINE# quit (", -0.055569091599876136], ["quit", -0.055569091599876136], ["quit (", -0.055569091599876136], ["y1 , y2", -0.05557706399692662], ["* k )", -0.055582972597863496], [", g (", -0.055585119029409186], [") , g (", -0.055585119029409186], [") , g", -0.055585119029409186], ["0 , 1", -0.05559855407245886], ["break #NEWLINE# #DEDENT# if", -0.05561321298188841], ["( c [", -0.05567656339491448], ["i ] )", -0.055677547842386675], [", output )", -0.05575045102751384], [", output", -0.05575045102751384], ["x3", -0.0557510972235039], ["tbl", -0.05575821529809917], ["-1 ] [", -0.05576919129428812], ["[ j -", -0.05582277048434412], ["dp [ i +", -0.055899999835644046], ["\"no\" #NEWLINE#", -0.05594006515855827], ["( ct", -0.05603864138720979], ["xp", -0.05607468388407876], ["assert", -0.05611077127212584], ["for j in", -0.0561162951919615], ["join ( [ str", -0.056210542740219006], ["[ str ( x", -0.056210542740219006], ["[ k", -0.0562471895641869], ["#DEDENT# #DEDENT# ans", -0.05630083520845582], [") #NEWLINE# v =", -0.05634139621233475], [") <=", -0.05635305857407529], ["n // 2 )", -0.056373054962971784], ["!= 0 : #INDENT#", -0.05639264380289919], ["!= 0 :", -0.05639264380289919], ["#NEWLINE# #DEDENT# l", -0.05639545466448023], ["#DEDENT# l", -0.05639545466448023], ["[ f ]", -0.05640027489667576], ["values ( )", -0.056466254510842806], ["values ( ) )", -0.056466254510842806], [". values (", -0.056466254510842806], ["values (", -0.056466254510842806], [". values", -0.056466254510842806], [". values ( )", -0.056466254510842806], ["if r", -0.05648748765784805], ["( x - 1", -0.05648925983068056], [", y ) :", -0.05650143553671198], ["pretochange", -0.05651972670407152], [", stdin", -0.05655999227003382], ["#DEDENT# t", -0.05659559294752969], ["= n +", -0.05665840502154996], ["#DEDENT# m", -0.05666809949096538], ["j in range", -0.05672102662148644], ["for j in range", -0.05672102662148644], ["j in range (", -0.05672102662148644], ["a + 1", -0.05673142542254498], ["mid", -0.05675247641723221], ["sum_ [ i", -0.056765475397569876], ["== negbig", -0.05677261791218078], ["] = max (", -0.056860625332395075], ["continue #NEWLINE# #DEDENT# if", -0.056860790437694056], ["'a' , 'b' ,", -0.056879640716017005], ["( int ( x", -0.056888618107568706], ["#DEDENT# x =", -0.05690018709462642], ["= len ( [", -0.05693780977477241], ["#NEWLINE# #DEDENT# def main", -0.056945212920281575], ["#INDENT# for i in", -0.05695340308874749], ["x + 1 )", -0.05697518408173078], ["#NEWLINE# ct", -0.05707668881427327], ["mode", -0.05712388432938364], ["root [", -0.05712388432938364], [", s ) #NEWLINE#", -0.05718153436878402], ["l + 1 )", -0.05718624047465783], ["p #NEWLINE# #DEDENT#", -0.05721885726793343], ["-1 ] ) )", -0.057236546613186653], ["append ( 1 )", -0.057257549014546175], ["v ) #NEWLINE#", -0.057261970716944874], ["q [ -1", -0.05729665542159193], ["q [ -1 ]", -0.05729665542159193], ["q ,", -0.05732706527047258], ["from sys import", -0.05739768644584783], ["sys import", -0.05739768644584783], ["from sys", -0.05739768644584783], ["heappop", -0.057408473269527964], [": #INDENT# q =", -0.057483462739968016], ["#INDENT# q =", -0.057483462739968016], [": #INDENT# res =", -0.0574874568114475], ["[ i ,", -0.05750890580233424], ["c1 =", -0.05755084729091629], ["( pos", -0.057585515412898816], ["[ d", -0.057613809082677825], ["- k + 1", -0.05765463775767909], ["ct =", -0.05765717018353252], ["#DEDENT# print ( \"no\"", -0.057670922887263054], ["( [ 0 ]", -0.05768642882646352], ["n #NEWLINE# #DEDENT#", -0.05769311400775827], ["0 ] )", -0.05769504989362802], ["to ]", -0.05773645409732333], ["[ to ]", -0.05773645409732333], ["a * b", -0.05776669585790903], [", min (", -0.05790796325410282], ["* v", -0.057921476273289384], ["** (", -0.057942982572544266], ["idx in", -0.05796454519949172], ["n - 1 ,", -0.057967889485596634], ["( m ,", -0.058019421212127296], ["#DEDENT# if not", -0.05805429678863028], ["[ i ] :", -0.058076937984530265], ["= max ( 0", -0.05809427452415911], [", b1", -0.058098029156685556], ["d , e", -0.058099420949128046], ["[ -", -0.05813114073137809], ["elif seq", -0.05814501764186727], ["#NEWLINE# #DEDENT# if i", -0.058161072102433854], ["- c", -0.05816339952689178], ["] .", -0.05817215393549863], ["while j", -0.05817873288710367], [", 'a' ,", -0.05818275290974094], ["// ( 2", -0.05820388553789225], ["i , j ,", -0.05830533316051819], ["% 2 ]", -0.05834092940725737], ["minn", -0.058370869533952915], ["2 #NEWLINE# #DEDENT#", -0.05842469381180695], ["( [ str (", -0.05843281375092326], ["( [ str", -0.05843281375092326], ["st =", -0.05844174612191391], ["( 3 ) #NEWLINE#", -0.05846077804802462], ["avt", -0.05850435985287775], ["( 60 )", -0.058507749077559436], ["range ( 60 )", -0.058507749077559436], ["t ,", -0.05855312309658909], ["d1", -0.05855651679272348], ["2 == 1 :", -0.05877250121985711], ["( cur )", -0.05877269825029867], ["+ ct", -0.058780039283727985], ["in range ( 0", -0.058786512143761654], ["= [ list", -0.058808570475657934], ["= [ list (", -0.058808570475657934], ["= i + 1", -0.058963695491945065], [". append ( 1", -0.05900806055863666], ["append ( 1", -0.05900806055863666], ["j + 1 ]", -0.059016529741204325], [", j )", -0.05903766166920357], ["] ] )", -0.059069768272918266], ["x %", -0.05907092413711822], ["#DEDENT# #DEDENT# if (", -0.05915973702669417], ["sys #NEWLINE# from", -0.05916544174444919], ["import sys #NEWLINE# from", -0.05916544174444919], ["+ 1 #NEWLINE#", -0.05920185773917622], ["s [ j", -0.059224473304156894], [", 1 ,", -0.059240713496200005], ["solve", -0.05927846142547783], ["[ to", -0.059320058862661965], ["] #NEWLINE# def", -0.059344333482773945], ["#INDENT# a , b", -0.059451335693624284], ["word", -0.05945245168903066], ["] + ct [", -0.05950698297168209], ["+ ct [", -0.05950698297168209], ["] + ct", -0.05950698297168209], ["#NEWLINE# import sys", -0.059543034231012086], ["1 ] [ j", -0.05966481077600972], ["#NEWLINE# while x", -0.05969399349940035], ["- 1 , -1", -0.059791791016636495], ["cache [", -0.05979416815857862], ["deque", -0.05981976487910533], ["3 ) : #INDENT#", -0.05982110119825901], ["<= k :", -0.05983029250884206], ["<= k : #INDENT#", -0.05983029250884206], ["] = max", -0.05986835674559933], [") ] =", -0.05987089644344567], ["x ) -", -0.059913558487375757], ["( x ) -", -0.059913558487375757], ["if c", -0.05995674862379492], ["9 #NEWLINE#", -0.059973183090002005], ["1 for", -0.060053975587987016], ["costs", -0.06011506860491431], ["states", -0.0601157137476603], ["3 ) :", -0.06013362333107023], ["] ] ) #NEWLINE#", -0.06013394838260556], ["#NEWLINE# if i", -0.060143928126505555], ["1 ) * (", -0.06017469117943327], ["( i ) #NEWLINE#", -0.06020851305863009], [", a3", -0.06024921800210006], ["n - 1", -0.06033845835161144], ["j ] )", -0.060346858726994884], ["import defaultdict", -0.06034845788273737], ["from collections import defaultdict", -0.06034845788273737], ["collections import defaultdict", -0.06034845788273737], [": #INDENT# w", -0.060374105184949484], ["#INDENT# w", -0.060374105184949484], ["n , mod", -0.060403307272482866], ["sys #NEWLINE# import", -0.060470467065495845], ["#NEWLINE# s +=", -0.06047906685053661], ["100 #NEWLINE#", -0.06052117948825798], [": 0 ,", -0.060524356153141654], ["+ 1 #NEWLINE# #DEDENT#", -0.060541168165757754], ["0 <=", -0.060550442335796754], ["= t", -0.06060096294302194], ["#DEDENT# ans = 0", -0.06073454890993859], ["( l [", -0.06074213641325135], [", 0 ]", -0.06074713579303298], ["#NEWLINE# arr .", -0.06083933287116547], ["#NEWLINE# arr . append", -0.06083933287116547], ["s [ n -", -0.060892534559688495], ["s [ n", -0.060892534559688495], ["( a ,", -0.060976635038982194], ["r_search", -0.06099728958991952], ["// k #NEWLINE#", -0.061017423670217716], ["#DEDENT# print ( )", -0.06103414667284342], ["list )", -0.06104778420584662], ["#DEDENT# d", -0.06116155413902145], [", j =", -0.06118991591216762], ["#INDENT# r", -0.06119167903919832], [": #INDENT# r", -0.06119167903919832], ["temp )", -0.06128119289701758], ["( x ) #NEWLINE#", -0.06130192990323769], ["1000 * (", -0.06131199372640949], ["- p", -0.06133643443291805], ["] [ k", -0.06141248600587462], ["etn", -0.061634441084387356], ["pode", -0.061634441084387356], ["ete", -0.061634441084387356], ["podn", -0.061634441084387356], ["w ,", -0.061640684737677025], ["if s <", -0.061680140678272814], [": #INDENT# a ,", -0.061683349229202024], ["#INDENT# a ,", -0.061683349229202024], ["x ) )", -0.061716343026225855], ["i - 2", -0.061842176755583796], ["- 2 ]", -0.06203803322664907], ["* n #NEWLINE# for", -0.062047433788192996], ["- 1 -", -0.06209266275001497], ["ans #NEWLINE#", -0.06209986448303758], [") #NEWLINE# arr .", -0.06210251100394318], [": -1 ] #NEWLINE#", -0.06212439323053757], ["cnt ) #NEWLINE#", -0.06213586587237869], ["j ,", -0.062162207488713206], ["10 **", -0.06218379233383068], ["l ==", -0.06224016264869922], ["- i ]", -0.062257901145161214], ["join ( map", -0.062358225348926745], ["join ( map (", -0.062358225348926745], [". join ( map", -0.062358225348926745], [") #NEWLINE# b =", -0.06242826983909942], ["i = 1 #NEWLINE#", -0.0626194553493242], ["i = 1", -0.0626194553493242], [", 0 )", -0.0626711966061414], ["st .", -0.06270663339907862], ["= ( l", -0.06271267401484522], ["d = {", -0.06273044688830687], ["#DEDENT# #DEDENT# elif", -0.06278515788323168], ["( x [", -0.0628276573669054], ["#NEWLINE# print ( ans", -0.06284287833667776], [">= a [", -0.06285490745032611], ["#NEWLINE# #DEDENT# ans =", -0.06286042080207102], ["( map ( float", -0.0628956194103989], ["#NEWLINE# r = 0", -0.06292451324668598], ["res )", -0.06299924533598782], ["[ str", -0.06307383617129801], ["[ str (", -0.06307383617129801], ["= [ 0 ,", -0.06319290478198959], [") ) for i", -0.0633498498199068], ["[ j + 1", -0.06336369455326332], ["stdin . readline", -0.0633836851479434], ["s = 0", -0.06341009795951827], ["s = 0 #NEWLINE#", -0.06341009795951827], ["== 3 : #INDENT#", -0.0634647678033794], ["] [ 1 ]", -0.06350064461063605], ["0 ] * (", -0.06351243546886402], ["1 , -1", -0.06352526987128602], ["[ list", -0.06354378043059195], ["[ list (", -0.06354378043059195], ["return s", -0.06364006717083623], [") #NEWLINE# res =", -0.06374803442482503], ["a_size", -0.06376099971944088], [", idx", -0.06376099971944088], ["q = list", -0.06378127187025014], ["q = list (", -0.06378127187025014], ["// 2 )", -0.06387308484010984], ["#DEDENT# #DEDENT# ans =", -0.06390066485257123], ["= g (", -0.06394452214296319], ["#NEWLINE# ar =", -0.06398093431228671], ["- 1 ) *", -0.06398368835617876], ["1 ) ) :", -0.0640425604088463], [") #NEWLINE# for x", -0.06409992017730863], ["sm [", -0.06410051122017067], ["( ( i ,", -0.06411894125874924], ["s <", -0.06412753748057136], ["return input", -0.0641743207170884], ["return input ( )", -0.0641743207170884], ["return input (", -0.0641743207170884], ["#INDENT# return input", -0.0641743207170884], ["#INDENT# return input (", -0.0641743207170884], [": #INDENT# return input", -0.0641743207170884], ["[ idx", -0.06426070983444046], ["#INDENT# sum", -0.0644158418992767], [": #INDENT# sum", -0.0644158418992767], ["k :", -0.06458751138628796], ["i % 2 ==", -0.0645877235908427], ["#INDENT# f =", -0.06458838324050664], [": #INDENT# f =", -0.06458838324050664], ["mark", -0.06460602072486504], ["( h ,", -0.06469631166399377], ["r ) : #INDENT#", -0.06475548771384013], ["( j", -0.06476433744278794], ["= [ 0 for", -0.06485857729308299], ["n // 2 ]", -0.0648646917631647], ["% p", -0.06487313470780351], ["#DEDENT# if a [", -0.06490158580281169], ["while true : #INDENT#", -0.06494443531171096], ["while true :", -0.06494443531171096], ["while true", -0.06494443531171096], ["+= a", -0.06494891875336319], ["[ p", -0.06497442061856926], ["y : #INDENT#", -0.06500654241403199], ["#NEWLINE# import collections #NEWLINE#", -0.06508591010173546], ["10 ) :", -0.06513420948966557], ["10 ) : #INDENT#", -0.06513420948966557], ["packmans", -0.06519595234727371], ["for p in", -0.06521781494618183], ["ans *", -0.0652382364574375], ["k = [ int", -0.06524376260927721], ["] = (", -0.06530963804823717], ["== 0 ) :", -0.0653672452429225], [") - ord", -0.06540242662179958], [") - ord (", -0.06540242662179958], ["in b :", -0.06540353391883726], ["in b : #INDENT#", -0.06540353391883726], ["* ( a", -0.06541650562811666], ["a + b )", -0.06545373091254587], ["n , 1", -0.0654839817965374], ["t = 1", -0.06552487530207612], [") : #INDENT# break", -0.0655622842611495], [", 1", -0.0655806178896151], ["y #NEWLINE# #DEDENT#", -0.06559392562467738], ["x1 ,", -0.06560914365722369], ["l_search", -0.06568938878914411], ["( m - 1", -0.06583716944957907], ["[ j +", -0.06588018921921886], ["s1 +=", -0.06588386299305757], ["#NEWLINE# t", -0.06588996213985576], ["\" \" ) ]", -0.06593512887158051], ["\" \" ) ] #NEWLINE#", -0.06593512887158051], ["( \" \" ) ]", -0.06593512887158051], [": #INDENT# if c", -0.06594687716152141], ["= b", -0.06596568380692992], ["c2 =", -0.06604425079831981], [", j ,", -0.066047580522749], ["#NEWLINE# continue", -0.06607347807234515], ["#NEWLINE# continue #NEWLINE#", -0.06607347807234515], ["#NEWLINE# continue #NEWLINE# #DEDENT#", -0.06607347807234515], ["x2 -", -0.06612733922140054], ["print ( )", -0.066129866696629], ["print ( ) #NEWLINE#", -0.066129866696629], ["= i #NEWLINE#", -0.06614764645670694], ["s2 =", -0.06618176538877006], ["// 2 ]", -0.06619142090981708], ["= [ i", -0.06620619031016418], ["counts", -0.06627445191094215], ["#NEWLINE# import collections", -0.0662776067188953], ["j <", -0.0663156068480722], ["ln ( ) ,", -0.06638408148279645], ["ln ( )", -0.06638408148279645], [". ln", -0.06638408148279645], ["ln (", -0.06638408148279645], [". ln (", -0.06638408148279645], [". ln ( )", -0.06638408148279645], ["cache", -0.06643796462064291], ["( a //", -0.06650712651921149], ["x1 , x2", -0.0665344831534082], ["1 #NEWLINE# b", -0.0665709822273611], ["mas [ i", -0.06657430376376439], ["mas [ i ]", -0.06657430376376439], [", i ) )", -0.0666763760374559], ["c #NEWLINE# #DEDENT#", -0.06667819951097302], ["[ 1 ] -", -0.06670416568183679], ["#NEWLINE# n =", -0.06671075194164415], ["* x +", -0.06673346893912803], ["] . append", -0.0667528629105132], ["] . append (", -0.0667528629105132], ["k : #INDENT#", -0.06683439315575751], [") #NEWLINE# #DEDENT# for", -0.06683753933896579], ["== 3 :", -0.06683896181592697], ["= c #NEWLINE#", -0.06684093153962119], ["1 #NEWLINE# #DEDENT# while", -0.06689267839132927], [": #INDENT# a =", -0.0669241380128738], ["== [", -0.06694657540786168], ["s2 [", -0.06696691738665696], ["frm", -0.06698025749603707], ["2 ] +", -0.06702162836004141], [": : 2 ]", -0.06702583502227401], [": : 2", -0.06702583502227401], ["( map ( str", -0.0670653516798006], ["map ( str ,", -0.0670653516798006], ["str ,", -0.0670653516798006], ["( str ,", -0.0670653516798006], ["map ( str", -0.0670653516798006], [", min", -0.06706924941024246], ["#INDENT# for i", -0.0670884639838217], ["sol_1", -0.06715714674374298], ["sol_2", -0.06715714674374298], ["preflen", -0.06718108020946853], ["visited [", -0.06720662768067866], ["n // i", -0.06735454550328711], [". format", -0.06745556544381869], [". format (", -0.06745556544381869], ["format (", -0.06745556544381869], ["print ( res )", -0.0674611485388512], ["#DEDENT# if n", -0.06752224425647005], ["1 #NEWLINE# break #NEWLINE#", -0.06755150554578764], ["1 #NEWLINE# break", -0.06755150554578764], ["1 : #INDENT# if", -0.06759870507980573], ["#INDENT# f", -0.06768302897178742], [": #INDENT# f", -0.06768302897178742], ["a , b )", -0.06770561271786714], ["#NEWLINE# inf", -0.06787456880559287], ["#NEWLINE# inf =", -0.06787456880559287], ["* ( k", -0.06792485352240842], ["( c ,", -0.06793648220561788], ["r ) :", -0.06794100264453296], ["j - 1", -0.06795305228623175], ["dis [", -0.06800689701273871], ["10 ** 10", -0.06802513673561124], ["** 10", -0.06802513673561124], [") #NEWLINE# for i", -0.06806777848200359], [": n", -0.06807384126918205], ["m1", -0.06807447488150133], ["= defaultdict (", -0.06812161251324415], ["= defaultdict", -0.06812161251324415], ["a0", -0.06815302243506113], ["vis [", -0.0681649769458978], ["[ 0 ] =", -0.06826956273176017], ["#NEWLINE# from collections import", -0.06831170147514967], ["#NEWLINE# from collections", -0.06831170147514967], ["2 * n", -0.06834206733710493], ["t ]", -0.06849026369889917], ["0 #NEWLINE# while i", -0.06851900344492162], ["+ b )", -0.06852610744824333], [": #INDENT# p", -0.06868231013835213], ["= true #NEWLINE# break", -0.06870273575623159], ["true #NEWLINE# break", -0.06870273575623159], ["true #NEWLINE# break #NEWLINE#", -0.06870273575623159], ["#DEDENT# #DEDENT# #DEDENT# for", -0.06871812518871594], ["#NEWLINE# n", -0.06873780216635055], ["( pts", -0.06881719564589532], ["sep =", -0.06882706069560457], ["#INDENT# i += 1", -0.06891648384589172], ["#DEDENT# print ( a", -0.0689238791436821], ["n : #INDENT# if", -0.06896692737866691], ["#NEWLINE# #DEDENT# #DEDENT# def", -0.06900025169848706], ["( [ x", -0.06902169257132396], ["] #NEWLINE# s", -0.06902488696417163], ["] #NEWLINE# s =", -0.06902488696417163], ["[ j ] =", -0.06904354506326316], ["x ) #NEWLINE#", -0.06907373753232127], ["i , i", -0.06910972624044842], ["print ( answer", -0.06913743757804697], ["2 : #INDENT# print", -0.06913900090576565], ["mark [", -0.06921172164677036], ["( [ int (", -0.06924921057565685], ["p : #INDENT#", -0.0692825481963288], [". write", -0.06932431414253609], [". write (", -0.06932431414253609], ["stdout . write (", -0.06932431414253609], ["write (", -0.06932431414253609], ["write", -0.06932431414253609], ["stdout . write", -0.06932431414253609], [": #INDENT# if n", -0.06933522678080184], ["i + j", -0.0694117516601129], ["print ( r", -0.06942303727426742], ["[ : ] #NEWLINE#", -0.06945946254253517], ["m :", -0.06951909626581339], ["m : #INDENT#", -0.06951909626581339], ["- x )", -0.06952765021002866], ["'+'", -0.06957639088316121], ["'a' , 'b'", -0.06958043900036466], ["s : #INDENT#", -0.069618201012061], [") == 0 :", -0.06971348844479927], ["!=", -0.0697487249345842], ["\" \" ) #NEWLINE#", -0.06976269166200837], ["#NEWLINE# #DEDENT# if not", -0.06979333225869348], ["0 #NEWLINE# #DEDENT# if", -0.06991421998570332], ["[ l", -0.07001677792243273], ["= ( n -", -0.07003644727529568], ["( res ) #NEWLINE#", -0.07005077591308732], ["1 ] #NEWLINE# #DEDENT#", -0.07015583996029748], ["#DEDENT# if len (", -0.07019436050663676], ["#DEDENT# if len", -0.07019436050663676], ["#NEWLINE# flag", -0.07027820618882465], ["#NEWLINE# flag =", -0.07027820618882465], ["#NEWLINE# st", -0.0702842568242812], ["j = 0 #NEWLINE#", -0.07028490879811483], ["t -", -0.07032580060102898], ["b2 ,", -0.07035465086603997], ["#DEDENT# if i", -0.07037601338811576], ["nxt", -0.07041327759914714], ["% 2", -0.07046469303925584], [", a2", -0.07051676133510958], ["( j +", -0.07052287606923148], ["print ( a", -0.07054620067127627], ["inf =", -0.07059601697721203], ["5 #NEWLINE#", -0.07068997294411258], ["p in", -0.07070120350884686], [") ) #NEWLINE# cnt", -0.07071784187103052], [") #NEWLINE# if (", -0.07072250597251686], ["10 )", -0.07074007579689252], ["[ 1 ] #NEWLINE#", -0.07075884731251493], ["gcd ( a", -0.0708917478764202], ["#INDENT# cnt += 1", -0.0709240514172598], ["sum_ [", -0.07095684424696234], ["= i", -0.0709655773628788], ["1 ) #NEWLINE# for", -0.07109413580001894], ["3 ) #NEWLINE# #DEDENT#", -0.071133230965183], ["i % 2", -0.07114956337405647], [") #NEWLINE# #DEDENT# n", -0.0711726164229266], ["x <", -0.07130637599866149], [", k )", -0.07131684485335538], ["= set ( [", -0.07132405972779059], ["#INDENT# if c", -0.07138227850990414], ["2 , n", -0.071403919726599], ["#NEWLINE# print ( t", -0.07143983979876135], ["set ( [", -0.07148308275118972], ["#DEDENT# if ans", -0.07151600221945563], ["j ] =", -0.07153012466485023], ["int ( s", -0.07162121362899168], ["#NEWLINE# pos =", -0.07163151819962744], ["answer [", -0.0716664081311887], [", n", -0.07181671344610618], ["if k", -0.07182796590614184], ["( temp", -0.07190780229728982], ["if dp", -0.07192894140473681], ["if dp [", -0.07192894140473681], ["#INDENT# res =", -0.07194680548265961], ["+ 1 ) +", -0.07196533208457492], ["] += a", -0.07199186499999179], ["-1 , -1", -0.07204915492482754], ["#NEWLINE# done", -0.07207050386637584], ["solve ( )", -0.07211269465674734], ["#NEWLINE# for i ,", -0.0722089918700644], [": -1 ] )", -0.0722281048651338], ["xs [", -0.07225019348114267], ["float , input", -0.07226521705975189], ["float , input (", -0.07226521705975189], ["( float , input", -0.07226521705975189], ["#NEWLINE# #DEDENT# i", -0.0722784297633286], ["m0", -0.07232372522833896], ["a + 1 )", -0.07235228753061382], ["( i , j", -0.07236995551552226], ["] ) ) #NEWLINE#", -0.07239985307965877], ["if cnt", -0.07251124528821896], ["#INDENT# i +=", -0.07252928848474564], [": #INDENT# i +=", -0.07252928848474564], ["= j", -0.07261062369172076], ["m2", -0.07264138861341941], ["-1 #NEWLINE# #DEDENT#", -0.07266100696340154], ["= gcd", -0.07303974495713163], ["#NEWLINE# b", -0.07304343599563969], ["for p", -0.0730533202675877], [": #INDENT# return [", -0.07309850649550226], ["#INDENT# return [", -0.07309850649550226], ["#NEWLINE# cnt +=", -0.07317100848812347], ["y [", -0.0732053626149758], ["( dp", -0.07323790871064066], ["ans ) #NEWLINE# #DEDENT#", -0.07325456918879925], ["( ops", -0.07328962978702336], ["ops [ i", -0.07328962978702336], ["- 1 ) %", -0.07332722785031832], ["#INDENT# if not", -0.07334747626408944], ["ar [ i ]", -0.07337682151737722], ["n #NEWLINE# for i", -0.07338535914270915], ["0 ] =", -0.0734054932786913], ["output", -0.07343105730575591], ["mx =", -0.07355184147128663], ["( 2 ) #NEWLINE#", -0.07355457254569803], ["#INDENT# d [ i", -0.07357043746403572], ["= -1", -0.07357704892386574], ["if j", -0.07370221280117628], [") #NEWLINE# if x", -0.07372200275991711], ["d2", -0.0737488391438168], ["< n and", -0.07376078834590372], ["n #NEWLINE# for", -0.07379918943080288], ["] == 0 :", -0.07383352246984015], ["b3", -0.07386367358321032], ["#NEWLINE# j =", -0.07393210699144559], ["'0' ) #NEWLINE#", -0.07394987395261778], ["( '0' ) #NEWLINE#", -0.07394987395261778], ["/ 2 )", -0.0739853770817591], [", -1 , -1", -0.07403233427356241], [". stdout", -0.07404872963819147], ["sys . stdout", -0.07404872963819147], ["( i - 1", -0.07406929392880397], [") #NEWLINE# for", -0.07408662984917486], [", reverse = true", -0.0741514514202468], [", reverse", -0.0741514514202468], [", reverse =", -0.0741514514202468], ["len ( [", -0.07417158214590637], ["itertools #NEWLINE# import", -0.07418736925230937], ["f ]", -0.074290697362693], ["#DEDENT# t =", -0.07432119669116379], ["itertools #NEWLINE#", -0.07443200211750595], ["import itertools #NEWLINE#", -0.07443200211750595], ["import itertools", -0.07443200211750595], ["in range ( 60", -0.07453433281564917], ["( 60", -0.07453433281564917], ["range ( 60", -0.07453433281564917], ["m - 1", -0.07460422224294065], ["s1 =", -0.0746228423692231], ["[ : -1", -0.0746771107582615], ["[ : -1 ]", -0.0746771107582615], ["- ord (", -0.07470852300029382], ["- ord", -0.07470852300029382], ["a [ 1", -0.0747277893600703], ["l = [", -0.07472845317097167], ["other", -0.07478590041949576], ["= max ( ans", -0.07480262656428428], ["#NEWLINE# prev", -0.07483105381499912], ["#NEWLINE# prev =", -0.07483105381499912], ["#INDENT# p =", -0.07493576123642758], ["return x", -0.07494813453828247], ["( r ) #NEWLINE#", -0.07504151558962556], ["pos =", -0.07513195915850332], [". count (", -0.07519520269630997], ["count (", -0.07519520269630997], [". count", -0.07519520269630997], ["#NEWLINE# ans [", -0.07527127293623882], ["a +=", -0.07530056541267062], ["'b'", -0.07548685114286761], ["arr [ i ]", -0.07549630116159456], ["[ ord (", -0.07566074355401549], ["[ ord", -0.07566074355401549], ["d %", -0.07573783422112661], ["- i )", -0.0757829451546336], ["#NEWLINE# #DEDENT# main", -0.0757951001188998], ["#NEWLINE# #DEDENT# main (", -0.0757951001188998], ["ans = [", -0.0758734989512299], [". append ( [", -0.07591655151771125], ["append ( [", -0.07591655151771125], ["- 1 ] :", -0.07599345465955962], ["cnt )", -0.07602291029650375], ["i %", -0.07611313404526865], ["[ i ] )", -0.07613448819929057], ["#NEWLINE# pos", -0.07614380723666224], ["lcm", -0.07617122943127752], [" ", -0.07640556079346777], ["#NEWLINE# m", -0.07645081018004901], ["3 : #INDENT#", -0.07645545242199624], ["-= 1 #NEWLINE# if", -0.07645733401685496], [", max (", -0.0765209687362939], ["e )", -0.07664961122169994], ["max ( ans ,", -0.07666952554357974], ["#DEDENT# def main", -0.07685162825824987], ["#DEDENT# def main (", -0.07685162825824987], ["c = list (", -0.07686572080019707], ["c = list", -0.07686572080019707], ["last =", -0.07690650542535277], ["first_to_eat", -0.07704976186495983], ["answer", -0.07725978113983437], ["' ' ) #NEWLINE#", -0.0772682061123798], ["return [", -0.07736567093440223], ["( ( i", -0.07743517349455135], [". readline", -0.07746003582969666], ["+=", -0.07746819715489016], [", c2", -0.077468428589238], ["m , n", -0.07760212725060033], ["ans [ 0", -0.07762828989957793], ["ans [ 0 ]", -0.07762828989957793], ["b = [", -0.07763871398686752], ["#INDENT# b [", -0.07765247366294616], ["] #NEWLINE# #DEDENT# def", -0.07765835467369502], ["for c in", -0.0777700619713965], [">= n", -0.07779570630519175], ["u ]", -0.07779852935642628], ["[ u ]", -0.07779852935642628], ["b . append (", -0.07780529019345221], ["b . append", -0.07780529019345221], ["( s [ :", -0.07787758837297817], ["( kk", -0.07793609792109082], ["[ j ] )", -0.07801354035062623], [") + (", -0.07810989515977283], ["] #NEWLINE# r", -0.0781386874918395], ["( k - 1", -0.0781804561311701], ["] #NEWLINE# print (", -0.07818940972843776], ["] #NEWLINE# print", -0.07818940972843776], ["i ] = 1", -0.07821607789328408], ["] #NEWLINE# b =", -0.07828084027752127], ["- 2 ,", -0.078316709615687], ["= 10 ** 9", -0.0783460264147231], ["a3", -0.07838972622707922], ["hb", -0.07843191914323645], ["hr", -0.07843191914323645], ["h ,", -0.07852314940130149], ["( k", -0.07853660097591349], ["- d", -0.07860777140656189], ["( i +", -0.07861345685062104], ["] [ j ]", -0.07861754675838434], ["[ 0 ] #NEWLINE#", -0.07862348756317336], ["#DEDENT# #DEDENT# def", -0.07865186999600195], ["* 10", -0.07866770422626793], ["= min ( ans", -0.07867048036234313], ["min ( ans ,", -0.07867048036234313], ["min ( ans", -0.07867048036234313], ["#INDENT# j =", -0.07867272648542196], [": #INDENT# j =", -0.07867272648542196], ["j in", -0.07868566513288557], ["if q", -0.07873897613864687], ["> 2", -0.07880266278161782], ["k = [", -0.07880593823696902], ["elif n", -0.07881973676040782], ["#DEDENT# elif n", -0.07881973676040782], [", w", -0.07893314692648822], ["] ) : #INDENT#", -0.07893671137514977], [": #INDENT# s1", -0.07904241031749357], ["#INDENT# s1", -0.07904241031749357], [", g", -0.0790539505279181], ["] + 1", -0.07920731396204377], ["[ 0 for i", -0.07932907416254087], ["ln", -0.07934225700561987], ["rr", -0.0793467310089773], ["( [ 0", -0.07942654848879956], ["1 : #INDENT# ans", -0.07952710183535008], ["( ''", -0.07971838104519485], ["( '' . join", -0.07971838104519485], ["( '' .", -0.07971838104519485], ["= x -", -0.07975333935763483], ["= i +", -0.07980669961818673], ["'**'", -0.07981257568050615], ["'* '", -0.07981257568050615], ["'**' ,", -0.07981257568050615], ["arr . append (", -0.07985592009202282], ["arr . append", -0.07985592009202282], ["[ t ]", -0.07986489002541111], [": #INDENT# l", -0.07991670625893105], ["#INDENT# l", -0.07991670625893105], ["#INDENT# m", -0.0800299726730271], [": #INDENT# m", -0.0800299726730271], ["x -", -0.08016053423483924], ["= 0 #NEWLINE# #DEDENT#", -0.080191673878107], ["in p", -0.08037419223556533], ["( a +", -0.08037614495679564], ["[ d ]", -0.08039516173971753], ["( d ) #NEWLINE#", -0.08042237284236034], ["( ( d", -0.0806648022562824], ["- 1 ] =", -0.0807483935055448], ["#NEWLINE# while len", -0.08076823751133247], ["#NEWLINE# while len (", -0.08076823751133247], [") ] #NEWLINE# b", -0.08079270005418457], ["b %", -0.08084357199269704], ["== 2 : #INDENT#", -0.08089302218524863], ["#NEWLINE# x1 ,", -0.08091492869959899], ["stdout .", -0.08097488431727888], ["#NEWLINE# #DEDENT# #DEDENT# #DEDENT#", -0.0809754259784067], ["= i #NEWLINE# #DEDENT#", -0.08098496569695812], ["( ) #NEWLINE# p", -0.08098792295104448], [") , (", -0.08112794680721541], ["gcd ( a ,", -0.08114463824054804], ["in points", -0.08114642366598597], ["+ 1 ] #NEWLINE#", -0.08119757466853281], ["mi", -0.08120533436990561], ["#NEWLINE# tmp", -0.08124115408775233], ["#NEWLINE# tmp =", -0.08124115408775233], ["b >", -0.081249461307832], ["b = input (", -0.0812645877999521], ["b = input", -0.0812645877999521], ["print ( ``", -0.08130316158988982], ["print ( r )", -0.08133155239098513], ["#NEWLINE# l = [", -0.08137378881882225], ["] ) :", -0.08144362022179295], ["= a //", -0.08146616920963011], ["for v", -0.08156648484154613], ["[ x ]", -0.08156864893616463], ["[ x for", -0.08161107415173066], ["[ x for x", -0.08161107415173066], ["len ( a [", -0.08163669811111847], ["math .", -0.08170662437074304], ["a % b", -0.08171689486518595], ["return #NEWLINE# #DEDENT# else", -0.08174042287207688], ["= 1 #NEWLINE# ans", -0.08179580586050166], ["ucount", -0.08196482004345365], ["'yes' ) #NEWLINE# return", -0.08196653138473435], ["e [", -0.08197003283865734], ["( n // 2", -0.08198319150564093], ["- int", -0.08198671023536158], ["- int (", -0.08198671023536158], ["defaultdict (", -0.08202430192527324], ["y ) : #INDENT#", -0.0820279283333435], [": #INDENT# if not", -0.0820544800759826], ["m - 1 )", -0.08215520358709781], ["- x", -0.08220677308057242], ["100 *", -0.08223174024562786], ["return list ( map", -0.08223557944715183], [") #NEWLINE# r", -0.08223850362750901], [", 'b' ,", -0.08228123728471232], ["print ( i", -0.0823806678283041], ["x ]", -0.08239567026410953], ["stack", -0.08251856880514633], ["] [", -0.08255525655987449], ["#INDENT# ans = min", -0.08261854593265204], [": #INDENT# for i", -0.08265158705839425], ["arr .", -0.08265928725696622], ["= input (", -0.08266653958937191], ["= input ( )", -0.08266653958937191], [": ] ,", -0.0827298707050688], [") #NEWLINE# if len", -0.08289719734576066], ["c , a", -0.0829141208924863], ["add ( x )", -0.08296197896530827], ["col", -0.08307715777035109], ["max ( ans", -0.08308180155209001], ["[ j ] [", -0.0831544674083027], ["[ q", -0.083160335408888], ["ptr", -0.08325882925714655], ["j ] ) #NEWLINE#", -0.08326390217233245], ["v in", -0.0833781950202011], ["#DEDENT# i", -0.08344756237641474], ["g ( i", -0.0834951595016305], ["+ 1 ,", -0.0834973082378658], ["l [ 0", -0.08350681291832329], ["l [ 0 ]", -0.08350681291832329], ["( '0' )", -0.08363727346586279], ["[ 0 ] ]", -0.08365292787227899], ["i ] :", -0.08372428457439807], ["[ ( x", -0.08374230861184932], ["#INDENT# a =", -0.08383618534464757], ["#INDENT# x =", -0.08383773971446612], [": #INDENT# x =", -0.08383773971446612], ["#NEWLINE# x1", -0.08386401594988274], ["= true )", -0.08387318889596862], ["( float", -0.08387612461852118], ["( float ,", -0.08387612461852118], ["map ( float ,", -0.08387612461852118], ["map ( float", -0.08387612461852118], ["float ,", -0.08387612461852118], ["true )", -0.08387967038769058], ["] #NEWLINE# ans =", -0.0839457077153444], ["'' ,", -0.08398585616037377], ["1 ) #NEWLINE# #DEDENT#", -0.08399387425618414], ["j = 0", -0.08401193293444062], ["[ l ]", -0.08402171048804824], ["== 2 :", -0.08402604892117549], ["j ] [", -0.08408161031214828], ["reverse = true )", -0.08409336931124704], ["reverse =", -0.08409336931124704], ["reverse = true", -0.08409336931124704], ["== t", -0.08414234577033503], ["res ) #NEWLINE#", -0.08419940637923123], ["b <", -0.08422014030447333], ["n - 1 -", -0.08429960681124964], ["d ]", -0.08431395376021074], ["h2", -0.08454039491964442], ["#NEWLINE# def main (", -0.08457247643836278], ["#NEWLINE# def main", -0.08457247643836278], ["t [ i ]", -0.08470389268601743], [") : #INDENT# while", -0.08473184811517599], ["slist", -0.08481886505209361], ["slist2", -0.08481886505209361], ["=", -0.08485828237284325], ["( ) #NEWLINE# d", -0.0848785043351709], ["coding : utf-8 -", -0.08500313032244668], ["utf-8 -", -0.08500313032244668], ["- #NEWLINE#", -0.08500313032244668], ["- * - #NEWLINE#", -0.08500313032244668], ["- * - coding", -0.08500313032244668], ["* - #NEWLINE#", -0.08500313032244668], ["* - coding", -0.08500313032244668], ["* - coding :", -0.08500313032244668], ["- coding", -0.08500313032244668], ["- coding : utf-8", -0.08500313032244668], ["utf-8 - * -", -0.08500313032244668], ["utf-8 - *", -0.08500313032244668], ["- coding :", -0.08500313032244668], [": utf-8 - *", -0.08500313032244668], [": utf-8 -", -0.08500313032244668], ["[ k ]", -0.08503973460516774], ["l +", -0.08506115108751727], ["sum_", -0.0851482130963548], ["dp [ j ]", -0.0851716283718327], ["- 1 #NEWLINE# if", -0.085204736693651], ["extend (", -0.08528513749298136], [". extend (", -0.08528513749298136], [". extend", -0.08528513749298136], ["extend", -0.08528513749298136], ["#DEDENT# main ( )", -0.08531038146029199], ["#DEDENT# main (", -0.08531038146029199], ["1000 *", -0.08534362571100639], [", k ,", -0.08538008007838148], ["#NEWLINE# v", -0.08538019816663098], ["v )", -0.08545896058305442], [") ] #NEWLINE# #DEDENT#", -0.08546897057467331], ["heapq", -0.08548701417397798], ["> k", -0.08554221232837278], ["-1 ] #NEWLINE# #DEDENT#", -0.08554930051624848], ["while (", -0.08562124859333739], ["x - 1", -0.08580994090012703], ["ret =", -0.0859133692688332], ["#NEWLINE# if len (", -0.08592677392480082], ["s +=", -0.0860057722945023], ["current", -0.08600807507046107], ["'b' ,", -0.0860235382356344], [", k = [", -0.0860853521782608], [") > 1", -0.08615769948077864], ["mod =", -0.0861686480915836], ["zip", -0.08621910382237906], ["zip (", -0.08621910382237906], ["y ) :", -0.08622583440943545], ["b1 ,", -0.08634896225742428], ["= -", -0.08635910609902038], ["#NEWLINE# if len", -0.08643797459464869], ["] ) #NEWLINE# d", -0.08647174172219944], ["[ j ] +=", -0.0865139578433569], [") == 0", -0.08651802760338483], ["lt", -0.08654770356804913], ["rp", -0.08656127078500839], ["% d", -0.08656838423012023], ["( ans ) )", -0.0866168646350438], ["b , a", -0.08677729474122733], ["u", -0.08678993481597863], ["in l : #INDENT#", -0.08684094687858128], ["in l :", -0.08684094687858128], ["cnt [", -0.08694183331645154], ["0 ] ]", -0.08695096587335056], ["prev =", -0.08719362317261], ["k ) )", -0.08742252168090008], ["j ] +=", -0.08746510277639417], [", 0", -0.08749521171902047], ["ans = max (", -0.0875269149966064], ["ans = max", -0.0875269149966064], ["[ len", -0.08755574041963776], ["[ len (", -0.08758798231523023], ["( \" \" ) )", -0.0877094735792674], ["\" \" ) )", -0.0877094735792674], ["5 ,", -0.08780144129497525], ["coding :", -0.08781564065224536], ["utf-8", -0.08781564065224536], ["coding", -0.08781564065224536], ["coding : utf-8", -0.08781564065224536], [": utf-8", -0.08781564065224536], ["accumulate", -0.08794602948324587], ["i <", -0.08797391618615011], ["* math", -0.08798667768839405], ["* math .", -0.08798667768839405], ["#INDENT# a [ i", -0.08801135896769714], ["vis", -0.08801984785740775], ["flg =", -0.08811712869825263], ["#DEDENT# n , k", -0.08816518179656936], ["seq [ i", -0.08817928215625652], ["c #NEWLINE#", -0.0881985574519155], ["ar )", -0.08822758025834344], ["( ar )", -0.08822758025834344], ["wb", -0.08823590903614101], ["b = list", -0.08830536474527101], ["b = list (", -0.08830536474527101], ["print ( b", -0.08833346026977996], ["- len (", -0.08837660248883238], ["- len", -0.08837660248883238], ["( v )", -0.08840338449652275], ["] ) #NEWLINE# cnt", -0.08852106798724038], ["readline #NEWLINE# n ,", -0.08855965048028847], ["= input", -0.08864036182818238], ["'a'", -0.08872565678660407], ["#NEWLINE# if b", -0.0888391299759096], ["#DEDENT# main", -0.08888413341689272], ["#NEWLINE# v =", -0.0889669178533606], ["reverse", -0.08900430538311328], ["k +", -0.08907769591764574], ["bounds", -0.08912355800611851], ["4 #NEWLINE#", -0.0891458764115234], ["if i", -0.08923266793938706], [", max", -0.08926684391703804], ["else : #INDENT# break", -0.08947490330638416], ["#NEWLINE# for j in", -0.08958879714563212], ["#NEWLINE# print ( n", -0.08967776836168884], ["while x", -0.0897181093875691], ["br", -0.08973746213204861], [": #INDENT# n ,", -0.09005604077420115], ["print ( 2 )", -0.09006476066600966], ["i in l", -0.09010623353447104], ["for i in l", -0.09010623353447104], ["'' #NEWLINE# for", -0.09020713567254304], ["( ) #NEWLINE# n", -0.09021363882586447], ["#INDENT# d =", -0.09035804277264821], [": #INDENT# d =", -0.09035804277264821], ["arr [ i", -0.09053929714189225], ["'yes' ) #NEWLINE# print", -0.0905578167032879], ["lp", -0.09066579731962128], ["0 #NEWLINE# #DEDENT# else", -0.09068809902329779], ["r +=", -0.09073629423070828], ["f [", -0.09076518834937351], ["+ 1 ] )", -0.0907847973005263], ["] = 1 #NEWLINE#", -0.09079026601478249], ["inputlist", -0.09094818346258864], ["p (", -0.09098570481937626], ["[ : :", -0.09104921042060395], ["k #NEWLINE#", -0.09106461196415153], ["count [", -0.09115565520578962], ["ar [ i", -0.0911568824891195], ["prime (", -0.09121758326812454], ["-1 ) : #INDENT#", -0.0913637920150954], ["-1 ) :", -0.0913637920150954], [", -1 ) :", -0.0913637920150954], ["#NEWLINE# while i <", -0.09139657213859344], ["for v in", -0.0914434630723066], ["``", -0.09145869894306966], [": ] #NEWLINE#", -0.09156214581028756], ["[ u", -0.09179642225928017], ["j + 1", -0.09193137636048133], ["1 ] +", -0.09194293661397608], [") #NEWLINE# #DEDENT# return", -0.09198115458082877], ["( ``", -0.09198587485733985], ["n % 4 ==", -0.09210681551645165], ["= lambda", -0.09228265990487321], ["print ( i ,", -0.0923663140783729], ["+ 1 ] ==", -0.09237091143637552], ["a *", -0.09254274038181899], ["sa", -0.09262407009790641], ["( '0'", -0.09263801113108291], [": #INDENT# v", -0.09264636444764779], ["#INDENT# c =", -0.09269621768401105], [": #INDENT# c =", -0.09269621768401105], ["] #NEWLINE# while", -0.09273354277920741], ["* 10 **", -0.09279420096069904], ["- i", -0.0928618820728564], ["in s :", -0.09304189399123944], ["< n", -0.09310317231175047], ["ans ) ) #NEWLINE#", -0.0931161045569174], ["* c", -0.09312885170798683], ["- 1 ] )", -0.09323646034834318], ["== 3", -0.0932495532437751], ["l : #INDENT#", -0.0932731402535846], ["#NEWLINE# for j", -0.09334244106226779], ["i : #INDENT#", -0.0934743556947718], [") #NEWLINE# arr", -0.09350362755691297], ["kk [", -0.09352331750530897], ["#NEWLINE# #DEDENT# print", -0.09357190940739749], ["while i <", -0.0936226106485494], [") #NEWLINE# l =", -0.09362421208782433], ["min ( a ,", -0.09366880313344671], ["n == 1", -0.093742411344367], ["if n == 1", -0.093742411344367], ["( n ) ]", -0.09383239292187451], ["#NEWLINE# t = int", -0.09383833817504], ["0 ] * n", -0.09383871468462392], ["( n /", -0.09386123133035058], [") #NEWLINE# m", -0.09386509766756822], ["dis", -0.09386684376951095], ["] #NEWLINE# b", -0.09390394030254923], ["else : #INDENT# b", -0.09391900911916755], ["a in a", -0.09394344900766098], ["for a in a", -0.09394344900766098], ["w #NEWLINE#", -0.09407024751890851], ["== -1", -0.09408053479460385], ["] ) #NEWLINE# if", -0.09415104126403744], ["2 ) )", -0.09418415672735676], ["int ( a", -0.09419505081402735], ["last", -0.09427250793698556], ["aa", -0.09448644317012495], ["#NEWLINE# ans . append", -0.09464986525379754], ["#NEWLINE# ans .", -0.09464986525379754], ["n >", -0.09467866116640954], ["- m", -0.09470585304284469], ["q2", -0.09474983613451944], ["#NEWLINE# b =", -0.09478656519129357], ["#INDENT# if len (", -0.09483059568139383], ["#INDENT# if len", -0.09483059568139383], [": #INDENT# if len", -0.09483059568139383], ["in b", -0.094846878617962], ["0 ] #NEWLINE#", -0.09489566435742683], ["[ n - 1", -0.09489975769533673], ["= f", -0.09490154921395162], ["print ( sum", -0.09496393673353155], ["* y", -0.09496683712930039], ["/ 2", -0.09510972467069967], ["#INDENT# n ,", -0.09512129343868425], ["#INDENT# if k", -0.09514218761077872], [": #INDENT# if k", -0.09514218761077872], ["#NEWLINE# #DEDENT# #DEDENT# if", -0.09514560108763633], ["#NEWLINE# arr", -0.09534064051099171], ["== -1 : #INDENT#", -0.09537578551645327], ["== -1 :", -0.09537578551645327], ["i ] ,", -0.09539791612635125], ["= 2 #NEWLINE#", -0.0955363985671955], ["+ 3", -0.09560343917737862], ["i ) #NEWLINE# if", -0.0957048098886178], ["cnt += 1", -0.09580105453768101], ["cnt += 1 #NEWLINE#", -0.09580105453768101], ["gcd #NEWLINE#", -0.09596308523010882], [", 'a'", -0.0959820289735444], ["[ s", -0.09625893942151667], ["2 : #INDENT#", -0.09628156331078029], ["( x ,", -0.09629905676266094], ["is_prime", -0.09636768051157883], ["#NEWLINE# answer =", -0.09647537990706577], ["line", -0.09647866988594625], ["#INDENT# return (", -0.09656407280282073], ["a ==", -0.0967178922641987], ["#NEWLINE# c1", -0.09674683581773937], ["= sys . stdin", -0.09701956415842249], ["#INDENT# v", -0.09702480625645506], ["* j", -0.09726465345825336], ["n = n", -0.0973577659927998], ["] = 1", -0.0974482137427284], ["1 ] +=", -0.09751878282230726], ["s -", -0.09755899757236791], ["[ 0 for", -0.09767649136977082], ["if d", -0.09772267303165362], ["@", -0.09785124010269254], [") ] #NEWLINE# if", -0.09811495606257586], ["2 ) #NEWLINE#", -0.09820775530070013], [") #NEWLINE# print (", -0.09827357482739169], ["answer =", -0.09835911774292296], ["in l", -0.09849248481173874], [": #NEWLINE#", -0.09857269153724257], ["- k +", -0.09864737999904664], ["+= (", -0.09876093364530956], ["s [ :", -0.09877022263752981], ["= f (", -0.09896912369638707], ["s *", -0.09899941180848021], ["g #NEWLINE#", -0.09923119075426808], [": : -1 ]", -0.09931133635147192], ["[ : : -1", -0.09931133635147192], [": : -1", -0.09931133635147192], ["] -=", -0.09947081799786854], ["a [ 1 ]", -0.09949187644468263], ["#INDENT# tmp =", -0.09954949908200855], [": #INDENT# tmp =", -0.09954949908200855], [", w )", -0.09955071256550548], ["c *", -0.09975912047714805], ["true :", -0.09980966324012168], ["true : #INDENT#", -0.09980966324012168], ["#NEWLINE# #DEDENT# x", -0.09993644580387065], ["+ 1 ) ]", -0.09996351050365647], ["= ( n", -0.10012621739035658], ["#INDENT# p", -0.10018460232185923], ["n ) ]", -0.10020782019970821], ["% 2 == 1", -0.10022769687043481], ["2 == 1", -0.10022769687043481], ["p2", -0.10032917651862162], ["// 2 : #INDENT#", -0.10036918964245765], ["( l +", -0.10042994634182212], ["#DEDENT# #DEDENT# #DEDENT# #DEDENT#", -0.10052922932539725], ["start =", -0.10057817894927003], ["y = list", -0.10060877377183844], ["y = list (", -0.10060877377183844], ["while len (", -0.10065046720393087], ["while len", -0.10065046720393087], ["1 : #INDENT# print", -0.10068584376510048], ["dp [ j", -0.10074111255180002], ["c in", -0.10078335983983229], ["c )", -0.1008267973638439], ["t1", -0.10091010102545009], ["#INDENT# r =", -0.1009181828381274], [": #INDENT# r =", -0.1009181828381274], ["+ 1 ) //", -0.10095263102345907], ["+ 1 ] [", -0.10098849398104907], ["'1' )", -0.10104415859228491], ["cur )", -0.10116452826697289], ["f ( )", -0.10129504121863743], ["for c", -0.10132984188929904], [": #INDENT# ans .", -0.1013625703542574], ["#INDENT# ans . append", -0.1013625703542574], ["#INDENT# ans .", -0.1013625703542574], ["n % 2 ==", -0.10148814051652534], ["#NEWLINE# n , k", -0.10162299369819343], ["#NEWLINE# from math", -0.10182068965634643], ["#NEWLINE# from math import", -0.10182068965634643], ["temp [", -0.10190547973075319], ["60 #NEWLINE#", -0.10203249126012856], ["( 2 , n", -0.1020907065103241], ["1 ) %", -0.10211683430488723], ["#NEWLINE# ar", -0.10224440471681444], ["t ) #NEWLINE#", -0.10231536697674858], [", a ) #NEWLINE#", -0.10240728115865469], ["if n ==", -0.1025460939514155], ["return (", -0.10255382351336355], ["#DEDENT# #DEDENT# if", -0.10255780193651014], ["f =", -0.10280878972137276], [": #INDENT# if x", -0.10285301536002361], ["#INDENT# if x", -0.10285301536002361], ["( line", -0.10291940803105196], ["ratings", -0.10292412624796465], ["<= 0", -0.10292748630691159], ["#INDENT# s =", -0.10297155278840459], [": #INDENT# s =", -0.10297155278840459], ["] <=", -0.10306943582427583], ["level", -0.10318882862053703], ["- sum (", -0.10318907282729181], ["int ( s [", -0.10322011915510573], ["pts [", -0.10322579346884297], ["values", -0.10355534884153345], ["1 ) +", -0.10363304087242395], ["0 ) ) #NEWLINE#", -0.10369334962015758], ["i ) ) #NEWLINE#", -0.10395279596916827], ["h1", -0.10400738910530649], ["rstrip ( )", -0.10401694213094993], [". rstrip ( )", -0.10401694213094993], ["print ( a )", -0.10424756346554524], ["#NEWLINE# if x", -0.10431771793223275], ["a <", -0.10439841754692816], ["1 #NEWLINE# ans", -0.10440030040873159], ["new", -0.10455749444923049], ["sep", -0.1046653550127808], ["made", -0.10474596763577668], ["i == 0", -0.10476842874706306], ["a2", -0.10484480727725337], ["[ i ] ,", -0.10488692877678608], ["1 >=", -0.1049008770092951], ["( tmp )", -0.10508637756521035], ["tmp )", -0.10508637756521035], ["b ==", -0.1051193308452079], ["0 #NEWLINE# while n", -0.10526286285932943], ["// 2 -", -0.10536013913965699], ["b #NEWLINE# #DEDENT#", -0.10538834490414983], ["( h", -0.10543522453217115], ["#INDENT# q", -0.10545589987072333], [": #INDENT# q", -0.10545589987072333], ["ma", -0.10549400088602681], ["- sum", -0.10573315155137954], ["% i == 0", -0.10574633295607908], ["% i ==", -0.10574633295607908], ["#NEWLINE# b = [", -0.10580507377772291], ["] = min (", -0.10583650604441097], ["] = min", -0.10583650604441097], ["ind", -0.10591688506468033], ["true", -0.10594372194877548], ["j += 1 #NEWLINE#", -0.10596105037181938], ["j += 1", -0.10596105037181938], [") ) ) :", -0.1059756841322952], ["outputlist", -0.10610621403968674], ["y ) ) #NEWLINE#", -0.10628130019503734], ["y ) )", -0.10628130019503734], ["i == 0 :", -0.10633477362761357], ["pos", -0.10637570355861617], ["negbig", -0.10644865858533897], ["tr", -0.10646568674927653], ["] ) ) )", -0.10666149614887131], ["* n ) #NEWLINE#", -0.10668177991016227], ["c -", -0.10672604318512699], [": #INDENT# return list", -0.10674984552546264], ["return list (", -0.10674984552546264], ["return list", -0.10674984552546264], ["#INDENT# return list", -0.10674984552546264], ["#INDENT# return list (", -0.10674984552546264], ["1 #NEWLINE# #DEDENT#", -0.10687823973632199], ["// 2 :", -0.10689961383978036], ["m [", -0.1070120277329862], ["] * (", -0.10715626772420224], [") : #INDENT# g", -0.107235452006529], [", ans", -0.10743473890058423], ["sufflen", -0.10748972833514964], ["#NEWLINE# div", -0.10753300226276265], ["- k", -0.10756694351149694], ["// x", -0.10756877530944105], ["'0' )", -0.10766270823603652], ["( n %", -0.10766957942127783], ["( d ,", -0.10768206094215466], ["+ c", -0.10773777523421525], ["[ v ]", -0.10783010015311771], ["mid #NEWLINE#", -0.10786819971233949], ["[ f", -0.10812517178977875], ["( a", -0.10817936594607362], ["i += 1", -0.10823505279838064], ["i += 1 #NEWLINE#", -0.10823505279838064], ["r ) #NEWLINE#", -0.10824091901484238], ["c1 ,", -0.10825010538728036], ["! /usr/bin/env python3 #NEWLINE#", -0.10847779381032864], ["! /usr/bin/env python3", -0.10847779381032864], ["/usr/bin/env python3 #NEWLINE#", -0.10847779381032864], ["/usr/bin/env python3", -0.10847779381032864], ["if b ==", -0.1085424310811909], ["all )", -0.10859020395000832], ["c ) :", -0.10865860551301228], ["c ) : #INDENT#", -0.10865860551301228], ["a ) #NEWLINE# print", -0.10871014368364675], ["pre", -0.1087136395250656], [") #NEWLINE# res", -0.1087329649072233], ["#NEWLINE# r", -0.1088267358325851], [") :", -0.10887122731448307], ["reduce", -0.10894919071929418], ["#NEWLINE# res =", -0.10897436252688188], [", q", -0.10905154732441565], [": #INDENT# return (", -0.10906188913352945], ["#INDENT# cnt +=", -0.10906323245158699], [": #INDENT# cnt +=", -0.10906323245158699], ["[ : ]", -0.10912949770593647], ["( t", -0.10933177478793686], ["y2", -0.10933294553950983], [") #NEWLINE# i =", -0.10937353503272325], ["half", -0.10982394183298481], [">= 0 and", -0.10991361661266269], [", (", -0.10993170858408541], ["c ) ) #NEWLINE#", -0.10994255885664143], ["#DEDENT# ans =", -0.10996275748037582], ["b = int", -0.11028382936684047], ["b = int (", -0.11028382936684047], ["print ( t", -0.11029078368772668], ["! ! ! !", -0.11040606206842561], ["1 ) ]", -0.11040673971560497], ["( t ) #NEWLINE#", -0.11057129521083676], ["#INDENT# a [", -0.1107238175953773], [": #INDENT# a [", -0.1107238175953773], [", f", -0.1107842979320585], ["t [ i", -0.11078905111190615], ["python3 #NEWLINE#", -0.11080708184809959], ["] * n #NEWLINE#", -0.11092790264335542], ["v1", -0.11103627263286854], ["n //=", -0.11109588225890302], ["( -", -0.11115169323586606], ["#NEWLINE# self", -0.11126726764316629], ["#NEWLINE# self .", -0.11126726764316629], ["* ( len", -0.11130078270540508], ["* ( len (", -0.11130078270540508], ["j +=", -0.11139153125130785], ["ans ) )", -0.11146227261682515], ["( self", -0.11146576639307809], ["1000 )", -0.11180583507447009], [") #NEWLINE# t =", -0.11189442424025559], ["#INDENT# l =", -0.11201820772149333], [": #INDENT# l =", -0.11201820772149333], [") #NEWLINE# d =", -0.11203700172365315], ["rem", -0.11203919206052067], [", 3", -0.11208060471698247], ["1 ] -", -0.11211343856919498], ["ops [", -0.11222154254425168], ["v =", -0.11222502520241735], ["1 ] #NEWLINE#", -0.11228378626412293], ["#NEWLINE# z =", -0.11238997165325817], ["#DEDENT# n = int", -0.11240126684312328], ["import gcd", -0.11245199126466769], ["-1 :", -0.11247135777120514], ["min ( a", -0.11264772054339262], [") #NEWLINE# #DEDENT# if", -0.1126522137570981], ["] : #INDENT# print", -0.1127092619108208], ["= sys", -0.11288857004228602], ["= sys .", -0.11288857004228602], ["0 : #INDENT# return", -0.1129431316245014], [": #INDENT# main (", -0.11303152604621762], [": #INDENT# main", -0.11303152604621762], ["#INDENT# main ( )", -0.11303152604621762], ["#INDENT# main (", -0.11303152604621762], ["#INDENT# main", -0.11303152604621762], [") : #INDENT# main", -0.11303152604621762], ["q .", -0.1131273806726029], ["from itertools", -0.1131768573607135], ["from itertools import", -0.1131768573607135], ["itertools import", -0.1131768573607135], ["#INDENT# b", -0.11337754460472789], ["c ,", -0.11340088513493748], ["#INDENT# return a", -0.11344756374930867], [": #INDENT# return a", -0.11344756374930867], ["s [ 0 ]", -0.11354175366238273], [") >", -0.11363090649547247], [", 2 ,", -0.1136573256579592], ["ch", -0.11375020361566764], ["q +", -0.1138380643072329], ["2 ) ) #NEWLINE#", -0.11388434255964452], ["sm", -0.11392373860692884], ["tp", -0.11430312446689035], ["#NEWLINE# answer", -0.11435641310045133], ["* d", -0.11442756316657822], ["#NEWLINE# while i", -0.11459708803742238], ["rec", -0.11480690550338175], ["[ t", -0.11483087277820876], ["- l", -0.11498505730663962], ["( lo", -0.11511882108162336], ["#NEWLINE# j", -0.11515155675728732], [", y = list", -0.11518099030367424], ["!= 0", -0.11520920060688246], ["pow ( 2", -0.11532062093123474], ["pow ( 2 ,", -0.11532062093123474], ["( answer", -0.1153280623667179], ["[ 1 ] +", -0.11559032206341463], ["[ i + 1", -0.11565339498025576], ["0 : #INDENT# a", -0.11572405734361323], ["lim", -0.11575512253575762], [") #NEWLINE# #INDENT#", -0.11588966052224921], ["i ] : #INDENT#", -0.11595121556927238], ["p1", -0.1160550251173733], ["p :", -0.11608851843666727], ["/ 2 ) )", -0.11614262179397808], ["= p", -0.11619995685598354], ["] :", -0.11622931988133442], ["if t", -0.11631892122976609], ["b = b", -0.1163827124915914], ["index (", -0.1163893594380138], [". index (", -0.1163893594380138], ["#DEDENT# if a", -0.116663510164098], [") #NEWLINE# t", -0.11670765372954077], ["+ l", -0.1167082916592554], ["2 +", -0.11671437315921988], ["#INDENT# ans += (", -0.11676751813556262], ["b2", -0.11684534643322285], ["ar =", -0.11703976914310403], ["res [", -0.11724599600941149], ["// 2 ) :", -0.11729216486471651], ["i ) #NEWLINE#", -0.11730097429217345], ["! ! !", -0.11730644094770222], ["% 4", -0.11743179335132418], ["//= g #NEWLINE#", -0.11743778294163928], ["//= g", -0.11743778294163928], ["1 ) // 2", -0.1174954193055324], ["and b", -0.11759912595578022], ["+ power", -0.11765502054750927], ["min ( l", -0.1177070752441152], [") ) + 1", -0.11833817585008519], [", b )", -0.11843869076024624], ["( pow", -0.11852792212237623], ["( pow (", -0.11852792212237623], ["readline", -0.11856982809273986], ["[ n //", -0.11858063207172896], ["[ n // 2", -0.11858063207172896], ["if c ==", -0.11858397717397312], ["m #NEWLINE#", -0.11859458740817713], ["( cur", -0.11860134906951017], ["[ v", -0.11863309409201343], ["( l )", -0.11874683080444688], ["bb", -0.11897594373464469], ["> 1 :", -0.11923286281656043], ["> 1 : #INDENT#", -0.11923286281656043], ["// i", -0.11923717429084112], ["#NEWLINE# z", -0.11933668462157712], [", 'b'", -0.11938169133543387], ["f", -0.11940728650052561], ["mx", -0.11948252914352632], [": #INDENT# b", -0.1194850807719366], ["l :", -0.1195099542133893], ["ar [", -0.11954425177173075], ["ans += (", -0.11972200166124158], ["if x", -0.11976029756961029], ["exponent", -0.11981530472112757], ["i ,", -0.11984822462132015], ["* k", -0.1198586661914319], ["-1 : #INDENT#", -0.11993242082718861], [": #INDENT# cur", -0.11996591345017854], ["#INDENT# cur", -0.11996591345017854], ["/usr/bin/env", -0.12000677111352566], ["! /usr/bin/env", -0.12000677111352566], ["q1", -0.12002202303323746], ["i +=", -0.12013878902212541], [") : #INDENT# continue", -0.12033499518655612], ["0 ) )", -0.12071621716390724], [", h", -0.12077391674703508], ["ls [", -0.12080300140809826], ["- 1 ,", -0.12086088348532346], [") #NEWLINE# l", -0.1210040581951502], ["max ( 0", -0.1210305365754833], ["max ( 0 ,", -0.1210305365754833], ["( 2 ,", -0.12107038377456991], ["final", -0.1213032644178499], ["#NEWLINE# #DEDENT# if a", -0.12148478092914343], ["* n )", -0.12185920782263202], ["range ( 0 ,", -0.1219697124712068], ["range ( 0", -0.1219697124712068], ["// 4", -0.12197846980896097], ["#NEWLINE# #DEDENT# b", -0.1222449849542373], ["#NEWLINE# b = int", -0.12225754075209716], ["year", -0.1224771335102581], ["z =", -0.12248711973188388], [": 1", -0.12272502088969116], ["k *", -0.1228143166363347], ["stk", -0.12284951588124741], ["== 2", -0.1229069258069881], ["g (", -0.1229110793948617], ["* i", -0.12291708933741018], [", -1 )", -0.12324417866721336], [") #NEWLINE# break #NEWLINE#", -0.12332388236959903], [") #NEWLINE# break", -0.12332388236959903], ["mas [", -0.12363799270413382], ["= gcd (", -0.12379545060445846], ["#NEWLINE# for a", -0.12380150502667576], [", n ,", -0.12384309466921524], ["k ,", -0.12387780495346569], ["== n : #INDENT#", -0.12406650429424868], ["== n :", -0.12406650429424868], ["math #NEWLINE# import", -0.12415146066601294], ["! !", -0.12420681982697884], ["mask", -0.12431596309635744], ["a #NEWLINE#", -0.12447739532964688], ["( tmp", -0.12469283667906456], ["( k -", -0.12470643521454614], ["1 ) ] #NEWLINE#", -0.12478497327960697], ["[ 0 ]", -0.12486670425691342], ["while i", -0.12489132528609423], ["ct [", -0.12496466424053242], ["python3", -0.12515788561226748], ["( 0 )", -0.12529586043736068], ["#NEWLINE# #DEDENT# n ,", -0.12546354366401852], ["#NEWLINE# for x", -0.12597318402397295], ["#NEWLINE# for x in", -0.12597318402397295], ["#INDENT# i", -0.12630833560277677], ["1 ] =", -0.12633476082136974], ["#NEWLINE# import math #NEWLINE#", -0.1265270533173416], ["- r", -0.12655537611889725], ["xs", -0.1266982939915078], ["( c ) )", -0.1267035200800042], ["#NEWLINE# #DEDENT# a", -0.12673072489293902], ["] * n", -0.12682529505940895], ["#INDENT# ans +=", -0.1269320240667903], ["m -", -0.1270322543601433], ["c ) )", -0.1270468955654286], ["bs", -0.1271364171020416], ["res (", -0.12722418999628685], ["wr", -0.12745186860775923], ["print ( sum (", -0.1276216371054556], ["l1", -0.12777846074349877], ["[ 0 ] +", -0.1277833411194623], ["0 ] +", -0.1277833411194623], ["#NEWLINE# import math", -0.1278483496868779], ["readline #NEWLINE# n", -0.12791791637340655], [". readline #NEWLINE# n", -0.12791791637340655], ["counter #NEWLINE#", -0.12795608914685314], ["[ i +", -0.128015190647407], ["ans = min", -0.12807893740952198], ["ans = min (", -0.12807893740952198], ["#NEWLINE# a = [", -0.1283221414862283], ["#NEWLINE# a = int", -0.1283323414020585], ["a //", -0.1286743033140534], ["collections import counter #NEWLINE#", -0.1286758420095051], ["import counter #NEWLINE#", -0.1286758420095051], ["** 2 )", -0.12875558661562467], ["mv", -0.12877956708334634], ["'1'", -0.12879840321193872], ["i ) )", -0.1291546570730637], ["import sys #NEWLINE#", -0.1291820060978915], ["l -", -0.12929707966325069], ["2 ) #NEWLINE# #DEDENT#", -0.1294856879849628], ["* s", -0.12968524565136746], ["right", -0.1297176887474155], ["d [ i ]", -0.12982378086224267], ["2 ]", -0.12991320784179022], ["< len (", -0.1301712453582349], ["< len", -0.1301712453582349], ["== n", -0.1306508564024998], ["+ n", -0.1306871258072598], ["1 #NEWLINE# #DEDENT# for", -0.13074581177564495], ["v ]", -0.1312476464290205], ["str ( x )", -0.1315504734453437], ["c ==", -0.13165088352162524], [". add ( x", -0.13192665361825776], ["add ( x", -0.13192665361825776], ["1 - a", -0.13208508023969515], ["60 )", -0.13214706160680723], ["#NEWLINE# #DEDENT# for i", -0.13229981248035372], ["check (", -0.13260758045933962], ["mod #NEWLINE# #DEDENT#", -0.1326332003051677], ["max ( b", -0.132821166079524], ["#INDENT# d [", -0.13300715021884607], [": #INDENT# d [", -0.13300715021884607], [", end =", -0.13312168731124613], ["[ 0 ,", -0.13317867874537884], ["[ j ]", -0.13326704315614613], ["#DEDENT# #DEDENT# for i", -0.13332356088514793], ["a [ n", -0.1333995037626757], ["done", -0.13353889438703576], ["sys #NEWLINE#", -0.13355899725443166], ["j ==", -0.13373963933910005], ["- 1 ) #NEWLINE#", -0.1338510850314728], [") ) #NEWLINE# n", -0.13391208568652296], ["defaultdict", -0.13403975800135848], ["#DEDENT# b", -0.13409276316255808], ["] #NEWLINE# #DEDENT# else", -0.13441742116396843], ["= counter (", -0.13464242716811847], ["= counter", -0.13464242716811847], ["( start", -0.1346552633521947], ["#INDENT# j", -0.13469066706973093], [": #INDENT# j", -0.13469066706973093], ["m #NEWLINE# #DEDENT#", -0.13478122264778747], [") #NEWLINE# n =", -0.13487189493914983], ["from collections import counter", -0.13492545666793085], ["collections import counter", -0.13492545666793085], ["import counter", -0.13492545666793085], ["a ) ) )", -0.13505131663188766], [": :", -0.13516842245895727], ["1 #NEWLINE# #DEDENT# if", -0.13528330631425028], ["print ( 2", -0.13549672356092504], ["#INDENT# print ( 2", -0.13549672356092504], [". index", -0.135911454487256], ["( ) #NEWLINE# a", -0.13592361505479825], [": #INDENT# i", -0.13593317173480907], ["#NEWLINE# #DEDENT# if (", -0.13632139217608483], ["z [", -0.13633214695598453], [": 2", -0.13653817746994115], ["if ans", -0.136562378643766], ["return #NEWLINE# #DEDENT# if", -0.13660739189423857], ["% mod #NEWLINE# #DEDENT#", -0.1366451648722221], [") : #INDENT# d", -0.13666320012762523], ["#DEDENT# n ,", -0.13700617331248757], ["] [ j", -0.13702829863251698], ["import sys", -0.13709028542504922], ["rstrip", -0.13721729209427844], ["rstrip (", -0.13721729209427844], [". rstrip (", -0.13721729209427844], [". rstrip", -0.13721729209427844], ["x >=", -0.1372200377318642], ["n % 4", -0.1373130576444359], ["#INDENT# print ( n", -0.1373887347949446], ["( 3", -0.13751329521860264], [") * (", -0.13754361924505124], ["pts", -0.13763439129179064], ["course", -0.13783589166633672], ["( d [", -0.1378423672136953], [": #INDENT# while", -0.1378694868168637], [") . rstrip", -0.13791322546854562], [") . rstrip (", -0.13791322546854562], ["j +", -0.13799817652427282], ["xx", -0.13805514715805503], ["2 )", -0.13811144466804334], ["** 2", -0.1381613960493703], [", end", -0.13817789905721733], ["2 -", -0.13861347650319772], ["+ i", -0.13864889546379391], ["( ) . rstrip", -0.13865343215388484], [") #NEWLINE# r =", -0.13881684162863417], ["+ max", -0.13886408254843707], ["+ max (", -0.13886408254843707], ["s [ 0", -0.13887187932886688], ["v2", -0.13888164313807053], ["#DEDENT# x", -0.13893969732831774], ["j ]", -0.13933679321509282], ["k -", -0.1396018141481252], ["n ) ] #NEWLINE#", -0.13989247948474487], ["elif (", -0.14023572129345568], ["#DEDENT# elif (", -0.14023572129345568], [": #INDENT# ans +=", -0.14028245766777148], ["#INDENT# while", -0.14107081010567168], ["#NEWLINE# #DEDENT# elif (", -0.141137371804226], [", 31", -0.1413051036907988], ["'' )", -0.14157086870326413], ["k2", -0.14169998376813797], ["'' ) #NEWLINE#", -0.14186240571405823], [": 1 ,", -0.14197773290104512], ["if n", -0.14202724752269866], ["= m", -0.1420309531000811], ["= k #NEWLINE#", -0.1421083769916084], ["// g", -0.14246128470138186], ["( ) #NEWLINE# #DEDENT#", -0.14262701084906518], ["mas", -0.14265922235092365], [", a )", -0.1429262718362035], ["print ( n", -0.14295388723572172], ["n +", -0.14308692547429608], ["if", -0.1430979245497196], ["#DEDENT# print ( r", -0.14323522656501894], ["i + 1 ]", -0.14330694603149202], ["if b", -0.1433805277923851], ["#NEWLINE# cnt = 0", -0.1437939187655003], ["r (", -0.14380569067752877], ["\"no\" ) #NEWLINE# return", -0.1439345832407896], ["seq [", -0.14422569028107143], ["( 'a' )", -0.14428712584562667], ["#DEDENT# print ( (", -0.14439906170524758], ["( r )", -0.1446326155212194], ["lambda", -0.144726020571452], ["a >=", -0.1448213680417332], ["s :", -0.1449461906029822], ["o", -0.14502433794593467], [": #INDENT# tmp", -0.14525689925307245], ["#INDENT# tmp", -0.14525689925307245], ["n :", -0.14540173582228696], ["1 #NEWLINE# s", -0.14544425919172396], ["range ( n //", -0.14582143369937808], ["id", -0.146189779322441], ["#NEWLINE# ans = 0", -0.14626679591143757], ["[ 2", -0.1464301786086193], [", mod )", -0.14656914645402463], [") / (", -0.146691477792616], ["9 *", -0.14692521927728364], ["power", -0.14706877568438656], [") #NEWLINE# i", -0.14714061294318126], ["#DEDENT# #DEDENT# #DEDENT#", -0.1472328096703288], ["( 1 -", -0.1472629620004852], ["#NEWLINE# #DEDENT# ans", -0.14730497111698077], ["31 ,", -0.1473909730188387], ["while n", -0.14744881997656203], ["-1 ) #NEWLINE# return", -0.14756667773875565], ["n // 2", -0.14807920413342637], ["#NEWLINE# i =", -0.14833825271151782], ["d [ i", -0.14847640709610976], ["import collections #NEWLINE#", -0.14852046952212913], ["collections #NEWLINE#", -0.14852046952212913], [", i )", -0.14866992134653567], ["p #NEWLINE#", -0.14867040902500508], ["import collections", -0.1491195245331002], ["1 ] [", -0.14919064744760957], ["1 #NEWLINE# #DEDENT# else", -0.14920421643103934], ["] += 1 #NEWLINE#", -0.14955302089162908], ["] += 1", -0.14955302089162908], ["] : #INDENT#", -0.149668364334348], ["- ( a", -0.15003703087321904], ["'0'", -0.15021941046946816], [") %", -0.15048557854962352], ["1 #NEWLINE# if", -0.15086686663493434], ["== 0 :", -0.1512939163299285], ["= k", -0.15131903775206457], ["( 1 <<", -0.1516422406162622], ["a = input (", -0.15167764449497007], ["a = input", -0.15167764449497007], [") ) #NEWLINE# print", -0.1516878053055375], ["stdout", -0.15172353722116486], ["] = true #NEWLINE#", -0.151765136474398], ["] = true", -0.151765136474398], ["ord ( 'a'", -0.15193294806354943], ["ord ( 'a' )", -0.15193294806354943], ["= c", -0.15230468823842455], ["- y1", -0.15288706746012667], ["== 0 : #INDENT#", -0.15301822361338285], [": list ( map", -0.1535177569178768], ["( ar", -0.15406760498314098], ["1 else", -0.15406931919594727], ["-= 1 #NEWLINE# #DEDENT#", -0.15427185947854571], ["end =", -0.15432015157185724], ["3 ,", -0.15434300176735358], ["] - 1", -0.15438364053476195], ["- 1 )", -0.1544229221193346], ["t2", -0.15467427491658825], ["( list ( map", -0.154907817815026], ["arr [", -0.15493592068289883], [") - 1", -0.1552158966534127], ["#NEWLINE# #DEDENT# n =", -0.15522681017238188], ["d .", -0.15532342110710998], ["5 )", -0.15537364944408183], [": #INDENT# cnt", -0.155419858588182], ["i , j", -0.1554581194659479], ["print ( max", -0.15572874497237102], ["print ( max (", -0.15572874497237102], [", c = list", -0.15587521417660416], ["#DEDENT# print ( ans", -0.15587990160814758], ["30", -0.1559921352550039], ["#NEWLINE# while n", -0.1564631349088843], ["( ans ,", -0.15684131553644814], [", b ) :", -0.1568686952851472], ["n - k", -0.15699799337385048], ["mod )", -0.157255756032308], [") : #INDENT# if", -0.15742456473607105], ["= '' #NEWLINE#", -0.15765830303502512], ["points", -0.15787356786342913], ["k //", -0.15844929527912355], ["#NEWLINE# #DEDENT# while", -0.15847343564973249], ["#INDENT# cnt", -0.15848001313659063], ["ans = 0", -0.15908210019669033], ["= lambda : list", -0.15913743835802743], [": list (", -0.15913743835802743], ["lambda : list", -0.15913743835802743], ["lambda : list (", -0.15913743835802743], ["a ] [", -0.15922539436108965], ["+ 1 ) *", -0.159597006045971], ["pow", -0.15962962971478006], ["pow (", -0.15962962971478006], ["= sorted ( list", -0.1599057650037744], ["sorted ( list (", -0.1599057650037744], ["sorted ( list", -0.1599057650037744], [") ) ) )", -0.1599821052626393], ["cnt = 0 #NEWLINE#", -0.16032881953500033], ["cnt = 0", -0.16032881953500033], ["1 ) *", -0.16039784906607607], ["x <=", -0.16056358105384094], ["( 4", -0.160793152131693], ["#DEDENT# a", -0.1608426348376445], [") : #INDENT# ans", -0.16085646961524752], ["= 10", -0.16087816444815306], ["w", -0.16088156026905207], [") // (", -0.16096226753623716], ["[ n -", -0.1610740431172205], ["= 10 **", -0.1611538052675217], ["split ( \" \"", -0.16190682283086338], ["split ( \" \" )", -0.16190682283086338], [". split ( \" \"", -0.16190682283086338], ["#DEDENT# while", -0.16216996027064345], ["j -", -0.162271301224781], ["* n #NEWLINE#", -0.16240417382368033], ["[ -1 ] #NEWLINE#", -0.16272513492516677], ["a = [", -0.16309061396328983], ["'' #NEWLINE#", -0.1631152564293632], ["#NEWLINE# cur =", -0.1631683224476761], [") ) #NEWLINE# return", -0.16322768621156053], ["cnt +=", -0.16327863623044783], ["max ( s", -0.1633356137718036], ["flg", -0.16349578466930673], ["31", -0.16357018216541028], ["#NEWLINE# for a in", -0.1638102713837751], ["t [", -0.16381437767100324], ["== 1 : #INDENT#", -0.16411289313803867], ["'a' )", -0.16439255408359602], ["10", -0.16470804274062226], ["( s [", -0.164835391657638], ["if a <", -0.1649433355910324], ["if ( a", -0.16560184795753954], ["x2", -0.16575417328190944], ["3 *", -0.16581594002004274], [") #NEWLINE# n ,", -0.16616944844682888], [") ] #NEWLINE# for", -0.16628526720747255], ["#NEWLINE# #DEDENT# def __starting_point", -0.1662885438522599], ["== 1 :", -0.16640522466753352], [") ) #NEWLINE# #DEDENT#", -0.1665906205636282], ["res ,", -0.16661845148228696], ["d ,", -0.166640446370129], ["s in", -0.16668182399561832], ["a %", -0.1671144946659828], ["( l", -0.16755536631225482], ["n : #INDENT#", -0.1675926644854686], ["( cnt", -0.16786359567838746], [": list", -0.16826567396706205], ["( res", -0.1683459559706352], ["#NEWLINE# #DEDENT# __starting_point (", -0.16841054847336415], ["#NEWLINE# #DEDENT# __starting_point", -0.16841054847336415], [") #NEWLINE# #DEDENT# __starting_point", -0.16841054847336415], ["#DEDENT# n =", -0.16855780674434814], ["ans .", -0.16893953348516458], ["ans . append", -0.16893953348516458], ["ans . append (", -0.16893953348516458], ["= 1 #NEWLINE# #DEDENT#", -0.16894772524211527], ["0 ) : #INDENT#", -0.16896108849999975], ["0 ) :", -0.16991923138027165], ["- * -", -0.17000626064489335], ["* -", -0.17000626064489335], ["- *", -0.17000626064489335], [": -1", -0.1700397859284896], [": -1 ]", -0.1700397859284896], ["#NEWLINE# #DEDENT# for", -0.17028710210260392], ["//=", -0.1706236804144095], ["#NEWLINE# l =", -0.17115893470143234], ["( e", -0.1712745697752452], ["main ( ) #NEWLINE#", -0.17137321115211662], [": #INDENT# a", -0.17164669442244387], ["-1 ,", -0.1716998557466303], ["( \" \" )", -0.17198781323827222], ["prev", -0.17206058447293526], ["* t", -0.17209340910623858], ["n /", -0.17235792176283393], ["#NEWLINE# res", -0.1725174474403566], ["( max", -0.17267784761684193], ["end", -0.17278137369575444], ["n ==", -0.1729267799305063], ["= sorted", -0.17317940115209823], ["= sorted (", -0.17317940115209823], ["#NEWLINE# #DEDENT# else :", -0.1734034857327286], ["#NEWLINE# #DEDENT# else", -0.1734034857327286], ["( 'a'", -0.17341043579046572], ["al", -0.17362466914661773], ["sys", -0.1738241934814066], ["for s in", -0.17407166187815168], ["for s", -0.1747411871102661], ["#DEDENT# __starting_point ( )", -0.17491544355530506], ["#DEDENT# __starting_point (", -0.17491544355530506], ["#DEDENT# __starting_point", -0.17491544355530506], ["// k", -0.17513886176053992], ["= ''", -0.1752580657841699], ["+ 1 ) #NEWLINE#", -0.17528345029432918], ["b )", -0.17533033851835084], ["[ int ( x", -0.17547866736151038], ["#DEDENT# if (", -0.17580930581101892], ["#DEDENT# def __starting_point (", -0.17590276322014367], ["def __starting_point ( )", -0.17590276322014367], ["__starting_point ( ) :", -0.17590276322014367], ["#DEDENT# def __starting_point", -0.17590276322014367], ["def __starting_point", -0.17590276322014367], ["__starting_point ( ) #NEWLINE#", -0.17590276322014367], ["def __starting_point (", -0.17590276322014367], ["== 1", -0.17607863123356202], ["b *", -0.17613139896533778], ["] ) #NEWLINE# #DEDENT#", -0.17652931855577936], ["a ]", -0.17659484054938934], ["( c )", -0.1768537878329553], ["4 )", -0.17732089628388992], ["( max (", -0.17734820117732417], ["inf", -0.17741622580684158], ["pop ( ) #NEWLINE#", -0.17778273481831897], ["k1", -0.17786527570308766], ["( \" \"", -0.17798600839122808], ["else : #INDENT# if", -0.17822978229495315], ["# # # #", -0.1782817015122055], ["** 2 ) #NEWLINE#", -0.17828889645640772], ["#DEDENT# ans", -0.1783750164305507], ["l )", -0.17874863491992735], [") ) +", -0.1788932717083816], [", mod", -0.17913105234091845], ["tmp =", -0.17913727361146062], ["#NEWLINE# cur", -0.17923860021610022], ["kk", -0.17925302521850886], ["l ]", -0.17933971834126392], ["0 ] ) #NEWLINE#", -0.17981321693448515], ["a #NEWLINE# #DEDENT#", -0.18006844769775182], ["#NEWLINE# #DEDENT# #DEDENT# for", -0.18017062772159959], ["] #NEWLINE# for i", -0.18064819561917747], ["res =", -0.18087863038743904], [") for x", -0.180990286738902], ["sys #NEWLINE# input =", -0.18134243880089124], ["> 0 :", -0.18226436941030466], [") ) *", -0.18254123339552789], ["[ 1 ] )", -0.182841730356668], ["4 *", -0.18296073879920405], ["#NEWLINE# #DEDENT# #DEDENT#", -0.18327952612251353], ["ans = 0 #NEWLINE#", -0.18330708559566805], ["( (", -0.18348422699791103], ["score", -0.1835992735814573], [", n -", -0.18365729159999716], ["#INDENT# a", -0.1843304198949626], [", -1", -0.1843543158473404], ["#NEWLINE# i", -0.18454997531019607], ["lo", -0.18488031010796144], [") for x in", -0.1848897808148932], ["# # #", -0.18500931289002456], ["# #", -0.1852065822772632], [") % mod #NEWLINE#", -0.18521897805477613], [": #INDENT# s", -0.1852447575510425], [") #NEWLINE# cnt =", -0.18535579889136308], ["( v", -0.18551712116310848], ["pop ( )", -0.18565941387116736], [". pop ( )", -0.18565941387116736], ["#NEWLINE# print ( min", -0.18596516184962372], ["> 0 : #INDENT#", -0.18677899492169311], ["\" \" )", -0.1877511432265661], ["\" \"", -0.1882678529368561], ["i + 1", -0.18890893771787182], [") - 1 ]", -0.1891200712853241], ["- 1 ) //", -0.18959042004677087], ["0 )", -0.18969609837124188], ["print ( ans", -0.18976817149152447], ["#INDENT# s", -0.18981662757549944], ["#NEWLINE# input = sys", -0.18990527767610782], ["[ x", -0.19012365001226936], ["( list (", -0.19055397600032498], ["d *", -0.1906185261287124], ["= list ( map", -0.19080466623151446], ["1 <<", -0.19114441049865136], ["ans ,", -0.19144393945673982], ["12", -0.1919857053828358], ["j =", -0.19316081508938032], ["h", -0.19376909184943236], ["// (", -0.1944434281258555], [") ) - 1", -0.19469281334870553], ["mass", -0.19488886250258752], ["input = sys .", -0.19493741165107242], ["input = sys", -0.19493741165107242], ["functools", -0.19571877868645313], ["ops", -0.19587023398677963], ["sys #NEWLINE# input", -0.19608175697595276], ["import sys #NEWLINE# input", -0.19608175697595276], ["[ 0 ] *", -0.19684362195395336], ["0 ] *", -0.19684362195395336], ["print ( min (", -0.19697249252509624], ["print ( min", -0.19697249252509624], ["idx", -0.19715828114027895], ["from collections import", -0.1978953102619553], ["collections import", -0.1978953102619553], ["from collections", -0.1978953102619553], [". pop (", -0.19810526208593013], ["pop (", -0.19810526208593013], ["-1 ] #NEWLINE#", -0.198138029422673], ["* n +", -0.1983109356500092], ["#NEWLINE# d =", -0.19840995058833238], [". pop", -0.1989234369266524], [") for i", -0.1990922754855235], ["-1", -0.1993597847306898], ["[ -1 ]", -0.19948710953687626], ["#INDENT# continue", -0.20018399112954716], ["#INDENT# continue #NEWLINE#", -0.20018399112954716], ["#INDENT# continue #NEWLINE# #DEDENT#", -0.20018399112954716], ["#", -0.20078370359502778], ["[ :", -0.20087984375626042], [": #INDENT# continue", -0.2008806400093159], [": #INDENT# continue #NEWLINE#", -0.2008806400093159], ["> 1", -0.20105507864852148], [") ) -", -0.2014040932270729], ["math", -0.20141531359045264], ["remwood", -0.20184111750643316], ["pop", -0.20195756117724864], [") : #INDENT#", -0.20204636310634122], ["stdin . readline #NEWLINE#", -0.20222734278589016], ["ls", -0.20228314648319196], ["counter (", -0.20235329427803825], ["] +", -0.20321793095529564], ["' ' ) ) )", -0.2033444767029002], [") ) :", -0.203482768237616], ["def main", -0.20392979998751246], ["def main (", -0.20392979998751246], [": ]", -0.2040833129522244], ["ret", -0.20413466875863506], ["def main ( )", -0.20438717848652732], ["main ( ) :", -0.20438717848652732], ["= list (", -0.20472594102571817], ["= list", -0.20472594102571817], ["t", -0.20477184823243044], [") : #INDENT# return", -0.20479986143135748], ["#NEWLINE# #DEDENT# elif", -0.2051532630380293], ["#NEWLINE# for c in", -0.20584328964380091], ["#NEWLINE# for c", -0.20584328964380091], ["else", -0.2061616348980884], ["r )", -0.20663028803554398], ["int ( x", -0.20673004221337987], ["( ) #NEWLINE# print", -0.20681175546675662], ["itertools", -0.20700788769876124], [">= 0", -0.207587818026483], ["*=", -0.20766615770115865], ["from math", -0.20769962107764486], ["math import", -0.20769962107764486], ["from math import", -0.20769962107764486], ["elif", -0.20841489782680173], [") <", -0.20859618324812756], ["readline #NEWLINE#", -0.20861490625356666], [". readline #NEWLINE#", -0.20861490625356666], ["// 2", -0.20885643692240038], ["[ (", -0.20889061857975347], ["[ 0", -0.2088964699896639], ["index", -0.20913260534017244], ["return #NEWLINE# #DEDENT# #DEDENT#", -0.2092771312093276], ["( n //", -0.2094911283130887], [") #NEWLINE# #DEDENT# print", -0.2102037472659995], ["[ n", -0.21028147331602018], ["#DEDENT# return", -0.2104902020541878], ["+ 1", -0.21080418641499857], ["0 ]", -0.21088223988968127], ["] +=", -0.21100363804050487], ["len (", -0.21106800117379906], [") % mod", -0.2116640631121235], ["= n", -0.21223480527752686], ["( 100", -0.2135122134706249], ["( ' ' ) )", -0.21365984354515194], ["' ' ) )", -0.21365984354515194], ["] ,", -0.2151533994564003], ["st", -0.21541202037732857], ["a = [ int", -0.2159385472340986], ["c2", -0.21655335822379781], ["#NEWLINE# input =", -0.21667208447712352], [") ) ,", -0.21781764716884874], [") -", -0.21837367987244846], ["( 2 *", -0.2184411486676536], ["i +", -0.21860424358006736], ["nums", -0.21899855676729016], ["''", -0.21933951439713978], [") for i in", -0.2199906415070484], ["ans +=", -0.22049664754498294], ["( list", -0.2210256662344802], ["#DEDENT# #DEDENT# for", -0.2211959182989427], ["p", -0.22122711258010064], ["i =", -0.22170372967347826], ["= 1 #NEWLINE#", -0.2227597552731115], ["( i )", -0.2227622784463298], ["val", -0.2233720998962851], ["0 : #INDENT# if", -0.22339235091136345], ["l =", -0.2239938640975416], ["len", -0.22423068443052838], ["cur =", -0.22509952817058138], ["<=", -0.2255632497003525], ["60", -0.22626174901123058], ["#DEDENT# for i", -0.22650714641592457], [") #NEWLINE# d", -0.22657257480111878], ["[ j", -0.22737587137956652], ["a1", -0.22844511324275057], ["- 1 ]", -0.23014661587104965], ["#NEWLINE# input", -0.23057816056134967], ["x ) for", -0.2305824513628978], ["x ) for x", -0.2305824513628978], ["1 ) #NEWLINE#", -0.2306003862415472], ["0 :", -0.23107639882689568], ["b1", -0.23280652954903971], ["if len", -0.23431083852529055], ["if len (", -0.23444834599539946], ["for a", -0.23582022587861495], ["#NEWLINE# from", -0.236449469979588], ["int ( x )", -0.23701598531933163], ["#DEDENT# elif", -0.2372387484882878], ["( ) ) :", -0.23732233931051694], [") : #INDENT# print", -0.2375888912615517], [") #NEWLINE# cnt", -0.23797709392771857], ["x in input", -0.23817926472243653], ["x in input (", -0.23817926472243653], ["for x in input", -0.23817926472243653], ["#DEDENT# for i in", -0.23825738004808233], ["#NEWLINE# l", -0.23948464534179986], ["n %", -0.23959420635453077], ["'yes' ) #NEWLINE# #DEDENT#", -0.23985814330366992], ["a - 1", -0.23994252647489026], ["= lambda :", -0.24073829195045773], ["ans [", -0.24090323985755546], ["% mod #NEWLINE#", -0.2416320816451758], ["continue #NEWLINE# #DEDENT#", -0.24222228871905577], ["continue #NEWLINE#", -0.24222228871905577], ["continue", -0.24222228871905577], ["#NEWLINE# #DEDENT# n", -0.24260037242054394], ["seq", -0.24260045235442862], ["( x ) for", -0.24347910385113783], [") #NEWLINE# n", -0.24388453599059345], ["( x", -0.24419423131164317], ["m = list", -0.2446448244314165], ["m = list (", -0.2446448244314165], [", m = list", -0.2446448244314165], ["input =", -0.24466216060288457], ["!", -0.2447128304790686], ["/ (", -0.24491593688697488], ["( [", -0.24506144638490068], [": #INDENT# d", -0.24523431176872504], ["for x", -0.245263709670597], ["mod #NEWLINE#", -0.24643144690732177], ["#NEWLINE# if (", -0.24687719905712222], [") * 2", -0.24744419173864163], ["print ( ans )", -0.2475145074731693], ["i ) for i", -0.24774953022864507], ["i ) for", -0.24774953022864507], ["a -", -0.24795943605461218], [") #NEWLINE# #DEDENT# #DEDENT#", -0.2483095011611174], ["#INDENT# d", -0.24861922157628735], ["b ) : #INDENT#", -0.24916412916623623], ["1 -", -0.24995528681772286], ["[ int ( i", -0.2501901518747983], ["+ 1 ]", -0.25054232374685487], [", j", -0.25113817779508824], ["<<", -0.25190717759730236], ["( ans ) #NEWLINE#", -0.2521416424154566], ["ct", -0.25221951859030234], [") for", -0.25232012689342553], ["math . gcd (", -0.25247678599878337], [". gcd (", -0.25247678599878337], ["for a in", -0.2525311168480454], ["a in", -0.2532768177520738], ["] *", -0.25423308579530496], ["li", -0.25460787152328573], [") #NEWLINE# #DEDENT# elif", -0.2547861754919747], ["red", -0.25479215930641524], ["pref", -0.25494080362566013], ["( i ) for", -0.25503031701540946], ["s2", -0.2550793334071926], ["self .", -0.255542697778708], ["1 ) //", -0.2560131725620661], ["b ) :", -0.2571307928716655], ["lambda :", -0.2571677112336902], ["#NEWLINE# #DEDENT# return", -0.25740993286041247], ["else :", -0.2576307756121783], ["#NEWLINE# cnt =", -0.2587657280730261], ["= n -", -0.2594693559652314], ["( ) ) )", -0.26044366242216255], ["c", -0.26053748045406405], ["div", -0.2611034948785143], [") #NEWLINE# ans =", -0.2612165560168362], ["( ) #NEWLINE#", -0.26193800570122083], ["y1", -0.26233427315622015], ["] #NEWLINE# #DEDENT#", -0.2627810464361044], ["#DEDENT# n", -0.2629524784840877], ["n //", -0.26340611304848693], ["#INDENT# break #NEWLINE# #DEDENT#", -0.2637063054824], [", a", -0.26489626822661694], ["= 1", -0.26548789398093187], ["( min (", -0.26584424894047254], ["= [ 0 ]", -0.26600124916772355], ["[ -1", -0.2662469526091403], ["% mod", -0.26639794337421796], ["z", -0.2669550770064907], ["2 ,", -0.2673677870444181], ["split ( ' '", -0.2682819304439972], ["split ( ' ' )", -0.2682819304439972], [". split ( ' '", -0.2682819304439972], ["( ' ' )", -0.2682819304439972], ["( ans )", -0.26863456417825293], ["'no' ) #NEWLINE# #DEDENT#", -0.26903272304954423], ["max (", -0.26907725395741006], ["x in", -0.2706343118443073], ["#NEWLINE# #DEDENT# print (", -0.2707529943709005], [": #INDENT# break", -0.27076186043365325], ["#INDENT# break", -0.27076186043365325], ["#INDENT# break #NEWLINE#", -0.27076186043365325], [": #INDENT# break #NEWLINE#", -0.27076186043365325], ["&", -0.2716155422350288], ["%", -0.2734223991821047], ["temp", -0.2739115418597679], ["( 0 ,", -0.274542077373246], [") *", -0.2746911266362323], ["ans ) #NEWLINE#", -0.27480862973966264], ["now", -0.27485833495840617], ["for x in", -0.2757100691435745], ["#DEDENT# #DEDENT#", -0.2762752770799896], ["( min", -0.27651086494983323], [", b = list", -0.27692154311383543], ["( a -", -0.27707910404191155], [", i", -0.2773200478966785], ["+ a", -0.2775318840374696], ["- 2", -0.27872757215162985], ["#NEWLINE# #DEDENT# #DEDENT# else", -0.280811036862626], ["cnt =", -0.281266029739421], ["point", -0.2815155149728145], ["& 1", -0.28156339418599824], ["x1", -0.2826033172764628], ["b //", -0.2829141141738647], ["d =", -0.2831640824176548], ["( ' '", -0.2845018012317757], ["1 ] ) #NEWLINE#", -0.2878170686320392], ["0 : #INDENT#", -0.28860840911810154], [": #INDENT# ans =", -0.28930004842477774], [") #NEWLINE# #DEDENT# def", -0.29099128675158165], ["#DEDENT# #DEDENT# else :", -0.29108821222315934], ["#DEDENT# #DEDENT# else", -0.29108821222315934], ["[ a", -0.2917029295552945], ["#INDENT# ans =", -0.29251607681447717], ["odd", -0.2925242711108442], ["#NEWLINE# ans =", -0.2928576861731747], [") #NEWLINE# ans", -0.2939007289168543], ["( c", -0.29427139917992573], ["int ( i )", -0.2947834539437077], ["max", -0.29492188730242697], ["c1", -0.29493725532757975], ["> 0", -0.2965503867667456], ["ans )", -0.2970657117332521], ["1 : #INDENT#", -0.29990752454161906], ["1 ] )", -0.3003297390765044], ["1 :", -0.30119376921570695], ["int ( i", -0.30301946853512085], ["#NEWLINE# break #NEWLINE# #DEDENT#", -0.3048487014686641], ["#INDENT# print ( 'no'", -0.3057398763633531], ["#NEWLINE# break", -0.30596232334404916], ["#NEWLINE# break #NEWLINE#", -0.30596232334404916], ["start", -0.30598034312826405], [": #INDENT# if (", -0.3062974735169829], ["- 2 *", -0.3063950987593996], ["i in input", -0.3067916032840615], ["for i in input", -0.3067916032840615], ["i in input (", -0.3067916032840615], [") ) : #INDENT#", -0.3069898431145146], ["0 ,", -0.3080325847351577], ["( 2", -0.3086764268428286], ["k", -0.3089485664294675], ["1000", -0.31083897198825516], ["( map ( int", -0.31145536891903436], ["mn", -0.31177168686637347], ["-1 ]", -0.3122298818181208], ["#INDENT# if (", -0.31310459672913615], ["' ' )", -0.3139699131573942], ["( d", -0.31501642844989974], ["tot", -0.31560966604698837], ["else : #INDENT#", -0.3162034134364894], ["#DEDENT# else", -0.3184064051789714], ["#DEDENT# else :", -0.3184064051789714], ["#NEWLINE# print ( (", -0.3185140630519825], ["x )", -0.31937122236767646], ["ord (", -0.3197742058615603], ["ord", -0.3197742058615603], ["= 0 #NEWLINE# while", -0.32035544284043177], ["#DEDENT# for", -0.32105588891420483], ["( 0", -0.32129586737719384], ["break #NEWLINE# #DEDENT# #DEDENT#", -0.3213012076897788], ["( i", -0.32163808303855135], ["blue", -0.3217216006440122], ["0 #NEWLINE# while", -0.3224939629509363], ["counter", -0.322513835069284], ["split ( ) ]", -0.3225735615190296], ["( x )", -0.3229416050564046], ["( ) ]", -0.3230295876074329], ["math . gcd", -0.32400605007346583], [". gcd", -0.32400605007346583], ["s1", -0.32667069220541645], ["#NEWLINE# d", -0.3289974309252679], ["= [ 0", -0.3325746712304445], ["-= 1", -0.3333368151590919], ["-= 1 #NEWLINE#", -0.3333368151590919], ["list ( map (", -0.3334157730686033], ["list ( map", -0.3334157730686033], ["print ( 'no' )", -0.3347281986322853], ["print ( 'no'", -0.3347281986322853], ["gcd (", -0.3347573470120069], ["self", -0.33577875643603566], ["res", -0.33752073105148894], ["( 'no' )", -0.33790994096537047], ["( 'no' ) #NEWLINE#", -0.33790994096537047], ["#INDENT# print ( (", -0.33899088521239995], ["min (", -0.33938529353144586], ["' '", -0.3394939080323945], ["( 'no'", -0.3399173163745957], ["100", -0.34006881390818233], ["#NEWLINE# cnt", -0.3420799303135788], ["#INDENT# print ( 'yes'", -0.34950380298508876], ["arr", -0.3503299363934128], ["__starting_point ( )", -0.35180552644028734], ["__starting_point (", -0.35180552644028734], ["__starting_point", -0.35180552644028734], ["print ( 'yes' )", -0.35183393041611444], ["] )", -0.3532416513818894], ["#INDENT# return", -0.3539711897504831], ["#DEDENT# else : #INDENT#", -0.3542907168672349], ["( 'yes' ) #NEWLINE#", -0.35491776324880975], ["'yes' ) #NEWLINE#", -0.35491776324880975], ["( 'yes' )", -0.35491776324880975], ["-=", -0.35559190704905125], [") #NEWLINE# ;", -0.3559548632729317], ["'yes' )", -0.35683657034846716], ["[ 1 ]", -0.35874793548272427], [") ,", -0.36158927014098824], ["collections", -0.36276197841538155], ["[ int", -0.36416028198948064], [": #INDENT# return", -0.36483563755946186], ["in map", -0.3687784720925112], ["in map (", -0.3687784720925112], ["min", -0.3688094734120903], ["//", -0.36902094859594153], ["/", -0.3701155390157994], ["= (", -0.3714619334073484], ["( map", -0.37240823299018744], ["( map (", -0.37240823299018744], [") ) #NEWLINE# ans", -0.37367020171178783], ["- 1", -0.3739404634123359], ["= [ int", -0.3741772337928722], ["= [ int (", -0.3741772337928722], ["( ) ] #NEWLINE#", -0.37624416352226514], ["[ int (", -0.3774466618991651], ["#INDENT# if", -0.38303296574906676], ["] ) #NEWLINE#", -0.3844542973821174], [">=", -0.38449096897637675], ["( ans", -0.387192137699897], ["#NEWLINE# while", -0.38919319044718553], ["from", -0.3903477631435147], ["- (", -0.3909892071693778], ["1 #NEWLINE#", -0.3931231796834467], ["] =", -0.3937104839245913], ["0", -0.3943460225848252], ["2 *", -0.39573323138735667], ["[ 1", -0.39824873031310826], ["'no' )", -0.4034298224563141], ["'no' ) #NEWLINE#", -0.4034298224563141], ["#INDENT# ans", -0.4055878997225576], ["q", -0.4061949207554866], ["gcd", -0.40835357323988625], ["main ( )", -0.4089584657123068], ["'no'", -0.4096417785263513], ["#NEWLINE# ans", -0.40994367612366955], ["k = list", -0.4114944355911491], ["k = list (", -0.4114944355911491], ["main (", -0.41154079070931104], [": #INDENT# ans", -0.4128816949775925], ["#NEWLINE# return", -0.41550544942877876], ["main", -0.4156437751634773], ["print ( 'yes'", -0.418599389554776], ["* n", -0.41865125083649757], ["n -", -0.41888814789673623], [", k = list", -0.4205264356339182], ["( 'yes'", -0.421363044399466], ["b", -0.42287534355007583], ["e", -0.4297313432045328], [": #INDENT# if", -0.43239176478893604], ["ar", -0.4331214021171837], ["'yes'", -0.4333291237428529], ["i )", -0.4436561444158604], ["* (", -0.4446621228314436], ["x", -0.4448386183556297], ["#NEWLINE# import", -0.45262208644040386], ["list (", -0.4535834082221543], ["list", -0.46147317899486046], ["d [", -0.46696436361764737], [") ) ) #NEWLINE#", -0.47035250942559637], ["<", -0.4727778463326556], ["#NEWLINE# #DEDENT# def", -0.4754982476119621], [">", -0.4790444068549601], ["break #NEWLINE# #DEDENT#", -0.49053656311602933], ["4", -0.493803960186169], ["break", -0.49770753558654285], ["break #NEWLINE#", -0.49770753558654285], ["= [", -0.5021161615299775], [") ]", -0.5055376072698711], ["def", -0.5121921712007607], ["#NEWLINE# #DEDENT# if", -0.5133606339458653], [") #NEWLINE# return", -0.5174436111261064], ["mod", -0.5178575955429698], ["#DEDENT# if", -0.5206079950279268], ["tmp", -0.5275443816754251], ["v", -0.5279260489758727], ["ans =", -0.5299269888850026], ["#DEDENT# def", -0.5306104317759741], ["in input (", -0.5465895866965483], ["in input ( )", -0.5465895866965483], ["in input", -0.5465895866965483], ["while", -0.552374590937635], ["( ) : #INDENT#", -0.553710000865246], [") ] #NEWLINE#", -0.5558885676533646], ["( ) :", -0.5626731402564937], [") #NEWLINE# return #NEWLINE#", -0.5741565443725807], ["#NEWLINE# return #NEWLINE#", -0.5741565443725807], [";", -0.5749282408287814], ["#NEWLINE# ;", -0.5749282408287814], ["#NEWLINE# return #NEWLINE# #DEDENT#", -0.5756443184962462], ["+", -0.5810624397887955], ["] #NEWLINE#", -0.5840102158566636], ["import", -0.5927525530425826], ["return #NEWLINE# #DEDENT#", -0.594555443795375], ["return #NEWLINE#", -0.6123013671982037], [") ) )", -0.6147823531352026], ["if (", -0.6192870641471274], ["1 ]", -0.6264557640804134], ["print ( (", -0.6559767525740667], ["2", -0.6590422179280259], ["cur", -0.6660875893749999], ["l", -0.7152276867375388], ["return", -0.7635685339153404], ["input ( ) #NEWLINE#", -0.8046595075171669], ["cnt", -0.817047047792193], ["j", -0.8308056084671032], ["1", -0.8341042217638931], ["#NEWLINE# #DEDENT#", -0.8411827095179876], [":", -0.9856921308400702], ["d", -0.9929041964351637], ["#INDENT#", -1.0134100788338234], ["#DEDENT#", -1.0134100788338234], [": #INDENT#", -1.0619511898513756], ["[", -1.1028569642570245], ["]", -1.1218819038945418], ["-", -1.1480461242975029], ["*", -1.2104160127930528], ["ans", -1.4262056321228695]]}