{"columns": ["feature_names", "importances"], "data": [["(", 1.2102401567951406], [")", 1.2051803770245948], ["int", 0.647471018975062], ["np", 0.5349056706623486], ["input", 0.4800182772610965], ["#NEWLINE#", 0.47817181655296936], ["s", 0.4694530515065393], ["split", 0.46439852577344093], [".", 0.45980565275854246], ["map", 0.45390171571513827], ["y", 0.40938986784115844], ["total_cost", 0.3803221703686093], ["range", 0.3600789979514798], ["print", 0.3525480693533886], ["lower", 0.3465024968755555], ["cost", 0.334702316340975], ["\"yes\"", 0.28732161176724297], ["\"no\"", 0.28732161176724297], ["and", 0.27941382045915647], ["distance", 0.27576363998138387], ["persuaded", 0.2702585943554435], ["max_lcm", 0.26844473293784443], ["max_colors", 0.26498382022485706], ["x_1", 0.25995680380087444], ["**", 0.25640475680347946], ["sort", 0.24567913259939875], ["line1", 0.24524003619062573], ["line2", 0.24524003619062573], ["multiples", 0.24234485671159295], ["distinct_strings", 0.23845478773730733], ["prev_activity", 0.23192072573024894], ["min_rest", 0.23192072573024894], ["strip", 0.22165631690045862], ["grid_size", 0.2185515827469709], ["0.5", 0.21554253263070428], ["prefix_sum", 0.21398441631515758], ["length", 0.21398441631515758], ["outcomes", 0.21386646626264874], ["is_valid", 0.2102015218712056], ["num_functions", 0.2102015218712056], ["color", 0.20848182905835372], ["cards_dict", 0.20848182905835372], ["cycle_length", 0.20115999562038717], ["max_grade", 0.2005554859534165], ["res", 0.19844372185511294], ["maze", 0.19710592431457355], ["b_cnt", 0.19669624413467668], ["a_cnt", 0.19669624413467668], ["multiple", 0.19387588536927436], ["prefix", 0.19076383018984586], ["a_1", 0.18515183147748335], ["num_worlds", 0.18210253887974823], ["h_mul", 0.18189542769038372], ["ways", 0.18140454077487606], ["next_y", 0.17001458003419792], ["next_x", 0.17001458003419792], ["# print the answer", 0.16736298479784992], ["y_1", 0.1672297460805349], ["x_2", 0.16326383002458236], ["pairs", 0.1610830465462276], ["name", 0.1593441355302667], ["time_diff", 0.15805126359546265], ["asterisks", 0.15475024944609497], ["problems", 0.15336510128515046], ["team_problems", 0.15336510128515046], ["card", 0.15316487122288552], ["str", 0.15159498896041831], ["max_sum", 0.15042823646079356], ["total_time", 0.14665916394943543], ["time_on", 0.14665916394943543], ["time_off", 0.14665916394943543], ["total_strength", 0.14660252525237147], ["n", 0.1458314634208661], ["total_yen", 0.14540691402695577], ["sum", 0.1451966506552802], ["max_stones", 0.14272876882331192], ["free", 0.14004711397435687], ["graph", 0.13956592218354583], ["7", 0.1392150011713937], ["!=", 0.13913700670887785], ["circles", 0.13568048964573648], ["toys", 0.13548520250372278], ["a_dec", 0.13382793361173026], ["max_length", 0.13162077555074828], ["longest_alternating_subsequence", 0.13162077555074828], ["prime", 0.1299637105248164], ["r", 0.12989393558550053], ["calendar", 0.12987353009859304], ["days_dict", 0.12987353009859304], ["current_time", 0.12978077262522508], ["current_position", 0.12978077262522508], ["max_", 0.12978077262522508], ["bowls", 0.12978077262522508], ["t_2", 0.12923119022884677], ["t_1", 0.12923119022884677], ["array", 0.12909591446818175], ["a_00", 0.12827924110122807], ["a_0", 0.12827924110122807], ["a_01", 0.12827924110122807], ["a_10", 0.12827924110122807], ["a_11", 0.12827924110122807], ["ab", 0.12732960976731933], ["numsetbits", 0.1249764918474226], ["total_ways", 0.12351432215363], ["xor_set", 0.12301038558321194], ["samples", 0.12090112473895727], ["min_purchase", 0.12090112473895727], ["y_2", 0.11888325919238885], ["set2", 0.11758563054590823], ["set1", 0.11758563054590823], ["numpy", 0.11709524400561828], ["rectangles", 0.11527680570460824], ["is_interesting", 0.11502382596386283], ["teams_problems", 0.11502382596386283], ["operations", 0.1148736534171641], ["grade", 0.11460313483052371], ["min_time", 0.11172339678371423], ["x_xor", 0.11166977066127536], ["x_double", 0.11166977066127536], ["_", 0.11063888471319748], ["sports_team", 0.1099518939392786], ["programming_team", 0.1099518939392786], ["a_list", 0.10913725661423022], ["w_mul", 0.10913725661423022], ["leaves_to_remove", 0.10808416741174186], ["floor", 0.10460110714952248], ["cards", 0.10424091452917686], ["value", 0.10424091452917686], ["min_hints", 0.10424091452917686], ["f_b", 0.10316323564849382], ["6", 0.10276405077415664], ["digit", 0.10252714333057382], ["votes", 0.1022780664122688], ["max_nodes", 0.10200874802051875], ["curr_x", 0.10200874802051875], ["curr_y", 0.10200874802051875], ["minutes", 0.09941023709720163], ["minutes_target", 0.09941023709720163], ["time_str", 0.09941023709720163], ["all", 0.09878419831912394], ["'#'", 0.09855296215728677], ["connected_component", 0.09855296215728677], ["r_0", 0.09837720985390465], ["# find the number of resistors needed to make an element with resistance a/b", 0.09837720985390465], ["c_bb", 0.09834812206733834], ["c_ab", 0.09834812206733834], ["c_ba", 0.09834812206733834], ["c_aa", 0.09834812206733834], ["as", 0.09750391563677195], ["new_c", 0.09713403677643152], ["new_r", 0.09713403677643152], ["winner", 0.09669768091976241], ["total_distinct_strings", 0.09538191509492293], ["not", 0.09500200099721116], ["abs", 0.09432754297040928], ["sys", 0.09428950391824638], ["max_edges", 0.09105126943987411], ["num_edges_added", 0.09105126943987411], ["num_changes", 0.09105126943987411], ["a_int", 0.08921862240782018], ["or", 0.08707244110687364], ["next_month_start", 0.08658235339906202], ["monthrange", 0.08658235339906202], ["month_start", 0.08658235339906202], ["2023", 0.08658235339906202], ["check_days", 0.08658235339906202], ["decimal_places", 0.08595235112289279], ["\"impossible\"", 0.08435327295647466], ["re", 0.08325486960100983], ["'p'", 0.0831936742898746], ["achievable", 0.0808242985673057], ["sampled_elements", 0.08060074982597153], ["visited", 0.08047155541836305], ["# check if the first letter is uppercase and the rest are lowercase", 0.07969788366889959], ["# count the number of bulbasaurs", 0.07969788366889959], ["nodes", 0.07959799060399636], ["# if the time difference is greater than the number of hours, it's not possible to prepare the contest on time", 0.07902563179773132], ["# calculate the time difference", 0.07902563179773132], ["exit", 0.07804926643620816], ["list", 0.07729237477713642], ["point", 0.07685120380307219], ["26", 0.07631675757874846], ["set", 0.0760409070375255], ["i", 0.07398204779526023], ["# calculate the time spent cooking when the stove is on", 0.07332958197471771], ["# calculate the total time spent cooking", 0.07332958197471771], ["# calculate the time spent cooking when the stove is off", 0.07332958197471771], ["volcano_loc", 0.07285052758232363], ["a_mul", 0.07275817107615348], ["in", 0.07272557991098344], ["\"o\"", 0.0720561116078279], ["a_2", 0.0720154215504147], ["h_2", 0.0720154215504147], ["h_1", 0.0720154215504147], ["b_x", 0.07168325775898644], ["a_x", 0.07168325775898644], ["b_y", 0.07168325775898644], ["a_y", 0.07168325775898644], ["# calculate the number of distinct functions", 0.07006717395706855], ["# calculate the sum of costs over all non-empty subsets", 0.06939980093241509], ["# calculate the cost of having x people", 0.06939980093241509], ["size", 0.068501085109246], ["y_s", 0.06800583201367917], ["x_s", 0.06800583201367917], ["y_0", 0.06800583201367917], ["x_0", 0.06800583201367917], ["dx", 0.06800583201367917], ["dy", 0.06800583201367917], ["# if no sequence of swapping seats leads to the desired result, print -1", 0.06756464858886088], ["# calculate the number of students that need to be persuaded", 0.06756464858886088], ["intersection", 0.06734379516008131], ["# check if i is divisible by each of the three numbers", 0.06711118323446111], ["# find the maximum lcm of three numbers not greater than n", 0.06711118323446111], ["# iterate over all numbers from 1 to n", 0.06711118323446111], ["# if i is the maximum lcm, update it", 0.06711118323446111], ["candidate", 0.06671122742562471], ["\":\"", 0.06627349139813443], ["hours", 0.06627349139813443], ["time_str_new", 0.06627349139813443], ["hours_target", 0.06627349139813443], ["# if the remainder when n is divided by i is 0, add i to the list of divisors", 0.06624595505621426], ["# calculate the maximum number of colors", 0.06624595505621426], ["# iterate over the range from 2 to the square root of n", 0.06624595505621426], ["# find the maximum length of the longest alternating subsequence", 0.06581038777537414], ["# calculate the length of the longest alternating subsequence", 0.06581038777537414], ["row", 0.06570197477152452], ["x_i", 0.06531454503067663], ["y_i", 0.06531454503067663], ["any", 0.06428220533923902], ["match", 0.06373765421210668], ["swapcase", 0.06373765421210668], ["is_mirror", 0.06373765421210668], ["\"(?i)^[a-za-z]*$\"", 0.06373765421210668], ["day2", 0.061791295142272114], ["day1", 0.061791295142272114], ["# calculate the number of ways to connect each part to the rest", 0.061757161076815], ["# calculate the total number of ways to make the figure complete", 0.061757161076815], ["destroyed", 0.061237310643543756], ["values", 0.060818976905577575], ["'l'", 0.060461737438875514], ["'u'", 0.060461737438875514], ["'r'", 0.060461737438875514], ["# find the greatest common divisor", 0.059905010085976027], ["\"b\"", 0.05918238105088963], ["\"a\"", 0.05918238105088963], ["# invert a substring", 0.058317750931009826], ["# calculate the minimum cost", 0.058317750931009826], ["# calculate the minimum number of days of rest", 0.057980181432562235], ["# check if it is possible to reassemble the binary search tree", 0.05637918097030952], ["32", 0.05583488533063768], ["# calculate the number of different integers not exceeding x that can be written on the blackboard", 0.05583488533063768], ["# calculate the xor of two numbers", 0.05583488533063768], ["reshape", 0.055646048168849896], ["stdin", 0.05518403190187311], ["intersect", 0.054497785820139054], ["", 0.054497785820139054], ["square1", 0.054497785820139054], ["square2", 0.054497785820139054], ["time", 0.054382964353446424], ["score", 0.05430648404416537], ["component", 0.05430648404416537], ["linspace", 0.054272195858294583], ["num_regions", 0.054272195858294583], ["-10", 0.054272195858294583], ["distances", 0.054272195858294583], ["# calculate the prefix sum and find the maximum length of the non-decreasing sequence", 0.053496104078789394], ["'s'", 0.0526256596729445], ["xor", 0.051630053257670505], ["# create a map to store the positions of packmen and asterisks", 0.05158341648203166], ["# calculate the distance to the nearest asterisk", 0.05158341648203166], ["# calculate the minimum time to eat all asterisks", 0.05158341648203166], ["rjust", 0.05158161782424691], ["18", 0.05158161782424691], ["# find the pair of integers a and b that maximizes s(a) + s(b)", 0.05126357166528691], ["direction", 0.04856701838821576], ["# calculate the multiples of each gem.", 0.04846897134231859], ["# calculate the total yen earned.", 0.04846897134231859], ["\"second\"", 0.04834884045988121], ["# calculate the winner of the game", 0.04834884045988121], ["\"first\"", 0.04834884045988121], ["h_diff", 0.0480102810336098], ["y_diff", 0.0480102810336098], ["a_diff", 0.0480102810336098], ["# iterate over the string to find the number of distinct strings for each prefix", 0.047690957547461464], ["# calculate the total number of distinct strings", 0.047690957547461464], ["# create a dictionary to store the number of distinct strings for each prefix", 0.047690957547461464], ["# iterate over the piles and remove stones", 0.047576256274437304], ["# calculate the maximum number of stones that can be removed from each pile", 0.047576256274437304], ["# check if takahashi can still remove stones", 0.047576256274437304], ["readline", 0.04678126544792505], ["# calculate the minimum number of cells to turn impassable", 0.04668237132478562], ["\"#\"", 0.04668237132478562], ["# create a grid of free cells", 0.04668237132478562], ["t", 0.046404173565841776], ["1000000007", 0.04606683525515138], ["'.'", 0.0457470534202763], ["# calculate the number of changes", 0.04552563471993706], ["# calculate the maximum number of edges that can be added to the graph", 0.04552563471993706], ["# calculate the number of edges that can be added in this change", 0.04552563471993706], ["# add the number of edges that can be added in this change to the total number of edges", 0.04552563471993706], ["# calculate the number of non-similar worlds", 0.04552563471993706], ["# iterate over the number of changes", 0.04552563471993706], ["# calculate the number of non-similar worlds modulo 10^9 + 7", 0.04552563471993706], ["zfill", 0.04460931120391009], ["# create the smallest beautiful integer", 0.04460931120391009], ["# find the number of digits in the smallest beautiful integer", 0.04460931120391009], ["# check if the graph can be created from a string", 0.04355586782131254], ["# create a dictionary to store the graph", 0.04355586782131254], ["min_distance", 0.04354303002045108], ["# create a dictionary to store the days of the week", 0.04329117669953101], ["# get the number of the first day of the month for the given year", 0.04329117669953101], ["# check if the first day of the next month is equal to day2", 0.04329117669953101], ["# check if the first day of the month is equal to day1", 0.04329117669953101], ["# check if the desired situation is possible", 0.04329117669953101], ["# get the number of the first day of the next month", 0.04329117669953101], ["# calculate the maximum number of bowls that can be eaten", 0.04326025754174168], ["# calculate the number of changed elements", 0.04302516189371843], ["log2", 0.04302516189371843], ["# calculate the number of bits needed to store each value", 0.04302516189371843], ["# calculate the number of distinct values", 0.04302516189371843], ["# determine the outcome for each candidate", 0.042773293252529744], ["# calculate the number of votes for each candidate", 0.042773293252529744], ["# check if the objective is achievable", 0.04041214928365285], ["# create a map to store the elements that have already been sampled", 0.04030037491298576], ["# calculate the minimum number of elements to purchase", 0.04030037491298576], ["# create a graph", 0.04023199912407743], ["# find the shortest cycle", 0.04023199912407743], ["&", 0.03891954832797584], ["# find the point that belongs to at least (n-1) given rectangles", 0.03842560190153609], ["components", 0.03620432269611024], ["profit", 0.03620432269611024], ["\"s\"", 0.03602805580391395], ["\"remove the following leaves:\"", 0.03602805580391395], ["\"t\"", 0.03602805580391395], ["'*'", 0.035510106944273985], ["# calculate the minimum number of hints", 0.034746971509725624], ["# create a dictionary to store the number of cards of each type", 0.034746971509725624], ["been", 0.034002916006839586], ["collected", 0.034002916006839586], ["# calculate the maximum number of data nodes that aroma can collect", 0.034002916006839586], ["has", 0.034002916006839586], ["# check if the node is valid and has not been collected", 0.034002916006839586], ["# iterate over the time available", 0.034002916006839586], ["splitlines", 0.03369749681187926], ["min_changes", 0.033136745699067216], ["# calculate the minimum number of digits to change", 0.033136745699067216], ["# find the connected component of the empty cells", 0.03285098738576226], ["# mark the empty cells that are part of the connected component as walls", 0.03285098738576226], ["\"no solution\"", 0.03285098738576226], ["# if there are no empty cells, exit", 0.03285098738576226], ["# calculate the number of empty cells", 0.03285098738576226], ["# construct the string", 0.03206981027530702], ["# calculate the number of 0s and 1s in the string", 0.03206981027530702], ["\"0\"", 0.03206981027530702], ["# check if the name is a mirror word", 0.03186882710605334], ["upper", 0.03186882710605334], ["^", 0.031192276625149687], ["# calculate the maximum number of destroyed spaceships", 0.030618655321771878], ["/", 0.03059724759580229], ["'c'", 0.02912943735615451], ["is_integer", 0.02865078370763093], ["0.001", 0.02865078370763093], ["# calculate the maximum number of decimal places that can be rounded down", 0.02865078370763093], ["# calculate the maximum grade that can be achieved in t seconds", 0.02865078370763093], ["# if the grade is equal to 9, round down the second decimal place", 0.02865078370763093], ["\"sjfnb\"", 0.02793782384423824], ["intersect1", 0.027248892910069527], ["# create two squares", 0.027248892910069527], ["bool_", 0.027248892910069527], ["# check if squares intersect", 0.027248892910069527], ["# calculate the distance from each point to each center", 0.027136097929147292], ["meshgrid", 0.027136097929147292], ["# count the number of regions", 0.027136097929147292], ["# create a grid of points", 0.027136097929147292], ["unique", 0.027136097929147292], ["100", 0.02462751600354176], ["bool", 0.022570992467242344], ["# find the minimum distance", 0.02177151501022554], ["t_x", 0.02177151501022554], ["t_y", 0.02177151501022554], ["# calculate the distance between adil/bera and each bottle", 0.02177151501022554], ["inf", 0.021676404434414282], ["}", 0.021404854151279913], ["{", 0.021404854151279913], ["copy", 0.021361208150813705], ["\"1\"", 0.019043920328702144], ["sqrt", 0.019025308223151238], ["items", 0.018343078128545263], ["join", 0.018213070212172246], ["repeat", 0.01810216134805512], ["# calculate the cost of deleting each vertex", 0.01810216134805512], ["# calculate the score of each connected component", 0.01810216134805512], ["connected_components", 0.01810216134805512], ["# calculate snuke's profit", 0.01810216134805512], ["//=", 0.017505347440831303], ["candidates", 0.01480391336065703], ["ceil", 0.013752986942115257], ["c", 0.01064055706303135], ["lambda", 0.009845059188647651], ["none", 0.008447611064914025], ["y1", 0.003574935350583653], ["for", 0.0010753700126003097], ["tuple", 0.0007646890294691558], ["\"aoki\"", -0.0013389850040409971], ["\"takahashi\"", -0.0013389850040409971], ["+=", -0.004015653511730455], ["networkx", -0.0043132554628918275], ["# + main(a, b, l, (ql + 1) * (2 * a + 2 * b)) + main(a, b, qr * (2 * a + 2 * b) + 1, r)", -0.004323271530467506], ["#print(ql, qr, rl, rr)", -0.004323271530467506], ["1e-9", -0.005191543142145054], ["-10000000000", -0.005243768640650937], ["functools", -0.005542527384932482], ["groupby", -0.005542527384932482], ["# dfs\u3067\u306e\u63a2\u7d22\u304c\u6e08\u3093\u3067\u3044\u308b\u304b", -0.005542527384932482], ["# dfs\u3067\u306e\u63a2\u7d22\u304c\u6e08\u3093\u3067\u3044\u308b\u304b\u5426\u304b", -0.005542527384932482], ["# dfs\u3067\u5897\u52a0\u30d1\u30b9\u63a2\u7d22,v\u958b\u59cb\u3001t\u7d42\u70b9\u3001\u7dcf\u30d5\u30ed\u30fcf", -0.005542527384932482], ["combinations", -0.005542527384932482], ["combinations_with_replacement", -0.005542527384932482], ["radians", -0.005542527384932482], ["csr_matrix", -0.005542527384932482], ["setrecursionlimit", -0.005542527384932482], ["string", -0.005542527384932482], ["deepcopy", -0.005542527384932482], ["digits", -0.005542527384932482], ["# cap\u6e1b\u5c11", -0.005542527384932482], ["bisect_left", -0.005542527384932482], ["mul", -0.005542527384932482], ["floyd_warshall", -0.005542527384932482], ["csgraph", -0.005542527384932482], ["# bfs\u3067\u6df1\u3055\u6c7a\u5b9a,s\u304cstart", -0.005542527384932482], ["reduce", -0.005542527384932482], [">>=", -0.006070973697815519], ["31", -0.006070973697815519], ["151", -0.006083589603386683], ["__next__", -0.006426073325325318], ["rstrip", -0.006426073325325318], ["# k = 0 -> 0", -0.0067840236550327105], ["# distribute", -0.0067840236550327105], ["# dp[i][j][k] = first i bits, j bases,", -0.0067840236550327105], ["# k = 1 -> 1", -0.0067840236550327105], ["# distribute odd", -0.0067840236550327105], ["# k = 1 -> 0", -0.0067840236550327105], ["#   k = 1 if maxor matches k, 0 else", -0.0067840236550327105], ["# dinic's algorithm", -0.006840885486996431], ["# imos\u3067\u5024\u3092\u5165\u308c\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u6240", -0.00745184302405217], ["zeros", -0.00745184302405217], ["# 2\u306f\u7d20\u6570\u3067\u306a\u3044\u3068\u3057\u3066\u6271\u3063\u3066", -0.00745184302405217], ["# 1\u624b\u3067\u3068\u308c\u308b\u30da\u30a2\u3092\u898b\u3064\u3051\u308b\uff1a\u6700\u5927\u30de\u30c3\u30c1\u30f3\u30b0", -0.00745184302405217], ["'0'", -0.008384938740697572], ["item", -0.008646543060935012], ["<=", -0.00878832663320909], ["'impossible'", -0.009100169461904322], ["\"thursday\"", -0.00912259628329038], ["\"friday\"", -0.00912259628329038], ["\"monday\"", -0.00912259628329038], ["\"saturday\"", -0.00912259628329038], ["\"sunday\"", -0.00912259628329038], ["\"wednesday\"", -0.00912259628329038], ["\"tuesday\"", -0.00912259628329038], ["#print(i,j,sa)", -0.009234374116482329], ["'x'", -0.009234374116482329], ["equal", -0.010383086284290109], ["belong", -0.010383086284290109], ["round", -0.010705324535734188], ["y2", -0.010874916961147592], ["scipy", -0.011085054769864964], ["sparse", -0.011085054769864964], ["'votes'", -0.011230521326017717], ["end", -0.011230521326017717], ["'candidate'", -0.011230521326017717], ["__slots__", -0.011230521326017717], ["'last_vote'", -0.011230521326017717], ["popleft", -0.011447192565321587], ["random", -0.01146836352015552], ["#\t\u272a h4wk3ye\u4e61", -0.011670734481203275], ["# ///==========main=============///", -0.011670734481203275], ["#\tquestion link", -0.011670734481203275], ["\\\n", -0.011670734481203275], ["#\tindian institute of information technology and management,gwalior", -0.011670734481203275], ["#\thttps://codeforces.com/problemset/problem/392/b", -0.011670734481203275], ["get_ints", -0.011670734481203275], ["# ///==========libraries, constants and functions=============///", -0.011670734481203275], ["#\tcoding: utf-8", -0.011670734481203275], ["#\t!/bin/env python3", -0.011670734481203275], ["#", -0.011670734481203275], ["43", -0.011670734481203275], ["#\tmohd. farhan tahir", -0.011670734481203275], ["\"\"\"\n\ncreated by shuangquan.huang at 1/17/20\n\n\"\"\"", -0.012044049753271084], ["typing", -0.012044049753271084], ["# -*- coding:utf-8 -*-", -0.012044049753271084], ["multiply_by_x", -0.012167179206773366], ["minus", -0.012167179206773366], ["seq", -0.01231053238884157], ["^=", -0.012375933780338407], ["reader", -0.012852146650650636], ["# distribute even", -0.013568047310065421], ["# new base", -0.013568047310065421], ["#print(path)    ", -0.01359318522200321], ["\"\\n\"", -0.01359318522200321], ["sep", -0.01359318522200321], ["#print(i_max)", -0.01359318522200321], ["lv", -0.013681770973992861], ["cap2", -0.013681770973992861], ["cap1", -0.013681770973992861], ["rev", -0.013681770973992861], ["backward", -0.013681770973992861], ["it", -0.013681770973992861], ["is", -0.013681770973992861], ["edge", -0.013681770973992861], ["edge2", -0.013681770973992861], ["# l\u304c1+x\u500b\u3001r\u304c1+y\u500b\u3068\u3057\u3066", -0.014205568894956186], ["# lx + ry = rest, 0<=x<=x_max, 0<=y<=y_max", -0.014205568894956186], ["|=", -0.014205568894956186], ["# (x0 + tr, y0-tl)\u3068\u3057\u3066\u89e3\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u8868\u793a\u3067\u304d\u308b", -0.014205568894956186], ["# 0 <= x0 + tr <= x_max", -0.014205568894956186], ["# d\u6841\u306e\u3082\u306e\u3092n\u500b\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u3044", -0.014205568894956186], ["int64", -0.014205568894956186], ["'d'", -0.014291221433832747], ["1000000000", -0.014470516947031298], ["#print(n)", -0.014470516947031298], ["500", -0.014470516947031298], ["sin", -0.01472159317289338], ["cos", -0.01472159317289338], ["eps", -0.015574629426435161], ["oo", -0.015574629426435161], ["rw", -0.016627582154797444], ["get_div", -0.016929249448719916], ["pre", -0.016929249448719916], ["get", -0.016929249448719916], ["min_sum", -0.016929249448719916], ["51", -0.016929249448719916], ["#print(factor(n - 1))", -0.016954388009540317], ["#print(i, cur)", -0.016954388009540317], ["#print(i)", -0.016954388009540317], ["-2", -0.017091968021265315], ["qr", -0.017293086121870024], ["ql", -0.017293086121870024], ["format", -0.01796528487661001], ["50000", -0.018200338923808644], ["build", -0.018200338923808644], ["inv", -0.018212921093446556], ["10000000000", -0.018223831002316438], ["is_legal", -0.018250768810160047], ["output", -0.018250768810160047], ["bigger_poly", -0.018250768810160047], ["xf", -0.018250768810160047], ["fractions", -0.01825508551255983], ["each", -0.018468748232964658], ["'_abc'", -0.01860570029869607], ["prev", -0.019278219975975956], ["9e9", -0.019381404410245204], ["2.", -0.019381404410245204], ["dtype", -0.020020051601878197], ["v1", -0.020522656460989292], ["15", -0.020522656460989292], ["v2", -0.020522656460989292], ["r2", -0.020766172568580217], ["o2", -0.020766172568580217], ["#print(arr, ans)", -0.021543431680472753], ["x", -0.021967506887684153], ["ite", -0.022170109539729928], ["sol", -0.02226414624692152], ["team_b", -0.02226414624692152], ["team_a", -0.02226414624692152], ["add_bs", -0.02226414624692152], ["conversion_ordered_by_a", -0.02226414624692152], ["b_ordered_by_a", -0.02226414624692152], ["rest_of_bs", -0.02226414624692152], ["b_sorted", -0.02226414624692152], ["prefix_sums_a", -0.02226414624692152], ["convert", -0.02226414624692152], ["conversions", -0.02226414624692152], ["prefix_a", -0.02226414624692152], ["conversion_sorted", -0.02226414624692152], ["reversed", -0.02226414624692152], ["vals", -0.02226414624692152], ["qq", -0.022355529072156516], ["state", -0.022461042652035433], ["beats", -0.022461042652035433], ["low", -0.022461042652035433], ["\"inf\"", -0.02266888340686462], ["digraph", -0.022768180803419445], ["minimum_cut_value", -0.022768180803419445], ["'t'", -0.022768180803419445], ["'o'", -0.022768180803419445], ["dinic", -0.022894385130643173], [">>", -0.02293672704031104], ["pi", -0.022944230124119173], ["\".\"", -0.023291363918918215], ["#print(ar)", -0.023291363918918215], ["get_array", -0.02334146896240655], ["sorted", -0.02383038917328375], ["max_flow", -0.024023920041292127], ["exp", -0.024283894791262077], ["result", -0.024334358413546732], ["first_nonzero", -0.024334358413546732], ["bools", -0.024334358413546732], ["class", -0.024623672335503208], ["__init__", -0.024623672335503208], ["got", -0.02539387417307987], ["sm", -0.02539387417307987], ["counted", -0.02539387417307987], ["how_many", -0.02539387417307987], ["arr1", -0.02539387417307987], ["accumulate", -0.02570441210003049], ["alp", -0.025957715710725277], ["inter", -0.025957715710725277], ["phi", -0.025957715710725277], ["big", -0.026218843203254683], ["'alexander'", -0.02628566985136981], ["':'", -0.02628566985136981], ["\"%02d:%02d\"", -0.02628566985136981], ["23", -0.02628566985136981], ["bisect_right", -0.02633815852567865], ["check", -0.02633815852567865], ["dfs", -0.026696365659188943], ["bink", -0.027136094620130842], ["flg", -0.02730050838571296], ["forward", -0.027363541947985723], ["edge1", -0.027363541947985723], ["deq", -0.027363541947985723], ["find", -0.02743466272495891], ["sa", -0.027703122349446985], ["y_max", -0.02841113778991237], ["k_max", -0.02841113778991237], ["k_min", -0.02841113778991237], ["x_max", -0.02841113778991237], ["type_3", -0.02841113778991237], ["type_2", -0.02841113778991237], ["mid", -0.02841113778991237], ["n_min", -0.02841113778991237], ["n_max", -0.02841113778991237], ["f\"{x}\\n\"", -0.02893826959116444], ["#     if b[k]>0:", -0.02990310096239416], ["# for k in range(mv):", -0.02990310096239416], ["#         print(k, b[k], a[k])", -0.02990310096239416], ["0x3b9aca07", -0.030320743664278685], ["500000004", -0.030320743664278685], ["lc", -0.030354868489077595], ["dict", -0.030616080925351015], ["product", -0.031140463632672744], ["prefix_arr", -0.031462611843905613], ["ppl_indices", -0.03339621937038227], ["top", -0.03339621937038227], ["converted", -0.03339621937038227], ["conversion_gain", -0.03339621937038227], ["place", -0.033691563978053146], ["people", -0.033691563978053146], ["needed", -0.033691563978053146], ["1000", -0.033783515725077554], ["factor", -0.033908776019080634], ["bfs", -0.03454334458439403], ["calc", -0.034563098675242966], ["3e5", -0.034563098675242966], ["defaultdict", -0.034779837111415524], ["1.", -0.03634481480456337], [".25", -0.03634481480456337], ["a0_arr", -0.03640067784761729], ["a1_arr", -0.03640067784761729], ["cn", -0.03642584218689311], ["ln", -0.03642584218689311], ["polynomial", -0.036501537620320094], ["10000000000000000", -0.037074893887385746], ["itr", -0.03725921512026085], ["is_prime", -0.03725921512026085], ["start", -0.03777997296555884], ["iter", -0.03833784601884057], ["by", -0.03876280882049041], ["bx", -0.03876280882049041], ["tx", -0.03876280882049041], ["ty", -0.03876280882049041], ["ax", -0.03876280882049041], ["ay", -0.03876280882049041], ["fr", -0.03946507466162861], ["d2", -0.039507237788517974], ["d1", -0.039507237788517974], ["read", -0.04004269616291214], ["i_max", -0.040779555666009625], ["val_nxt", -0.040779555666009625], ["i_prv", -0.040779555666009625], ["factorial", -0.04082945377785998], ["o1", -0.041532345137160434], ["deque", -0.04184696719642005], ["b2", -0.041950149125207496], ["odd", -0.042574375583582375], ["arange", -0.04261670668486855], ["maximum", -0.04261670668486855], ["type_1", -0.04261670668486855], ["reverse", -0.043436875477047485], ["=", -0.04360547711637467], ["ba", -0.04415203606202673], ["source", -0.04471105814431303], ["sink", -0.04471105814431303], ["voted", -0.044922085304070866], ["seats", -0.044922085304070866], ["998244353", -0.045340055971485715], ["bit_length", -0.04587345408062208], ["ok", -0.04617187058241165], ["zip", -0.04652736829638696], ["r1", -0.04672388827930549], ["y3", -0.04719391776585843], ["y4", -0.04719391776585843], ["b1", -0.04719391776585843], ["x4", -0.04719391776585843], ["x3", -0.04719391776585843], ["suffix_arr", -0.04719391776585843], ["log", -0.047641811270890795], ["k2", -0.0477417549344845], ["node", -0.048567789582524154], ["add", -0.04869861374642241], ["isprime", -0.05086316402862095], ["e", -0.052147232941227535], ["59", -0.05257133970273962], ["bp1", -0.05273389924251684], ["ans2", -0.05273389924251684], ["bp2", -0.05273389924251684], ["'think'", -0.05315987381415278], ["pop", -0.0535201664681433], ["xx", -0.05451722220684505], ["center", -0.05451722220684505], ["bisect", -0.05454098417797362], ["a11", -0.05460101677142592], ["a00", -0.05460101677142592], ["new_coef", -0.054752306430480145], ["'4'", -0.05486932544991782], ["ny", -0.05561234083107861], ["b_size", -0.05566036561730381], ["cand", -0.05615260663008857], ["last_vote", -0.05615260663008857], ["float", -0.05643976956851369], ["t_min", -0.05682227557982474], ["t_max", -0.05682227557982474], ["total", -0.05682227557982474], ["heapq", -0.056897788127699196], ["base", -0.0573418176007776], ["iowrite", -0.05787653918232888], ["matrix", -0.058353672406016376], ["sub", -0.058423878343604976], ["ps1", -0.05947098284307718], ["ps2", -0.05947098284307718], ["ev", -0.05961474419241736], ["sid", -0.05980620192478832], ["fid", -0.05980620192478832], ["elif", -0.06032793723689013], ["nx", -0.060613687535342735], ["answer", -0.06070549236870303], ["cut", -0.06070973697815519], ["301", -0.061987237893891094], ["'second'", -0.062665606658906], ["'first'", -0.062665606658906], ["write", -0.06313460477463012], ["stdout", -0.06313460477463012], ["dif", -0.06365567324597934], ["flow", -0.06372850394622734], ["itertools", -0.06393953385959944], ["nxt", -0.06426073325325317], ["4", -0.06538357556162681], ["''", -0.06573519644730604], ["5", -0.06592628841976925], ["cc", -0.06596765610168939], ["\"\"", -0.06612838888939812], ["od", -0.06706658721646953], ["' '", -0.06713983390247522], ["max_n", -0.06781755203816127], ["divs", -0.06781755203816127], ["'''\ncreated on may 4, 2016\n@author: md. rezwanul haque\n'''", -0.06789374011451682], ["-1", -0.06809565769798799], ["nonlocal", -0.06912619735048593], ["inverse", -0.06912619735048593], ["len", -0.06949347340629049], ["nx2", -0.0701849936453674], ["ny2", -0.0701849936453674], ["q2", -0.0701849936453674], ["del", -0.07033622763134706], ["l0", -0.07102784447478092], ["r0", -0.07102784447478092], ["edges", -0.0722642985196265], ["'rgbyw'", -0.07274366333137165], ["1024", -0.07274366333137165], ["90", -0.07274366333137165], ["pos", -0.07282701112790281], ["__author__", -0.0734392405551963], ["solve", -0.07349437299485255], ["bin", -0.07351517361353921], ["y0", -0.07366669487837162], ["\" \"", -0.07404458834462994], ["_max", -0.07414978777477149], ["dist", -0.07417100426110623], ["s0", -0.07442280119478428], ["fact", -0.07618162251923961], ["hypot", -0.07678796322064102], ["tot", -0.07722237665335842], ["top_k", -0.07792451186422532], ["ordered_by_a", -0.07792451186422532], ["even", -0.07821584190049301], ["extra", -0.078613649282124], ["data", -0.08027854464108862], ["reverse_cost", -0.08102515756692615], ["count_components", -0.08102515756692615], ["9", -0.08121281856518342], ["sft", -0.08155911133201925], ["a10", -0.08190152515713889], ["1e9", -0.08203901493694842], ["ss", -0.0831925864218229], ["cap", -0.08379327807530233], ["c2", -0.084075006176343], ["rest", -0.0852334133697371], ["__starting_point", -0.08572515895695096], ["x0", -0.0867982834252676], ["ioread", -0.08681480877349333], ["inserts", -0.08681480877349333], ["x2", -0.08698296107090828], ["==", -0.08716833037493923], ["a2", -0.08743771199985367], ["l_cnd", -0.08763581751540749], ["key", -0.0889875084878866], ["theycan", -0.08920647426461575], ["ps", -0.08920647426461575], ["rp", -0.08920647426461575], ["tmp", -0.08954595001902477], ["pos2", -0.08970930288718246], ["a01", -0.0910016946190432], ["a0", -0.0910016946190432], ["data2", -0.09174690816124416], ["replace", -0.09245391112253501], ["heappush", -0.09370485572818427], ["heappop", -0.09370485572818427], ["min", -0.09605041334981333], ["m3", -0.09690702205122602], ["m1", -0.09690702205122602], ["val", -0.09726971731850866], ["coef", -0.09733743365418693], ["x1", -0.09737585553438889], ["\"cslnb\"", -0.09760965843052057], ["true", -0.09763439394292212], ["grundy", -0.09804950306244259], ["first", -0.09891061432570174], ["second", -0.09891061432570174], ["u", -0.09932453856564115], ["c1", -0.10029470961681401], ["'1'", -0.10131750481073779], ["20", -0.10437853736979208], ["continue", -0.10486430309197387], ["%=", -0.1057007241225575], ["num1", -0.10631974762830557], ["num2", -0.10631974762830557], ["diff", -0.10631974762830557], ["rr", -0.10808178826168766], ["extend", -0.10916193107692251], ["collections", -0.10984597843061261], ["union", -0.11010456148869872], ["index", -0.11132696650039962], ["rl", -0.11240505979215516], ["last", -0.11375993626297928], ["degree", -0.11558820246434699], ["stack", -0.11575307836465776], ["connectsto", -0.11575307836465776], ["rows_and_columns", -0.11575307836465776], ["current", -0.11575307836465776], ["dis", -0.11576413557625038], ["cnd", -0.11684775668720995], ["'9'", -0.11958419930238756], ["dish", -0.11970977803189867], ["0.", -0.11982484851583063], ["invert_cost", -0.12153773635038924], ["a_size", -0.12245280435806837], ["q1", -0.12282373887939292], ["h2", -0.12282373887939292], ["aa", -0.12480663525347443], ["tag", -0.12550645287187376], ["8", -0.1286631784093676], ["pow", -0.13066521371835516], ["main", -0.13348574588853443], ["best", -0.13413715453246147], ["path", -0.1359318522200321], ["capacity", -0.13660908482051667], ["'no'", -0.13686121972886012], ["counter", -0.1399974336593943], ["frm", -0.14004881377443928], ["h1", -0.1403699872907348], ["g", -0.1405483591050821], ["enumerate", -0.14345819704377138], ["seen", -0.14469134795582222], ["packmans", -0.1448598718912326], ["states", -0.1459967772382303], ["li", -0.14605969585901246], ["cs", -0.14867745710769295], ["mypos", -0.14867745710769295], ["best_res", -0.14951550481197076], ["p2", -0.15183417392746223], ["other", -0.1518646875361767], ["368131125", -0.15234236101303603], ["false", -0.15297488366710862], ["'b'", -0.15333144673408736], ["div", -0.15461147712463047], ["60", -0.15483709433094797], ["fac", -0.1555339440385934], ["<<", -0.15569072882495386], ["mark", -0.15657264679252408], ["p1", -0.156633222031077], ["timem", -0.15771401910821886], ["stars", -0.1580289511540719], ["to", -0.15912336581825592], ["days", -0.15947962144245836], ["food", -0.15961303737586485], ["import", -0.16043307120969058], ["line", -0.1620503151338523], ["in_zero_component", -0.1620503151338523], ["'a'", -0.1629083143618767], ["flag", -0.1630894576831751], ["ttt", -0.1641178644731432], ["prime_factor", -0.1663851728436458], ["rep", -0.1697693887789332], ["gcd", -0.17079880728551047], ["first_to_eat", -0.1711980304169112], ["m0", -0.1744326396922068], ["m2", -0.1744326396922068], ["'yes'", -0.17696221342782517], ["'01'", -0.17907259467927236], ["'10'", -0.17907259467927236], ["mv", -0.17941860577436491], ["97", -0.18490782224507002], ["ans1", -0.18639546980495952], ["w", -0.18678769766588443], ["one", -0.18756327368359219], ["dp", -0.18878633994037922], ["a1", -0.18937273629601942], ["12", -0.18942165747242679], [">", -0.19025045719478176], ["append", -0.19121340702788553], ["bb", -0.19200072756414813], ["level", -0.19331349212183283], ["t1", -0.19661214248304212], ["add_edge", -0.19782540520703687], ["3", -0.20011720916969059], ["*=", -0.20086832683291084], ["<", -0.20825375636242724], ["10", -0.2107295701142104], ["0", -0.2110842438832622], [",", -0.21218819041061865], ["# made by mostafa_khaled", -0.21366886226956594], ["while", -0.21785736863871827], [">=", -0.2181302826283111], ["cur", -0.2200243178176892], ["quit", -0.2220950157503756], ["pts", -0.22244936332431445], ["k1", -0.23090362729340158], [";", -0.235637135162671], ["negbig", -0.23596958882929217], ["from", -0.23661810293013555], ["h", -0.2380801481970838], ["v", -0.23875383246348725], ["tummy", -0.23941955606379733], ["num_components", -0.24307547270077848], ["o", -0.2455672667505898], ["max", -0.2623010543631839], ["now", -0.26335937446117036], ["chr", -0.26515195187103213], ["idx", -0.26716975496305817], ["else", -0.2744935929429753], ["def", -0.2758830658073192], ["t2", -0.2769178204654908], ["b", -0.27951775079723057], ["el", -0.2835229111332639], ["-=", -0.28789842651556663], ["timeh", -0.2891423683650679], ["ar", -0.2895159559568128], ["mn", -0.2909746533254866], ["+", -0.29118347790333243], ["//", -0.29987104893024513], ["%", -0.30652926008803666], ["f", -0.31184574009710864], ["balls", -0.315343082733793], ["m", -0.3167616712075249], ["math", -0.319292857217895], ["cnt", -0.32441341758626696], ["break", -0.32553481715274446], ["if", -0.34291333723129624], ["q", -0.37082344518233645], ["arr", -0.37355651350270525], ["l", -0.41110528296751625], ["mod", -0.4229790273318758], ["p", -0.4436629449159494], ["1", -0.4591910311435809], ["ans", -0.4820352189691836], ["2", -0.4973903309762455], ["a", -0.5030708536846374], ["self", -0.5072432083395841], ["-", -0.5418277111330376], ["return", -0.5470778039509975], ["count", -0.6142221820023057], ["*", -0.6949994483130068], ["#DEDENT#", -0.6958936482548485], ["#INDENT#", -0.6958936482548485], ["j", -0.7114121395091629], [":", -0.8381995388703765], ["k", -0.8795252973678103], ["d", -0.8958710200962392], ["[", -1.031736010807694], ["]", -1.0460827479592254]]}