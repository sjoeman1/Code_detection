{"columns": ["feature_names", "importances"], "data": [["( ) ) #NEWLINE#", 0.1560540795326233], ["n ,", 0.03738506883382797], [") .", 0.03096000850200653], ["<", 0.02877642959356308], ["from", 0.02591654472053051], ["n =", 0.02545693702995777], ["( ) .", 0.024880671873688698], ["*", 0.02305412106215954], ["#NEWLINE# while", 0.022772403433918953], ["if (", 0.02272321656346321], ["( )", 0.022669324651360512], ["s = input", 0.021568002179265022], ["= 0", 0.019546212628483772], ["2 *", 0.01865306682884693], [") ) )", 0.018651658669114113], ["[", 0.016553444787859917], ["( ) #NEWLINE#", 0.01608218438923359], ["#NEWLINE# #DEDENT# print", 0.01534335408359766], ["#COMMENT#", 0.014878274872899055], ["#NEWLINE# print", 0.013600410893559456], ["( int", 0.013352135196328163], ["while", 0.013061626814305782], ["2", 0.012105602771043777], ["#NEWLINE# #DEDENT#", 0.012089946307241917], ["for i in range", 0.012011485174298286], [") ) #NEWLINE# if", 0.011728281155228615], [") #NEWLINE# #DEDENT#", 0.01135446410626173], ["input ( ) )", 0.011152378283441067], ["%", 0.010998276993632317], ["( n )", 0.010983027517795563], ["0 #NEWLINE# for i", 0.010905581526458263], [") #NEWLINE# #COMMENT#", 0.010704289190471172], ["+ 1 ,", 0.010350535623729229], [") #NEWLINE# #DEDENT# else", 0.010311601683497429], ["int", 0.010130622424185276], ["( map", 0.0100766122341156], ["#COMMENT# #NEWLINE# print", 0.009830574505031109], ["in range", 0.009729381650686264], [") ) #NEWLINE#", 0.009550398215651512], [",", 0.00950292032212019], ["#NEWLINE#", 0.009385872632265091], ["0 ]", 0.009324287064373493], ["-", 0.009102923795580864], [") :", 0.008941576816141605], [") + 1", 0.008657615631818771], ["= map", 0.008636116981506348], ["c", 0.008604995906352997], ["#DEDENT# print", 0.00815664604306221], ["range", 0.008084254339337349], [") ) :", 0.00801379606127739], ["( map ( int", 0.00801145564764738], ["( n", 0.0077626365236938], ["#INDENT# print", 0.007506173104047775], ["split ( ) )", 0.0063895005732774734], ["2 ,", 0.00626210356131196], ["int (", 0.00619115075096488], [") #NEWLINE#", 0.0061871507205069065], [": #INDENT#", 0.0059616160579025745], ["range ( 1 ,", 0.005843602120876312], ["#INDENT# a", 0.0058419848792254925], ["1 ,", 0.005743052810430527], ["[ i ]", 0.005512737203389406], ["a", 0.0052819098345935345], ["for", 0.004817046225070953], ["#DEDENT# #COMMENT#", 0.004574956838041544], ["+", 0.004505728371441364], ["a )", 0.004388125147670507], ["range ( 1", 0.004334263503551483], ["1", 0.004221390001475811], ["\"no\" )", 0.004217496141791344], ["range ( n )", 0.004082698840647936], ["+= a [", 0.0], [", 0 )", 0.0], [", 0", 0.0], ["+= 1 #NEWLINE#", 0.0], [") +", 0.0], [", -1 )", 0.0], [", -1", 0.0], ["+= a", 0.0], [", (", 0.0], [", 'b'", 0.0], ["+= 1", 0.0], [") + 1 )", 0.0], [") ,", 0.0], [") , (", 0.0], ["+= 1 #NEWLINE# #DEDENT#", 0.0], ["+= a [ i", 0.0], [", 'a'", 0.0], [", 1", 0.0], [", 0 ,", 0.0], ["+ b", 0.0], [": #INDENT# for", 0.0], [", m = map", 0.0], [", m =", 0.0], [", m", 0.0], [", k =", 0.0], [", k", 0.0], [", j", 0.0], [", input ( )", 0.0], [") ) : #INDENT#", 0.0], [", input (", 0.0], [", input", 0.0], [", i )", 0.0], [", i", 0.0], [", c", 0.0], [", b =", 0.0], [") *", 0.0], [", b )", 0.0], [", b", 0.0], [", a", 0.0], [", [", 0.0], [", 2", 0.0], ["+=", 0.0], [") - 1", 0.0], ["+ 2", 0.0], [") for", 0.0], ["* b", 0.0], ["* a", 0.0], ["* (", 0.0], [") for x in", 0.0], [") for x", 0.0], [") : #COMMENT# #NEWLINE#", 0.0], [") for i in", 0.0], [") : #INDENT#", 0.0], [") for i", 0.0], [") ] for", 0.0], [") -", 0.0], [") : #INDENT# a", 0.0], [") ] =", 0.0], [") ] #NEWLINE# for", 0.0], [") ] #NEWLINE#", 0.0], [") ]", 0.0], [") ==", 0.0], [") : #INDENT# for", 0.0], [") : #INDENT# if", 0.0], [") : #INDENT# print", 0.0], ["* n", 0.0], ["**", 0.0], [") : #COMMENT#", 0.0], [": #INDENT# if", 0.0], ["+ 1 ] [", 0.0], [") : #INDENT# return", 0.0], ["+ 1 ]", 0.0], [": #INDENT# if a", 0.0], ["+ 1 ) :", 0.0], ["+ 1 ) #NEWLINE#", 0.0], ["+ 1 )", 0.0], ["+ 1 #NEWLINE#", 0.0], ["+ 1", 0.0], ["+ (", 0.0], [") . split", 0.0], ["** 9 +", 0.0], [") . split (", 0.0], ["** 9", 0.0], [") . strip", 0.0], [") . strip (", 0.0], [") //", 0.0], [": #INDENT# for j", 0.0], [") // 2", 0.0], [", mod", 0.0], ["- 1 #NEWLINE#", 0.0], [", n", 0.0], ["1 )", 0.0], ["1 , n +", 0.0], ["1 , n", 0.0], ["1 ) ]", 0.0], ["1 ) : #INDENT#", 0.0], ["1 ) :", 0.0], ["1 ) //", 0.0], ["1 ) *", 0.0], ["1 ) ) #NEWLINE#", 0.0], [": #INDENT# break", 0.0], ["1 ) )", 0.0], ["1 ) #NEWLINE# #DEDENT#", 0.0], ["1 ) #NEWLINE#", 0.0], ["1 #NEWLINE# for", 0.0], ["1 : #INDENT#", 0.0], ["1 #NEWLINE# #DEDENT# #DEDENT#", 0.0], ["1 #NEWLINE# #DEDENT#", 0.0], ["1 #NEWLINE#", 0.0], ["0 for", 0.0], ["0 and", 0.0], ["0 ] [", 0.0], ["0 ] =", 0.0], ["0 ] *", 0.0], ["0 ] )", 0.0], ["0 ] #NEWLINE#", 0.0], ["0 : #INDENT#", 0.0], ["0 :", 0.0], ["1 :", 0.0], ["1 ]", 0.0], [", n )", 0.0], ["2 : #INDENT#", 0.0], [": #INDENT# a [", 0.0], [": #INDENT# a", 0.0], [": #COMMENT# #NEWLINE# #INDENT#", 0.0], [": #COMMENT# #NEWLINE#", 0.0], [": #COMMENT#", 0.0], [":", 0.0], ["9", 0.0], ["7", 0.0], ["6", 0.0], ["3 )", 0.0], ["3", 0.0], ["2 ]", 0.0], ["2 :", 0.0], ["1 ] #NEWLINE#", 0.0], [": #INDENT# ans =", 0.0], ["2 ) #NEWLINE#", 0.0], ["2 )", 0.0], ["2 #NEWLINE#", 0.0], ["10 ** 9 +", 0.0], ["10 ** 9", 0.0], ["10 **", 0.0], ["10", 0.0], ["1 ] [ j", 0.0], ["1 ] [", 0.0], ["1 ] ) #NEWLINE#", 0.0], ["1 ] )", 0.0], ["0 , 0", 0.0], ["0 ,", 0.0], ["0 ) #NEWLINE#", 0.0], ["- 1 ] [", 0.0], ["-= 1 #NEWLINE#", 0.0], ["-= 1", 0.0], ["-=", 0.0], ["-1 ]", 0.0], ["-1 ,", 0.0], ["-1 ) #NEWLINE# #DEDENT#", 0.0], ["-1 ) #NEWLINE#", 0.0], ["-1 )", 0.0], ["-1", 0.0], [") ) ) #NEWLINE#", 0.0], ["- i", 0.0], ["- 2", 0.0], ["- 1 ]", 0.0], ["0 )", 0.0], ["- 1 ,", 0.0], ["- 1 )", 0.0], [": #INDENT# ans", 0.0], ["- 1", 0.0], [", y", 0.0], [", x", 0.0], [", w", 0.0], [", t", 0.0], [", s", 0.0], [", n + 1", 0.0], [", n +", 0.0], [": #INDENT# continue #NEWLINE#", 0.0], [".", 0.0], [": #INDENT# continue", 0.0], [". append", 0.0], [". append (", 0.0], ["0 #NEWLINE# for", 0.0], ["0 #NEWLINE# #DEDENT#", 0.0], ["0 #NEWLINE#", 0.0], ["0", 0.0], ["// 2", 0.0], ["//", 0.0], ["/", 0.0], [". strip ( )", 0.0], [". strip (", 0.0], [". strip", 0.0], [". stdin . readline", 0.0], [". stdin .", 0.0], [". stdin", 0.0], [". split ( )", 0.0], [". split (", 0.0], [". split", 0.0], [". sort ( )", 0.0], [": #INDENT# break #NEWLINE#", 0.0], [". sort (", 0.0], [". sort", 0.0], [". readline ( )", 0.0], [". readline (", 0.0], [". readline", 0.0], [". append ( [", 0.0], [". append ( (", 0.0], ["} #NEWLINE#", 0.0], [") #NEWLINE# for", 0.0], [") ) #NEWLINE# s", 0.0], ["#NEWLINE# #DEDENT# else", 0.0], ["#NEWLINE# ans [", 0.0], ["#NEWLINE# ans =", 0.0], ["#NEWLINE# ans", 0.0], ["#NEWLINE# a = list", 0.0], ["#NEWLINE# a =", 0.0], ["#NEWLINE# a", 0.0], ["#NEWLINE# #INDENT#", 0.0], ["#NEWLINE# #DEDENT# return", 0.0], ["#NEWLINE# #DEDENT# print (", 0.0], ["#NEWLINE# #DEDENT# if", 0.0], ["#NEWLINE# #DEDENT# for", 0.0], ["#NEWLINE# #DEDENT# else :", 0.0], ["#NEWLINE# #DEDENT# elif", 0.0], [") ) #NEWLINE# a", 0.0], ["#NEWLINE# #DEDENT# def", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# print", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# if", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# #DEDENT#", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# #COMMENT#", 0.0], ["#NEWLINE# #DEDENT# #DEDENT#", 0.0], ["#NEWLINE# #DEDENT# #COMMENT# #NEWLINE#", 0.0], ["#NEWLINE# #DEDENT# #COMMENT#", 0.0], ["#NEWLINE# #COMMENT# #NEWLINE# print", 0.0], ["#NEWLINE# #COMMENT# #NEWLINE# for", 0.0], ["#NEWLINE# #COMMENT# #NEWLINE# #COMMENT#", 0.0], ["#NEWLINE# #COMMENT# #NEWLINE#", 0.0], ["#NEWLINE# ans [ (", 0.0], ["#NEWLINE# b", 0.0], ["#NEWLINE# b =", 0.0], ["#NEWLINE# c", 0.0], ["#NEWLINE# return", 0.0], ["#NEWLINE# q", 0.0], ["#NEWLINE# print (", 0.0], ["#NEWLINE# p =", 0.0], ["#NEWLINE# p", 0.0], ["#NEWLINE# n = int", 0.0], ["#NEWLINE# n =", 0.0], ["#NEWLINE# n ,", 0.0], ["#NEWLINE# n", 0.0], ["#NEWLINE# import", 0.0], ["#NEWLINE# if", 0.0], ["#NEWLINE# g", 0.0], ["#NEWLINE# from", 0.0], ["#NEWLINE# for j in", 0.0], ["#NEWLINE# for j", 0.0], ["#NEWLINE# for i in", 0.0], ["#NEWLINE# for i", 0.0], ["#NEWLINE# for _ in", 0.0], ["#NEWLINE# for _", 0.0], ["#NEWLINE# for", 0.0], ["#NEWLINE# f", 0.0], ["#NEWLINE# def", 0.0], ["#NEWLINE# d =", 0.0], ["#NEWLINE# d", 0.0], ["#NEWLINE# c =", 0.0], ["#NEWLINE# #COMMENT#", 0.0], ["#INDENT# x", 0.0], ["#INDENT# s", 0.0], ["#DEDENT# elif", 0.0], ["#DEDENT# ans", 0.0], ["#DEDENT# #DEDENT# return", 0.0], ["#DEDENT# #DEDENT# print (", 0.0], ["#DEDENT# #DEDENT# print", 0.0], ["#DEDENT# #DEDENT# if", 0.0], ["#DEDENT# #DEDENT# else :", 0.0], ["#DEDENT# #DEDENT# else", 0.0], ["#DEDENT# #DEDENT# #DEDENT#", 0.0], ["#DEDENT# #DEDENT# #COMMENT# #NEWLINE#", 0.0], ["#DEDENT# #DEDENT# #COMMENT#", 0.0], ["#DEDENT# #DEDENT#", 0.0], ["#DEDENT# #COMMENT# #NEWLINE#", 0.0], ["#DEDENT#", 0.0], ["#COMMENT# #NEWLINE# print (", 0.0], ["#COMMENT# #NEWLINE# if", 0.0], ["#COMMENT# #NEWLINE# for", 0.0], ["#COMMENT# #NEWLINE# #INDENT#", 0.0], ["#COMMENT# #NEWLINE# #COMMENT# #NEWLINE#", 0.0], ["#COMMENT# #NEWLINE# #COMMENT#", 0.0], ["#COMMENT# #NEWLINE#", 0.0], ["\"yes\" )", 0.0], ["\"yes\"", 0.0], ["\"no\" ) #NEWLINE#", 0.0], ["\"no\"", 0.0], ["!= 0", 0.0], ["#DEDENT# def", 0.0], ["#DEDENT# else", 0.0], ["#INDENT# return", 0.0], ["#DEDENT# else :", 0.0], ["#INDENT# print ( -1", 0.0], ["#INDENT# print (", 0.0], ["#INDENT# if a [", 0.0], ["#INDENT# if a", 0.0], ["#INDENT# if", 0.0], ["#INDENT# for j in", 0.0], ["#INDENT# for j", 0.0], ["#INDENT# for", 0.0], ["#INDENT# continue #NEWLINE# #DEDENT#", 0.0], ["#INDENT# continue #NEWLINE#", 0.0], ["#INDENT# continue", 0.0], ["#INDENT# break #NEWLINE# #DEDENT#", 0.0], ["#INDENT# break #NEWLINE#", 0.0], ["#INDENT# break", 0.0], ["#INDENT# ans =", 0.0], ["#INDENT# ans", 0.0], ["#INDENT# a [", 0.0], ["#INDENT#", 0.0], ["#DEDENT# return", 0.0], ["#DEDENT# print (", 0.0], ["#DEDENT# if", 0.0], ["#DEDENT# for i in", 0.0], ["#DEDENT# for i", 0.0], ["#DEDENT# for", 0.0], ["#DEDENT# else : #INDENT#", 0.0], ["#NEWLINE# return #NEWLINE#", 0.0], ["#NEWLINE# return #NEWLINE# #DEDENT#", 0.0], ["#NEWLINE# s", 0.0], ["( x )", 0.0], ["( t", 0.0], ["( self", 0.0], ["( s )", 0.0], ["( s", 0.0], ["( r", 0.0], ["( p", 0.0], ["( n - 1", 0.0], ["( n -", 0.0], ["( n ,", 0.0], ["( n + 1", 0.0], ["( n +", 0.0], ["( n ) ]", 0.0], ["( n ) :", 0.0], ["( map (", 0.0], ["( m ) :", 0.0], ["( m )", 0.0], ["( m", 0.0], ["( len (", 0.0], ["( len", 0.0], ["( l", 0.0], ["( k", 0.0], ["( int , input", 0.0], ["( int ,", 0.0], ["( int (", 0.0], ["( input ( )", 0.0], ["( x", 0.0], ["( x ,", 0.0], ["( input", 0.0], [")", 0.0], [") ) #NEWLINE# #DEDENT#", 0.0], [") ) #NEWLINE# #COMMENT#", 0.0], [") )", 0.0], [") % mod #NEWLINE#", 0.0], [") % mod", 0.0], [") %", 0.0], [") #NEWLINE# x", 0.0], [") #NEWLINE# s =", 0.0], [") #NEWLINE# s", 0.0], [") #NEWLINE# return #NEWLINE#", 0.0], [") #NEWLINE# return", 0.0], [") #NEWLINE# print (", 0.0], [") #NEWLINE# print", 0.0], [") #NEWLINE# if", 0.0], [") #NEWLINE# for i", 0.0], [": #INDENT# print (", 0.0], [") #NEWLINE# b", 0.0], [") #NEWLINE# a =", 0.0], [") #NEWLINE# a", 0.0], [") #NEWLINE# #DEDENT# if", 0.0], [") #NEWLINE# #DEDENT# elif", 0.0], [") #NEWLINE# #DEDENT# def", 0.0], [") #NEWLINE# #DEDENT# #DEDENT#", 0.0], [") #NEWLINE# #DEDENT# #COMMENT#", 0.0], [") #NEWLINE# #COMMENT# #NEWLINE#", 0.0], ["( input (", 0.0], ["( i ,", 0.0], ["#NEWLINE# s =", 0.0], ["( -1", 0.0], ["( ) ] #NEWLINE#", 0.0], ["( ) ]", 0.0], ["( ) : #INDENT#", 0.0], ["( ) :", 0.0], ["( ) . strip", 0.0], ["( ) . split", 0.0], ["( ) ) )", 0.0], ["( ) )", 0.0], ["( ) #NEWLINE# #DEDENT#", 0.0], ["( (", 0.0], ["( \"yes\"", 0.0], ["( \"no\" ) #NEWLINE#", 0.0], ["( \"no\" )", 0.0], ["( \"no\"", 0.0], ["(", 0.0], ["'b' ,", 0.0], ["'b'", 0.0], ["'a' ,", 0.0], ["'a'", 0.0], ["% mod #NEWLINE# #DEDENT#", 0.0], ["% mod #NEWLINE#", 0.0], ["% mod", 0.0], ["% 2", 0.0], ["#NEWLINE# x =", 0.0], ["#NEWLINE# x", 0.0], ["( *", 0.0], ["( -1 )", 0.0], ["( i +", 0.0], ["( -1 ) #NEWLINE#", 0.0], ["( i )", 0.0], ["( i", 0.0], ["( h", 0.0], ["( f", 0.0], ["( d", 0.0], ["( c", 0.0], ["( b", 0.0], ["( ans ) #NEWLINE#", 0.0], ["( ans )", 0.0], ["( ans", 0.0], ["( a [ i", 0.0], ["( a [", 0.0], ["( a , b", 0.0], ["( a ,", 0.0], ["( a ) #NEWLINE#", 0.0], ["( a )", 0.0], ["( a", 0.0], ["( [", 0.0], ["( 2 ,", 0.0], ["( 2", 0.0], ["( 1 , n", 0.0], ["( 1 ,", 0.0], ["( 1", 0.0], ["( 0 ,", 0.0], ["( 0", 0.0], [": #INDENT# print", 0.0], ["= 1 #NEWLINE#", 0.0], [": #INDENT# return", 0.0], ["int ( input (", 0.0], ["list", 0.0], ["len ( s )", 0.0], ["len ( s", 0.0], ["len ( a", 0.0], ["len (", 0.0], ["len", 0.0], ["l ]", 0.0], ["l", 0.0], ["k ]", 0.0], ["k =", 0.0], ["k + 1", 0.0], ["k +", 0.0], ["k )", 0.0], ["k", 0.0], ["j in range (", 0.0], ["j in range", 0.0], ["j in", 0.0], ["j ] [", 0.0], ["j ] =", 0.0], ["j ]", 0.0], ["j -", 0.0], ["j + 1", 0.0], ["j +", 0.0], ["j", 0.0], ["int , input (", 0.0], ["int , input", 0.0], ["int ,", 0.0], ["list (", 0.0], ["list ( map", 0.0], ["list ( map (", 0.0], ["math", 0.0], ["n ) : #INDENT#", 0.0], ["n ) :", 0.0], ["n )", 0.0], ["n", 0.0], ["mod )", 0.0], ["mod #NEWLINE# #DEDENT#", 0.0], ["mod #NEWLINE#", 0.0], ["mod", 0.0], ["min (", 0.0], ["min", 0.0], ["max (", 0.0], ["max", 0.0], ["map ( int ,", 0.0], ["m", 0.0], ["map ( int", 0.0], ["map (", 0.0], ["map", 0.0], ["main (", 0.0], ["main", 0.0], ["m = map (", 0.0], ["m = map", 0.0], ["m =", 0.0], ["m ,", 0.0], ["m ) : #INDENT#", 0.0], ["m ) :", 0.0], ["m )", 0.0], ["int ( x", 0.0], ["int ( input", 0.0], ["n ) ] #NEWLINE#", 0.0], ["input ( ) .", 0.0], ["i ] [", 0.0], ["i ] ==", 0.0], ["i ] =", 0.0], ["i ] ) #NEWLINE#", 0.0], ["i ] )", 0.0], ["i ] #NEWLINE#", 0.0], ["i ]", 0.0], ["i ==", 0.0], ["i - 1 ]", 0.0], ["i - 1", 0.0], ["i -", 0.0], ["i ,", 0.0], ["i + 1 ]", 0.0], ["i + 1 ,", 0.0], ["i + 1", 0.0], ["i +", 0.0], ["i ) #NEWLINE# #DEDENT#", 0.0], ["i ) #NEWLINE#", 0.0], ["i )", 0.0], ["i #NEWLINE#", 0.0], ["i", 0.0], ["h", 0.0], ["graph", 0.0], ["gcd", 0.0], ["g [", 0.0], ["g", 0.0], ["for x in", 0.0], ["i ] [ j", 0.0], ["i in", 0.0], ["i in range", 0.0], ["in", 0.0], ["input ( ) #NEWLINE#", 0.0], ["input ( )", 0.0], ["input (", 0.0], ["input", 0.0], ["in range ( n", 0.0], ["in range ( m", 0.0], ["in range ( len", 0.0], ["in range ( 1", 0.0], ["in range (", 0.0], ["in input ( )", 0.0], ["in input (", 0.0], ["in input", 0.0], ["import sys #NEWLINE#", 0.0], ["i in range (", 0.0], ["import sys", 0.0], ["import", 0.0], ["if s", 0.0], ["if not", 0.0], ["if n", 0.0], ["if len (", 0.0], ["if len", 0.0], ["if i", 0.0], ["if a [ i", 0.0], ["if a [", 0.0], ["if a", 0.0], ["if", 0.0], ["n ) ]", 0.0], ["n +", 0.0], ["for j in range", 0.0], ["self", 0.0], ["t", 0.0], ["sys . stdin .", 0.0], ["sys . stdin", 0.0], ["sys .", 0.0], ["sys #NEWLINE#", 0.0], ["sys", 0.0], ["sum (", 0.0], ["sum", 0.0], ["strip ( )", 0.0], ["strip (", 0.0], ["strip", 0.0], ["str (", 0.0], ["str", 0.0], ["stdin . readline (", 0.0], ["stdin . readline", 0.0], ["stdin .", 0.0], ["stdin", 0.0], ["split ( ) ]", 0.0], ["split ( )", 0.0], ["split (", 0.0], ["split", 0.0], ["sort ( ) #NEWLINE#", 0.0], ["sort ( )", 0.0], ["sort (", 0.0], ["sort", 0.0], ["set (", 0.0], ["set", 0.0], ["t )", 0.0], ["t =", 0.0], ["t [", 0.0], ["x , y", 0.0], ["{", 0.0], ["y2", 0.0], ["y1", 0.0], ["y =", 0.0], ["y )", 0.0], ["y", 0.0], ["xf", 0.0], ["x2", 0.0], ["x1", 0.0], ["x in", 0.0], ["x ]", 0.0], ["x =", 0.0], ["x ,", 0.0], ["tmp", 0.0], ["x +", 0.0], ["x ) for x", 0.0], ["x ) for", 0.0], ["x )", 0.0], ["x", 0.0], ["w", 0.0], ["v ]", 0.0], ["v", 0.0], ["u ]", 0.0], ["u", 0.0], ["true #NEWLINE#", 0.0], ["true", 0.0], ["self .", 0.0], ["s [ i", 0.0], ["n + 1", 0.0], ["s [", 0.0], ["print ( \"yes\"", 0.0], ["print ( \"no\" )", 0.0], ["print ( \"no\"", 0.0], ["print (", 0.0], ["print", 0.0], ["pos", 0.0], ["p [", 0.0], ["p =", 0.0], ["p )", 0.0], ["p", 0.0], ["or", 0.0], ["np .", 0.0], ["np", 0.0], ["not", 0.0], ["negbig", 0.0], ["n = int (", 0.0], ["n = int", 0.0], ["n : #INDENT#", 0.0], ["n :", 0.0], ["n - 1 )", 0.0], ["n - 1", 0.0], ["n -", 0.0], ["n , m =", 0.0], ["n , m", 0.0], ["n , k =", 0.0], ["n , k", 0.0], ["n + 1 )", 0.0], ["print ( *", 0.0], ["print ( -1", 0.0], ["print ( -1 )", 0.0], ["readline ( )", 0.0], ["s = input (", 0.0], ["s =", 0.0], ["s .", 0.0], ["s ,", 0.0], ["s ) #NEWLINE#", 0.0], ["s )", 0.0], ["s", 0.0], ["return #NEWLINE# #DEDENT#", 0.0], ["return #NEWLINE#", 0.0], ["return", 0.0], ["res", 0.0], ["readline ( ) .", 0.0], ["readline (", 0.0], ["print ( ans", 0.0], ["readline", 0.0], ["range ( n", 0.0], ["range ( m )", 0.0], ["range ( m", 0.0], ["range ( len (", 0.0], ["range ( len", 0.0], ["range (", 0.0], ["r =", 0.0], ["r", 0.0], ["q =", 0.0], ["q", 0.0], ["print ( ans )", 0.0], ["for x", 0.0], ["for j in", 0.0], [": #INDENT# s", 0.0], ["[ -1 ]", 0.0], ["[ i ] [", 0.0], ["[ i ] ==", 0.0], ["[ i ] =", 0.0], ["[ i ] )", 0.0], ["[ i ] #NEWLINE#", 0.0], ["[ i - 1", 0.0], ["[ i -", 0.0], ["[ i + 1", 0.0], ["[ i +", 0.0], ["[ i", 0.0], ["[ a", 0.0], ["[ ] #NEWLINE# for", 0.0], ["[ ] #NEWLINE#", 0.0], ["[ ]", 0.0], ["[ [", 0.0], ["[ :", 0.0], ["[ 2 ]", 0.0], ["[ 2", 0.0], ["[ 1 ] )", 0.0], ["[ 1 ]", 0.0], ["[ 1", 0.0], ["[ 0 ] [", 0.0], ["[ 0 ] =", 0.0], ["[ 0 ] *", 0.0], ["[ 0 ] )", 0.0], ["[ 0 ] #NEWLINE#", 0.0], ["[ 0 ]", 0.0], ["[ int", 0.0], ["[ int (", 0.0], ["[ j", 0.0], ["] !=", 0.0], ["] *", 0.0], ["] ) ) #NEWLINE#", 0.0], ["] ) )", 0.0], ["] ) #NEWLINE# #DEDENT#", 0.0], ["] ) #NEWLINE#", 0.0], ["] )", 0.0], ["] #NEWLINE# if", 0.0], ["] #NEWLINE# for i", 0.0], ["] #NEWLINE# for _", 0.0], ["] #NEWLINE# for", 0.0], ["] #NEWLINE# #DEDENT#", 0.0], ["] #NEWLINE#", 0.0], ["]", 0.0], ["[ j ]", 0.0], ["[ y", 0.0], ["[ x ]", 0.0], ["[ x", 0.0], ["[ v ]", 0.0], ["[ v", 0.0], ["[ u ]", 0.0], ["[ u", 0.0], ["[ n", 0.0], ["[ k ]", 0.0], ["[ k", 0.0], ["[ j ] [", 0.0], ["[ j ] =", 0.0], ["[ 0", 0.0], ["[ -1", 0.0], ["] + 1", 0.0], ["[ (", 0.0], ["= int ( input", 0.0], ["= int (", 0.0], ["= int", 0.0], ["= input ( )", 0.0], ["= input (", 0.0], ["= input", 0.0], ["= false #NEWLINE#", 0.0], ["= false", 0.0], ["= a", 0.0], ["= [ int (", 0.0], ["= [ int", 0.0], ["= [ ] #NEWLINE#", 0.0], ["= [ ]", 0.0], ["= [ [", 0.0], ["= [ 0 ]", 0.0], ["= [ 0", 0.0], ["= [", 0.0], ["= 1 #NEWLINE# for", 0.0], ["}", 0.0], ["= 1", 0.0], ["= 0 #NEWLINE# for", 0.0], ["= 0 #NEWLINE#", 0.0], ["= (", 0.0], ["=", 0.0], ["<=", 0.0], [": ]", 0.0], [": #INDENT# x", 0.0], ["= len", 0.0], ["= len (", 0.0], ["= list", 0.0], ["= true #NEWLINE#", 0.0], [">=", 0.0], ["> 0 :", 0.0], ["> 0", 0.0], [">", 0.0], ["== 1 : #INDENT#", 0.0], ["== 1 :", 0.0], ["== 1", 0.0], ["== 0 : #INDENT#", 0.0], ["== 0 :", 0.0], ["== 0", 0.0], ["==", 0.0], ["= {", 0.0], ["= true", 0.0], ["= list (", 0.0], ["= sum", 0.0], ["= set (", 0.0], ["= set", 0.0], ["= np .", 0.0], ["= np", 0.0], ["= min (", 0.0], ["= min", 0.0], ["= max (", 0.0], ["= max", 0.0], ["= map ( int", 0.0], ["= map (", 0.0], ["= list ( map", 0.0], ["] +", 0.0], ["] +=", 0.0], ["for j", 0.0], ["ans =", 0.0], ["cost", 0.0], ["continue #NEWLINE# #DEDENT#", 0.0], ["continue #NEWLINE#", 0.0], ["continue", 0.0], ["cnt", 0.0], ["c [ i", 0.0], ["c [", 0.0], ["c =", 0.0], ["c )", 0.0], ["break #NEWLINE# #DEDENT# #DEDENT#", 0.0], ["break #NEWLINE# #DEDENT#", 0.0], ["break #NEWLINE#", 0.0], ["break", 0.0], ["b [ i ]", 0.0], ["b [ i", 0.0], ["b [", 0.0], ["b =", 0.0], ["b ,", 0.0], ["b ) #NEWLINE#", 0.0], ["b )", 0.0], ["b", 0.0], ["arr", 0.0], ["append ( [", 0.0], ["append ( (", 0.0], ["append (", 0.0], ["append", 0.0], ["ans [ (", 0.0], ["count", 0.0], ["d", 0.0], ["d )", 0.0], ["f", 0.0], ["for i in", 0.0], ["for i", 0.0], ["for _ in range", 0.0], ["for _ in", 0.0], ["for _", 0.0], ["float", 0.0], ["false #NEWLINE# #DEDENT#", 0.0], ["false #NEWLINE#", 0.0], ["false", 0.0], ["f [ i", 0.0], ["f [", 0.0], ["f (", 0.0], ["else : #INDENT# print", 0.0], ["d =", 0.0], ["else : #INDENT#", 0.0], ["else :", 0.0], ["else", 0.0], ["elif", 0.0], ["e", 0.0], ["dp [ i", 0.0], ["dp [", 0.0], ["dp", 0.0], ["dfs (", 0.0], ["dfs", 0.0], ["def", 0.0], ["d [", 0.0], ["ans [", 0.0], ["ans . append (", 0.0], ["] ,", 0.0], ["ans . append", 0.0], ["] for", 0.0], ["] ]", 0.0], ["] [ k ]", 0.0], ["] [ k", 0.0], ["] [ j ]", 0.0], ["] [ j", 0.0], ["] [ 1 ]", 0.0], ["] [ 1", 0.0], ["] [ 0 ]", 0.0], ["] [ 0", 0.0], ["] [", 0.0], ["] >", 0.0], ["] == 0 :", 0.0], ["] == 0", 0.0], ["] ==", 0.0], ["] = 1 #NEWLINE#", 0.0], ["] = 1", 0.0], ["] = 0 #NEWLINE#", 0.0], ["] = 0", 0.0], ["] =", 0.0], ["] : #INDENT# if", 0.0], ["] : #INDENT#", 0.0], ["] :", 0.0], ["] . append (", 0.0], ["] . append", 0.0], ["] .", 0.0], ["] -", 0.0], ["_", 0.0], ["_ in", 0.0], ["_ in range", 0.0], ["a [ i +", 0.0], ["ans .", 0.0], ["ans ) #NEWLINE#", 0.0], ["ans )", 0.0], ["ans", 0.0], ["and a", 0.0], ["and", 0.0], ["add (", 0.0], ["add", 0.0], ["abs (", 0.0], ["abs", 0.0], ["a1", 0.0], ["a [ i ]", 0.0], ["a [ i", 0.0], ["_ in range (", 0.0], ["a [", 0.0], ["a = list (", 0.0], ["a = list", 0.0], ["a =", 0.0], ["a .", 0.0], ["a -", 0.0], ["a , b =", 0.0], ["a , b", 0.0], ["a ,", 0.0], ["a + b", 0.0], ["a +", 0.0], ["a ) #NEWLINE#", 0.0], ["!=", 0.0]]}