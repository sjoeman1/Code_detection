{"columns": ["feature_names", "importances"], "data": [["( ) ) #NEWLINE#", 0.12125544995069504], ["#COMMENT#", 0.06650972366333008], ["#COMMENT# #NEWLINE# print", 0.04414256662130356], ["input", 0.03873438760638237], [") .", 0.03524700552225113], ["#NEWLINE# #COMMENT#", 0.03289592266082764], [") #NEWLINE# #COMMENT#", 0.030899839475750923], ["= map", 0.02854738011956215], ["#DEDENT# #COMMENT#", 0.026574917137622833], ["( input", 0.025246256962418556], ["( ) . split", 0.024077925831079483], ["-", 0.01895276829600334], ["in input", 0.018790042027831078], ["= int ( input", 0.01846112683415413], [".", 0.01655508577823639], ["#NEWLINE# #DEDENT#", 0.016073312610387802], [". sort ( )", 0.015194462612271309], ["( ) )", 0.012812688015401363], ["1 )", 0.012610488571226597], ["import", 0.01238620188087225], ["*", 0.011843482032418251], ["( s", 0.011484712362289429], ["(", 0.011460973881185055], ["in range ( 1", 0.011442936956882477], ["= [", 0.011009655892848969], ["#DEDENT#", 0.010971170850098133], ["n )", 0.010920721106231213], ["s = input", 0.010151920840144157], ["ans", 0.010022314265370369], ["3", 0.010019204579293728], ["a", 0.009963062591850758], ["1", 0.009676124900579453], [") ) #NEWLINE#", 0.009650805033743382], ["( int", 0.00958903320133686], ["#COMMENT# #NEWLINE# if", 0.00888270977884531], ["( 1", 0.008826341480016708], ["n ) :", 0.008766412734985352], ["in range", 0.007929676212370396], ["#NEWLINE# print", 0.007401721552014351], ["0", 0.007218941580504179], ["#NEWLINE# n", 0.007000306621193886], ["= int", 0.0068308948539197445], ["3 #NEWLINE#", 0.006598507519811392], ["( ) ) )", 0.006540379486978054], ["#NEWLINE#", 0.006327570881694555], ["- 1 ]", 0.00624134112149477], ["1 #NEWLINE#", 0.006058876868337393], ["in", 0.006054769270122051], ["#NEWLINE# n = int", 0.005982572678476572], ["a =", 0.005886648315936327], ["#NEWLINE# ans", 0.005834989249706268], ["#DEDENT# print", 0.005829143803566694], ["= list", 0.005597228184342384], ["range", 0.005552942398935556], ["[ i", 0.00546505069360137], ["#NEWLINE# if", 0.005358904600143433], ["=", 0.005303090438246727], ["( ) .", 0.00529080955311656], ["in range ( n", 0.005248652305454016], ["#COMMENT# #NEWLINE# #COMMENT#", 0.004919149447232485], ["( n", 0.004883942194283009], ["n", 0.004876644816249609], ["s =", 0.0048489756882190704], ["[", 0.004792437423020601], ["sum", 0.004791979677975178], [") #NEWLINE#", 0.004712997004389763], [") . split", 0.004475077614188194], [") ) ) #NEWLINE#", 0.00443566869944334], [") ) )", 0.004327762871980667], ["#NEWLINE# n =", 0.004072653129696846], [") )", 0.004063524305820465], ["int", 0.003946252167224884], [") ) #NEWLINE# a", 0.003889363491907716], ["1 ) : #INDENT#", 0.003752479562535882], ["#DEDENT# if", 0.0035739580634981394], ["#NEWLINE# #DEDENT# #COMMENT#", 0.0034350042697042227], [") ,", 0.0], [") ) : #INDENT#", 0.0], [") ] #NEWLINE#", 0.0], [") and", 0.0], [") for", 0.0], [") *", 0.0], [") +", 0.0], [") + 1", 0.0], [", len (", 0.0], ["+ 1 )", 0.0], [", m ,", 0.0], [", len", 0.0], [", k = map", 0.0], [") for _", 0.0], [") -", 0.0], [", k =", 0.0], [", k", 0.0], [", input ( )", 0.0], [", input (", 0.0], [", m", 0.0], [", m = map", 0.0], [", m =", 0.0], ["- 1 #NEWLINE#", 0.0], ["- 1 ) :", 0.0], ["- 1 )", 0.0], [") : #INDENT# if", 0.0], [") : #INDENT# return", 0.0], [") ) #NEWLINE# if", 0.0], [") ) #NEWLINE# s", 0.0], [") : #INDENT# s", 0.0], [") ==", 0.0], ["- 1", 0.0], [", d", 0.0], [") ]", 0.0], [") ) :", 0.0], [", y", 0.0], [", x", 0.0], [", r", 0.0], [", n ) :", 0.0], [", n )", 0.0], [", n", 0.0], [", input", 0.0], [") for _ in", 0.0], ["+ 1 ) #NEWLINE#", 0.0], ["+ 1 ] [", 0.0], [") //", 0.0], [") :", 0.0], ["* n", 0.0], ["**", 0.0], ["+", 0.0], [") : #COMMENT#", 0.0], ["+=", 0.0], [") : #COMMENT# #NEWLINE#", 0.0], ["+ 1", 0.0], [", c", 0.0], ["+ 1 #NEWLINE#", 0.0], [") : #INDENT#", 0.0], ["+ 1 ]", 0.0], ["- 2", 0.0], [") : #INDENT# a", 0.0], ["+ 1 ,", 0.0], ["+ 1 ) :", 0.0], ["+ 1 ) )", 0.0], ["+= 1", 0.0], [") . strip (", 0.0], ["+= 1 #NEWLINE#", 0.0], [") . strip", 0.0], [", b ,", 0.0], [") for i", 0.0], [") - 1", 0.0], [", b", 0.0], [", a", 0.0], [", 2", 0.0], [", 1 ,", 0.0], [", 1", 0.0], [", 0", 0.0], [") for i in", 0.0], [", -1", 0.0], ["* (", 0.0], [") : #INDENT# print", 0.0], [",", 0.0], [") : #INDENT# for", 0.0], ["+= 1 #NEWLINE# #DEDENT#", 0.0], [") . split (", 0.0], [") : #INDENT# n", 0.0], ["} #NEWLINE#", 0.0], ["- a", 0.0], ["10", 0.0], ["3 ]", 0.0], ["2 ] )", 0.0], ["2 ]", 0.0], ["2 ==", 0.0], ["2 ,", 0.0], ["2 *", 0.0], ["2 ) : #INDENT#", 0.0], ["2 ) :", 0.0], ["2 )", 0.0], ["2 #NEWLINE#", 0.0], ["2", 0.0], ["10 **", 0.0], ["1 ] [", 0.0], [":", 0.0], ["1 ] <=", 0.0], ["1 ] ) #NEWLINE#", 0.0], ["1 ] )", 0.0], ["1 ] #NEWLINE#", 0.0], ["1 ]", 0.0], ["1 : #INDENT#", 0.0], ["1 :", 0.0], ["1 -", 0.0], ["1 , n )", 0.0], ["1 , n", 0.0], ["1 ,", 0.0], ["1 ) :", 0.0], ["4", 0.0], [": #COMMENT#", 0.0], ["- a [", 0.0], [": #INDENT# if a", 0.0], ["<=", 0.0], ["<", 0.0], [": ]", 0.0], [": :", 0.0], [": #INDENT# s", 0.0], [": #INDENT# return", 0.0], [": #INDENT# res", 0.0], [": #INDENT# print (", 0.0], [": #INDENT# print", 0.0], [": #INDENT# n", 0.0], [": #INDENT# if s", 0.0], [": #INDENT# if i", 0.0], [": #INDENT# if", 0.0], [": #COMMENT# #NEWLINE#", 0.0], [": #INDENT# for j", 0.0], [": #INDENT# for", 0.0], [": #INDENT# continue #NEWLINE#", 0.0], [": #INDENT# continue", 0.0], [": #INDENT# break #NEWLINE#", 0.0], [": #INDENT# break", 0.0], [": #INDENT# ans =", 0.0], [": #INDENT# ans +=", 0.0], [": #INDENT# ans", 0.0], [": #INDENT# a", 0.0], [": #INDENT#", 0.0], [": #COMMENT# #NEWLINE# #INDENT#", 0.0], ["1 ) )", 0.0], ["1 ) #NEWLINE# #DEDENT#", 0.0], ["1 ) #NEWLINE#", 0.0], [". append ( (", 0.0], [". stdin", 0.0], [". split ( )", 0.0], [". split (", 0.0], [". split", 0.0], [". sort (", 0.0], [". sort", 0.0], [". readline", 0.0], [". pop (", 0.0], [") ) #NEWLINE# #DEDENT#", 0.0], [". lower", 0.0], [". join (", 0.0], [". join", 0.0], [". append (", 0.0], ["1 #NEWLINE# #DEDENT# else", 0.0], [". append", 0.0], [". add (", 0.0], [". add", 0.0], ["-= 1 #NEWLINE# #DEDENT#", 0.0], ["-= 1 #NEWLINE#", 0.0], ["-= 1", 0.0], ["-=", 0.0], ["-1 ]", 0.0], ["-1 ) #NEWLINE#", 0.0], ["-1 )", 0.0], ["-1", 0.0], ["- i", 0.0], [". stdin .", 0.0], [". stdin . readline", 0.0], [". strip", 0.0], [". strip (", 0.0], ["1 #NEWLINE# #DEDENT# #DEDENT#", 0.0], ["1 #NEWLINE# #DEDENT#", 0.0], ["0 and", 0.0], ["0 ] [", 0.0], ["0 ] <=", 0.0], ["0 ] *", 0.0], ["0 ] )", 0.0], ["0 ] #NEWLINE#", 0.0], ["0 ]", 0.0], ["0 : #INDENT# print", 0.0], ["0 : #INDENT#", 0.0], ["0 :", 0.0], ["0 , 0", 0.0], ["0 ,", 0.0], ["0 ) #NEWLINE#", 0.0], ["0 )", 0.0], ["0 #NEWLINE# for i", 0.0], ["0 #NEWLINE# for", 0.0], ["0 #NEWLINE# #DEDENT#", 0.0], ["0 #NEWLINE#", 0.0], ["// 2 )", 0.0], ["// 2", 0.0], ["//", 0.0], ["/", 0.0], [". strip ( )", 0.0], [". pop", 0.0], [") #NEWLINE# #DEDENT# #DEDENT#", 0.0], [") ) #NEWLINE# #COMMENT#", 0.0], ["#NEWLINE# a .", 0.0], ["#NEWLINE# #INDENT#", 0.0], ["#NEWLINE# #DEDENT# print (", 0.0], ["#NEWLINE# #DEDENT# print", 0.0], ["#NEWLINE# #DEDENT# if", 0.0], ["#NEWLINE# #DEDENT# for", 0.0], ["#NEWLINE# #DEDENT# else :", 0.0], ["#NEWLINE# #DEDENT# else", 0.0], ["#NEWLINE# #DEDENT# elif", 0.0], ["#NEWLINE# #DEDENT# def", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# print", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# if", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# #DEDENT#", 0.0], ["#NEWLINE# #DEDENT# #DEDENT# #COMMENT#", 0.0], ["#NEWLINE# #DEDENT# #DEDENT#", 0.0], ["#NEWLINE# #DEDENT# #COMMENT# #NEWLINE#", 0.0], ["#NEWLINE# #COMMENT# #NEWLINE# print", 0.0], ["#NEWLINE# #COMMENT# #NEWLINE#", 0.0], ["#INDENT# s", 0.0], ["#INDENT# return", 0.0], ["#INDENT# res", 0.0], ["#INDENT# print ( -1", 0.0], ["#INDENT# print ( \"yes\"", 0.0], ["#INDENT# print ( \"no\"", 0.0], ["#INDENT# print (", 0.0], ["#INDENT# print", 0.0], ["#NEWLINE# a", 0.0], ["#NEWLINE# a =", 0.0], ["#INDENT# if s [", 0.0], ["#NEWLINE# a = [", 0.0], ["#NEWLINE# print (", 0.0], ["#NEWLINE# n ,", 0.0], ["#NEWLINE# m", 0.0], ["#NEWLINE# l", 0.0], ["#NEWLINE# k", 0.0], ["#NEWLINE# import", 0.0], ["#NEWLINE# from", 0.0], ["#NEWLINE# for j in", 0.0], ["#NEWLINE# for j", 0.0], ["#NEWLINE# for i in", 0.0], ["#NEWLINE# for i", 0.0], ["#NEWLINE# for _ in", 0.0], ["#NEWLINE# for _", 0.0], ["#NEWLINE# for", 0.0], ["#NEWLINE# def", 0.0], ["#NEWLINE# d", 0.0], ["#NEWLINE# c =", 0.0], ["#NEWLINE# c", 0.0], ["#NEWLINE# break #NEWLINE# #DEDENT#", 0.0], ["#NEWLINE# break #NEWLINE#", 0.0], ["#NEWLINE# break", 0.0], ["#NEWLINE# b =", 0.0], ["#NEWLINE# b", 0.0], ["#NEWLINE# ans =", 0.0], ["#NEWLINE# a = list", 0.0], ["#INDENT# n", 0.0], ["#INDENT# if s", 0.0], ["#NEWLINE# return #NEWLINE#", 0.0], ["#DEDENT# def", 0.0], ["#DEDENT# #DEDENT# print", 0.0], ["#DEDENT# #DEDENT# if", 0.0], ["#DEDENT# #DEDENT# else :", 0.0], ["#DEDENT# #DEDENT# else", 0.0], ["#DEDENT# #DEDENT# #DEDENT# print", 0.0], ["#DEDENT# #DEDENT# #DEDENT#", 0.0], ["#DEDENT# #DEDENT# #COMMENT# #NEWLINE#", 0.0], ["#DEDENT# #DEDENT# #COMMENT#", 0.0], ["#DEDENT# #DEDENT#", 0.0], ["#DEDENT# #COMMENT# #NEWLINE# print", 0.0], ["#DEDENT# #COMMENT# #NEWLINE#", 0.0], ["#COMMENT# #NEWLINE# print (", 0.0], ["#COMMENT# #NEWLINE# for", 0.0], ["#COMMENT# #NEWLINE# #INDENT#", 0.0], ["#COMMENT# #NEWLINE# #COMMENT# #NEWLINE#", 0.0], ["#COMMENT# #NEWLINE#", 0.0], ["\"yes\" ) #NEWLINE#", 0.0], ["\"yes\" )", 0.0], ["\"yes\"", 0.0], ["\"no\" ) #NEWLINE# #DEDENT#", 0.0], ["\"no\" ) #NEWLINE#", 0.0], ["\"no\" )", 0.0], ["\"no\"", 0.0], ["\"\"", 0.0], ["!=", 0.0], ["#DEDENT# #DEDENT# print (", 0.0], ["#DEDENT# elif", 0.0], ["#INDENT# if i", 0.0], ["#DEDENT# else", 0.0], ["#INDENT# if a [", 0.0], ["#INDENT# if a", 0.0], ["#INDENT# if", 0.0], ["#INDENT# for j in", 0.0], ["#INDENT# for j", 0.0], ["#INDENT# for", 0.0], ["#INDENT# continue #NEWLINE# #DEDENT#", 0.0], ["#INDENT# continue #NEWLINE#", 0.0], ["#INDENT# continue", 0.0], ["#INDENT# break #NEWLINE# #DEDENT#", 0.0], ["#INDENT# break #NEWLINE#", 0.0], ["#INDENT# break", 0.0], ["#INDENT# ans =", 0.0], ["#INDENT# ans +=", 0.0], ["#INDENT# ans", 0.0], ["#INDENT# a", 0.0], ["#INDENT#", 0.0], ["#DEDENT# return", 0.0], ["#DEDENT# print ( ans", 0.0], ["#DEDENT# print (", 0.0], ["#DEDENT# for i in", 0.0], ["#DEDENT# for i", 0.0], ["#DEDENT# for", 0.0], ["#DEDENT# else : #INDENT#", 0.0], ["#DEDENT# else :", 0.0], ["#NEWLINE# return", 0.0], ["#NEWLINE# return #NEWLINE# #DEDENT#", 0.0], [") %", 0.0], ["( t", 0.0], ["( s ) #NEWLINE#", 0.0], ["( s )", 0.0], ["( n //", 0.0], ["( n - 1", 0.0], ["( n -", 0.0], ["( n + 1", 0.0], ["( n +", 0.0], ["( n ) ]", 0.0], ["( n ) :", 0.0], ["( n )", 0.0], ["( map ( int", 0.0], ["( map (", 0.0], ["( map", 0.0], ["( m ) :", 0.0], ["( m )", 0.0], ["( m", 0.0], ["( len (", 0.0], ["( len", 0.0], ["( l", 0.0], ["( k )", 0.0], ["( k", 0.0], ["( int , input", 0.0], ["( int ,", 0.0], ["( int (", 0.0], ["( input ( )", 0.0], ["( str", 0.0], ["( t )", 0.0], ["( i + 1", 0.0], ["( x", 0.0], [") #NEWLINE# s =", 0.0], [") #NEWLINE# s", 0.0], [") #NEWLINE# return #NEWLINE#", 0.0], [") #NEWLINE# return", 0.0], [") #NEWLINE# print (", 0.0], [") #NEWLINE# print", 0.0], [") #NEWLINE# if", 0.0], [") #NEWLINE# for i", 0.0], [") #NEWLINE# for", 0.0], [") #NEWLINE# c", 0.0], [") #NEWLINE# b", 0.0], [") #NEWLINE# ans =", 0.0], [") #NEWLINE# ans", 0.0], [") #NEWLINE# a =", 0.0], [") #NEWLINE# a", 0.0], [") #NEWLINE# #DEDENT# print", 0.0], [") #NEWLINE# #DEDENT# else", 0.0], [") #NEWLINE# #DEDENT# elif", 0.0], [") #NEWLINE# #DEDENT# def", 0.0], ["= 0", 0.0], [") #NEWLINE# #DEDENT# #COMMENT#", 0.0], [") #NEWLINE# #DEDENT#", 0.0], [") #NEWLINE# #COMMENT# #NEWLINE#", 0.0], [")", 0.0], ["( x )", 0.0], ["( input (", 0.0], ["( i +", 0.0], ["#NEWLINE# s", 0.0], ["( ) ] #NEWLINE#", 0.0], ["( ) : #INDENT#", 0.0], ["( ) :", 0.0], ["( ) . strip", 0.0], ["( ) #NEWLINE# #DEDENT#", 0.0], ["( ) #NEWLINE# #COMMENT#", 0.0], ["( ) #NEWLINE#", 0.0], ["( )", 0.0], ["( (", 0.0], ["( \"yes\" ) #NEWLINE#", 0.0], ["( \"yes\" )", 0.0], ["( \"yes\"", 0.0], ["( \"no\" ) #NEWLINE#", 0.0], ["( \"no\" )", 0.0], ["( \"no\"", 0.0], ["'0'", 0.0], ["''", 0.0], ["% 2 ==", 0.0], ["% 2", 0.0], ["%", 0.0], ["#NEWLINE# x", 0.0], ["#NEWLINE# while", 0.0], ["#NEWLINE# t =", 0.0], ["#NEWLINE# t", 0.0], ["#NEWLINE# s = input", 0.0], ["#NEWLINE# s =", 0.0], ["( ) ]", 0.0], ["( *", 0.0], ["( i ) for", 0.0], ["( -1", 0.0], ["( i )", 0.0], ["( i", 0.0], ["( d", 0.0], ["( c", 0.0], ["( b )", 0.0], ["( b", 0.0], ["( ans ) #NEWLINE#", 0.0], ["( ans )", 0.0], ["( ans", 0.0], ["( a [", 0.0], ["( a , b", 0.0], ["( a ,", 0.0], ["( a ) #NEWLINE#", 0.0], ["( a )", 0.0], ["( a", 0.0], ["( [", 0.0], ["( 2", 0.0], ["( 1 , n", 0.0], ["( 1 ,", 0.0], ["( 0 ,", 0.0], ["( 0 ) #NEWLINE#", 0.0], ["( 0 )", 0.0], ["( 0", 0.0], ["( -1 ) #NEWLINE#", 0.0], ["( -1 )", 0.0], ["= (", 0.0], ["= [ int", 0.0], ["= 0 #NEWLINE#", 0.0], ["j", 0.0], ["list (", 0.0], ["list", 0.0], ["len ( s )", 0.0], ["len ( s", 0.0], ["len (", 0.0], ["len", 0.0], ["lambda", 0.0], ["l [", 0.0], ["l ,", 0.0], ["l", 0.0], ["kk", 0.0], ["k ]", 0.0], ["k = map (", 0.0], ["k = map", 0.0], ["k =", 0.0], ["k : #INDENT#", 0.0], ["k :", 0.0], ["k -", 0.0], ["k ,", 0.0], ["k )", 0.0], ["k", 0.0], ["join (", 0.0], ["join", 0.0], ["j in range (", 0.0], ["j in range", 0.0], ["j in", 0.0], ["j ] =", 0.0], ["list ( map", 0.0], ["list ( map (", 0.0], ["lower", 0.0], ["map ( int", 0.0], ["n +", 0.0], ["n ) ] #NEWLINE#", 0.0], ["n ) ]", 0.0], ["n ) : #INDENT#", 0.0], ["n %", 0.0], ["n #NEWLINE#", 0.0], ["min (", 0.0], ["min", 0.0], ["max (", 0.0], ["max", 0.0], ["math", 0.0], ["map ( int ,", 0.0], ["map (", 0.0], ["lower (", 0.0], ["map", 0.0], ["main ( )", 0.0], ["main (", 0.0], ["main", 0.0], ["m = map (", 0.0], ["m = map", 0.0], ["m =", 0.0], ["m ,", 0.0], ["m ) : #INDENT#", 0.0], ["m ) :", 0.0], ["m )", 0.0], ["m", 0.0], ["j ]", 0.0], ["int , input (", 0.0], ["n + 1 )", 0.0], ["int , input", 0.0], ["if a", 0.0], ["if (", 0.0], ["if", 0.0], ["i in range (", 0.0], ["i in range", 0.0], ["i in input (", 0.0], ["i in input", 0.0], ["i in", 0.0], ["i for i in", 0.0], ["i for i", 0.0], ["i for", 0.0], ["i ] ]", 0.0], ["i ] [ j", 0.0], ["i ] [", 0.0], ["i ] ==", 0.0], ["i ] =", 0.0], ["i ] -", 0.0], ["i ] ) #NEWLINE#", 0.0], ["i ] )", 0.0], ["i ] #NEWLINE# #DEDENT#", 0.0], ["i ] #NEWLINE#", 0.0], ["i ]", 0.0], ["i - 1 ]", 0.0], ["i - 1", 0.0], ["i -", 0.0], ["i ,", 0.0], ["i + 1 ]", 0.0], ["if a [", 0.0], ["if a [ i", 0.0], ["if i", 0.0], ["input (", 0.0], ["int ,", 0.0], ["int ( input (", 0.0], ["int ( input", 0.0], ["int ( i )", 0.0], ["int ( i", 0.0], ["int (", 0.0], ["inputs", 0.0], ["input =", 0.0], ["input ( ) .", 0.0], ["input ( ) )", 0.0], ["input ( ) #NEWLINE#", 0.0], ["input ( )", 0.0], ["index", 0.0], ["if n", 0.0], ["in range ( m", 0.0], ["in range ( len", 0.0], ["in range (", 0.0], ["in input ( )", 0.0], ["in input (", 0.0], ["import sys #NEWLINE#", 0.0], ["import sys", 0.0], ["import math", 0.0], ["if s [ i", 0.0], ["if s [", 0.0], ["if s", 0.0], ["if not", 0.0], ["n + 1", 0.0], ["n ,", 0.0], ["i +", 0.0], ["s [ i", 0.0], ["sys . stdin", 0.0], ["sys .", 0.0], ["sys #NEWLINE#", 0.0], ["sys", 0.0], ["sum (", 0.0], ["strip ( )", 0.0], ["strip (", 0.0], ["strip", 0.0], ["str (", 0.0], ["str", 0.0], ["stdin . readline", 0.0], ["stdin .", 0.0], ["stdin", 0.0], ["st", 0.0], ["split ( ) ]", 0.0], ["split ( ) )", 0.0], ["split ( )", 0.0], ["split (", 0.0], ["split", 0.0], ["sort ( ) #NEWLINE#", 0.0], ["sort ( )", 0.0], ["sort (", 0.0], ["sort", 0.0], ["set (", 0.0], ["set", 0.0], ["self .", 0.0], ["self", 0.0], ["sys . stdin .", 0.0], ["t", 0.0], ["t )", 0.0], ["x =", 0.0], ["{ } #NEWLINE#", 0.0], ["{ }", 0.0], ["{", 0.0], ["y )", 0.0], ["y", 0.0], ["xs [ 1 ]", 0.0], ["xs [ 1", 0.0], ["xs [", 0.0], ["xs", 0.0], ["x in", 0.0], ["x ]", 0.0], ["x [", 0.0], ["x , y", 0.0], ["t =", 0.0], ["x ,", 0.0], ["x )", 0.0], ["x", 0.0], ["while", 0.0], ["w [", 0.0], ["w", 0.0], ["val", 0.0], ["v", 0.0], ["u", 0.0], ["true #NEWLINE#", 0.0], ["true", 0.0], ["temp", 0.0], ["s [ i ]", 0.0], ["s [", 0.0], ["n , k", 0.0], ["s = input (", 0.0], ["print (", 0.0], ["print", 0.0], ["pop (", 0.0], ["pop", 0.0], ["p =", 0.0], ["p", 0.0], ["output", 0.0], ["or", 0.0], ["num", 0.0], ["np", 0.0], ["not in", 0.0], ["not", 0.0], ["name", 0.0], ["n = int (", 0.0], ["n = int", 0.0], ["n =", 0.0], ["n : #INDENT#", 0.0], ["n :", 0.0], ["n // 2", 0.0], ["n //", 0.0], ["n - 1 )", 0.0], ["n - 1", 0.0], ["n -", 0.0], ["n , m =", 0.0], ["n , m ,", 0.0], ["n , m", 0.0], ["n , k =", 0.0], ["print ( \"no\"", 0.0], ["print ( \"no\" )", 0.0], ["print ( \"yes\"", 0.0], ["range ( m )", 0.0], ["s ) #NEWLINE#", 0.0], ["s )", 0.0], ["s", 0.0], ["return #NEWLINE# #DEDENT#", 0.0], ["return #NEWLINE#", 0.0], ["return", 0.0], ["res =", 0.0], ["res", 0.0], ["readline", 0.0], ["range ( n -", 0.0], ["range ( n )", 0.0], ["range ( n", 0.0], ["range ( m", 0.0], ["print ( \"yes\" )", 0.0], ["range ( len (", 0.0], ["range ( len", 0.0], ["range ( 1 ,", 0.0], ["range ( 1", 0.0], ["range (", 0.0], ["r", 0.0], ["q", 0.0], ["print ( ans )", 0.0], ["print ( ans", 0.0], ["print ( -1 )", 0.0], ["print ( -1", 0.0], ["print ( (", 0.0], ["i + 1", 0.0], ["i ) for i", 0.0], ["= 0 #NEWLINE# #DEDENT#", 0.0], ["[ 0 ] )", 0.0], ["[ i ] ==", 0.0], ["[ i ] =", 0.0], ["[ i ] )", 0.0], ["[ i ] #NEWLINE#", 0.0], ["[ i ]", 0.0], ["[ i - 1", 0.0], ["[ i -", 0.0], ["[ i + 1", 0.0], ["[ i +", 0.0], ["[ d ]", 0.0], ["[ d", 0.0], ["[ a", 0.0], ["[ ] #NEWLINE# for", 0.0], ["[ ] #NEWLINE#", 0.0], ["[ ]", 0.0], ["[ [", 0.0], ["[ :", 0.0], ["[ 3 ]", 0.0], ["[ 3", 0.0], ["[ 2 ]", 0.0], ["[ 2", 0.0], ["[ 1 ] <=", 0.0], ["[ 1 ] )", 0.0], ["[ 1 ]", 0.0], ["[ 1", 0.0], ["[ 0 ] [", 0.0], ["[ 0 ] <=", 0.0], ["[ i ] [", 0.0], ["[ i ] ]", 0.0], ["[ int", 0.0], ["] #NEWLINE# for i", 0.0], ["] ,", 0.0], ["] += 1 #NEWLINE#", 0.0], ["] +=", 0.0], ["] + 1", 0.0], ["] +", 0.0], ["] * (", 0.0], ["] *", 0.0], ["] ) )", 0.0], ["] ) #NEWLINE# #DEDENT#", 0.0], ["] ) #NEWLINE#", 0.0], ["] )", 0.0], ["] #NEWLINE# if", 0.0], ["] #NEWLINE# for", 0.0], ["[ int (", 0.0], ["] #NEWLINE# #DEDENT# #DEDENT#", 0.0], ["] #NEWLINE# #DEDENT#", 0.0], ["] #NEWLINE#", 0.0], ["] !=", 0.0], ["]", 0.0], ["[ x ]", 0.0], ["[ x", 0.0], ["[ n -", 0.0], ["[ n", 0.0], ["[ j ] =", 0.0], ["[ j ]", 0.0], ["[ j", 0.0], ["[ 0 ] *", 0.0], ["[ 0 ] #NEWLINE#", 0.0], ["] .", 0.0], ["[ 0 ]", 0.0], ["= max", 0.0], ["= map ( int", 0.0], ["= map (", 0.0], ["= list ( map", 0.0], ["= list (", 0.0], ["= len (", 0.0], ["= len", 0.0], ["= int (", 0.0], ["= input ( )", 0.0], ["= input (", 0.0], ["= input", 0.0], ["= i", 0.0], ["= false #NEWLINE#", 0.0], ["= false", 0.0], ["= a [", 0.0], ["= a", 0.0], ["= [ int (", 0.0], ["}", 0.0], ["= [ ] #NEWLINE#", 0.0], ["= [ ]", 0.0], ["= [ [", 0.0], ["= [ 0 ]", 0.0], ["= [ 0", 0.0], ["= 1 #NEWLINE# #DEDENT#", 0.0], ["= 1 #NEWLINE#", 0.0], ["= 1", 0.0], ["= 0 #NEWLINE# for", 0.0], ["= max (", 0.0], ["= min", 0.0], ["= min (", 0.0], ["== 0 :", 0.0], ["[ 0", 0.0], ["[ -1 ]", 0.0], ["[ -1", 0.0], [">=", 0.0], ["> 0 : #INDENT#", 0.0], ["> 0 :", 0.0], ["> 0", 0.0], [">", 0.0], ["== 1 : #INDENT#", 0.0], ["== 1 :", 0.0], ["== 1", 0.0], ["== 0 : #INDENT#", 0.0], ["== 0", 0.0], ["= n", 0.0], ["==", 0.0], ["= { } #NEWLINE#", 0.0], ["= { }", 0.0], ["= {", 0.0], ["= true #NEWLINE#", 0.0], ["= true", 0.0], ["= sys .", 0.0], ["= sys", 0.0], ["= sum (", 0.0], ["= sum", 0.0], ["= set (", 0.0], ["= set", 0.0], ["] -", 0.0], ["] :", 0.0], ["i ) for", 0.0], ["b =", 0.0], ["def", 0.0], ["d ]", 0.0], ["d [", 0.0], ["d =", 0.0], ["d )", 0.0], ["d", 0.0], ["cur", 0.0], ["ct [", 0.0], ["ct", 0.0], ["count", 0.0], ["continue #NEWLINE# #DEDENT#", 0.0], ["continue #NEWLINE#", 0.0], ["continue", 0.0], ["collections", 0.0], ["cnt", 0.0], ["chr", 0.0], ["c [", 0.0], ["c =", 0.0], ["c )", 0.0], ["c", 0.0], ["break #NEWLINE# #DEDENT# #DEDENT#", 0.0], ["break #NEWLINE# #DEDENT#", 0.0], ["break #NEWLINE#", 0.0], ["break", 0.0], ["b2 [", 0.0], ["b2", 0.0], ["b1 [", 0.0], ["dp", 0.0], ["dp [", 0.0], ["dp [ i", 0.0], ["for i in input", 0.0], ["i )", 0.0], ["i #NEWLINE#", 0.0], ["i", 0.0], ["h", 0.0], ["g", 0.0], ["from", 0.0], ["for x in", 0.0], ["for x", 0.0], ["for j in range", 0.0], ["for j in", 0.0], ["for j", 0.0], ["for i in range", 0.0], ["for i in", 0.0], ["elif", 0.0], ["for i", 0.0], ["for _ in range", 0.0], ["for _ in", 0.0], ["for _", 0.0], ["for", 0.0], ["false #NEWLINE#", 0.0], ["false", 0.0], ["f", 0.0], ["else : #INDENT# print", 0.0], ["else : #INDENT#", 0.0], ["else :", 0.0], ["else", 0.0], ["b1", 0.0], ["b .", 0.0], ["] : #INDENT#", 0.0], ["b ,", 0.0], ["a ) #NEWLINE#", 0.0], ["a )", 0.0], ["__starting_point ( )", 0.0], ["__starting_point (", 0.0], ["__starting_point", 0.0], ["_ in range (", 0.0], ["_ in range", 0.0], ["_ in", 0.0], ["_", 0.0], ["] and", 0.0], ["] ] =", 0.0], ["] ]", 0.0], ["] [ j ]", 0.0], ["] [ j", 0.0], ["] [ 1 ]", 0.0], ["] [ 1", 0.0], ["] [ 0 ]", 0.0], ["] [ 0", 0.0], ["] [", 0.0], ["] >", 0.0], ["] ==", 0.0], ["] = 1 #NEWLINE#", 0.0], ["] = 1", 0.0], ["] = 0 #NEWLINE#", 0.0], ["] = 0", 0.0], ["] =", 0.0], ["] <=", 0.0], ["a ,", 0.0], ["a , b", 0.0], ["a , b ,", 0.0], ["ans )", 0.0], ["b )", 0.0], ["b", 0.0], ["arr [", 0.0], ["arr", 0.0], ["append ( (", 0.0], ["append (", 0.0], ["append", 0.0], ["ans = 0 #NEWLINE#", 0.0], ["ans = 0", 0.0], ["ans =", 0.0], ["ans +=", 0.0], ["ans ) #NEWLINE#", 0.0], ["and", 0.0], ["a .", 0.0], ["add (", 0.0], ["add", 0.0], ["abs (", 0.0], ["abs", 0.0], ["a [ i ]", 0.0], ["a [ i", 0.0], ["a [ 0 ]", 0.0], ["a [ 0", 0.0], ["a [", 0.0], ["a = list (", 0.0], ["a = list", 0.0], ["a = [", 0.0], ["", 0.0]]}