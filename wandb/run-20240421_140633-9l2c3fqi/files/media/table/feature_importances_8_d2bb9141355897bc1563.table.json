{"columns": ["feature_names", "importances"], "data": [["the", 4.306593350875911], ["of", 1.8355344284278095], ["result", 1.2637847220854719], ["= map ( int", 1.1793771073984365], ["= map", 1.168703788705505], ["= map (", 1.168703788705505], ["to", 1.0100481765418907], ["solve (", 1.0037759057874218], ["solve", 1.001183712247691], ["number", 0.9908923462813873], ["return", 0.9860486454736408], ["is", 0.9630026821229067], ["number of", 0.9609075508034451], ["calculate", 0.9375413812516976], ["calculate the", 0.876431232470452], ["( n", 0.8705908455257687], ["( ) ) #NEWLINE#", 0.8680260016034496], [" #INDENT# #DEDENT#", 0.8320381625171749], ["#INDENT# #DEDENT#", 0.8320381625171749], [":  #INDENT# #DEDENT#", 0.826220053259549], [":  #INDENT#", 0.826220053259549], ["( n ,", 0.8196644424501177], [" #INDENT#", 0.7840519039526709], ["check", 0.7801906546172628], [": ", 0.7773593975872544], ["check if", 0.7680329176854355], ["#DEDENT# return", 0.7538837001665908], ["", 0.7300268438891667], ["#NEWLINE# print", 0.7224264264866325], ["#NEWLINE# calculate", 0.7034910439982163], ["def", 0.6968868487232562], ["#NEWLINE# calculate the", 0.6547280910417483], ["if the", 0.6516431661903893], ["n", 0.619434980180177], ["n ,", 0.6071053090484241], ["the number", 0.6040277715102462], ["strip ( )", 0.6026807291367975], ["strip (", 0.6026807291367975], ["strip", 0.6026807291367975], [". strip", 0.6026807291367975], [". strip ( )", 0.6026807291367975], [". strip (", 0.6026807291367975], ["print the", 0.5975004882296645], ["operations", 0.5917300036855545], ["( ) . strip", 0.5901621092862229], [") . strip (", 0.5901621092862229], [") . strip", 0.5901621092862229], ["[ i", 0.5895943436743067], ["split ( ) )", 0.5857070389848357], ["the number of", 0.5821450708350006], [") .", 0.5801823397176211], ["k = map (", 0.5665289524394026], ["k = map", 0.5665289524394026], [", k = map", 0.5665289524394026], ["digit", 0.5652522809987839], [") #NEWLINE# calculate", 0.5635741896855684], ["left", 0.5632594403883261], ["minimum", 0.5612577227712936], [", k", 0.5395203205859236], ["right", 0.53287437007542], ["of the", 0.5323513029078347], [") #NEWLINE# calculate the", 0.5318166602758552], ["a = list (", 0.5283542926088097], ["a = list", 0.5283542926088097], ["#NEWLINE# a = list", 0.5257156522677324], ["#INDENT# return", 0.5245138373418204], [". sort (", 0.5236695836704041], [". sort", 0.5236695836704041], ["( ) .", 0.5217238536504984], ["dp", 0.5212385136610567], ["int , input", 0.5193119663993898], ["( int , input", 0.5193119663993898], ["and", 0.5176551822048465], ["dp [", 0.5129676480252343], ["count", 0.5126320833783758], [": #INDENT# return", 0.5116694936978031], ["def solve", 0.5085722057871648], ["def solve (", 0.508422924555222], ["#NEWLINE# #INDENT#", 0.5041214298394853], ["( ) )", 0.5010206022826903], ["__name__", 0.5008410920019801], ["__name__ ==", 0.5008410920019801], ["if __name__", 0.5008410920019801], ["if __name__ ==", 0.5008410920019801], ["#DEDENT# if __name__", 0.4983389521910388], ["#DEDENT# if __name__ ==", 0.4983389521910388], ["#NEWLINE# print (", 0.4948511767639372], ["int , input (", 0.49467053165720315], ["the minimum", 0.49351897343427226], ["maximum", 0.4928876425348352], ["solve ( n", 0.49095455464253795], ["( )", 0.4901408518248668], ["int ,", 0.48399202511099826], ["points", 0.4817344898906597], ["#DEDENT# #DEDENT# return", 0.48139327923711783], ["map ( int", 0.481332523536728], ["map ( int ,", 0.481332523536728], ["( int ,", 0.481332523536728], ["split ( )", 0.4810035497558603], [". split ( )", 0.4810035497558603], ["n ) :", 0.48015528830028187], ["#NEWLINE# check", 0.47154097588496735], [", input", 0.47095574407443763], ["can", 0.46898803575421033], ["find", 0.4687622704223343], ["_ in range", 0.4659284071249105], ["_ in range (", 0.4641488639232324], ["#NEWLINE# check if", 0.460813592054968], ["set", 0.46057478884664727], ["solve ( n ,", 0.456952731700239], ["_ in", 0.4563687407468613], ["for _ in range", 0.45595519614010627], ["sort", 0.4558271311663587], ["n )", 0.45581269942474556], ["( s )", 0.4555707794556674], [". sort ( )", 0.45387678254735886], ["sort ( ) #NEWLINE#", 0.45387678254735886], ["sort ( )", 0.45387678254735886], ["( int", 0.45293203696570794], ["the maximum", 0.45248780067124506], ["input ( ) .", 0.4510304723911085], [", input (", 0.4507994161755327], ["for _ in", 0.44982894447426636], [", input ( )", 0.44756121646250013], [") : ", 0.44742585987168737], [") :  #INDENT#", 0.44742585987168737], ["find the", 0.4462351958426073], ["dp [ i", 0.44076523641956233], ["check if the", 0.44067934819457255], ["i ]", 0.43999542279621495], [".", 0.43825373974185383], ["for _", 0.4382376629610245], ["lower", 0.43236489069963857], ["distance", 0.43063162098990765], ["n ) : #INDENT#", 0.43042675886036325], ["( n ) :", 0.42995312144322784], ["solve ( )", 0.4296276202274937], ["( n )", 0.4237640883042347], [") ) #NEWLINE# calculate", 0.4233602181096864], ["that", 0.423121840095745], ["visited", 0.42194960470105625], ["numbers", 0.4215262700952818], ["num", 0.4190705850623189], ["s )", 0.4170173672791701], ["[ i ]", 0.41189164771851894], ["#INDENT# n =", 0.4109888510890819], ["segments", 0.4107100358828365], ["n , m", 0.41046670138539054], ["3 #NEWLINE#", 0.4099614639173135], ["\"no\"", 0.40995629064065436], ["current", 0.4079030078473463], ["i ] #NEWLINE#", 0.40760796921784026], ["\"yes\"", 0.407562698794664], ["in range ( n", 0.4066790741269421], ["y", 0.40613924129847767], ["initialize", 0.4038667057946846], ["result =", 0.40227089680832023], [": #INDENT# n =", 0.4008713291501904], ["#NEWLINE# for _ in", 0.39912485688430277], ["_", 0.39781868632405715], ["map", 0.39673053253073953], ["#NEWLINE# #DEDENT# return", 0.3944393227146517], ["board", 0.39341880798353485], ["map (", 0.39300523146452937], ["grid", 0.39210481873132097], ["( n , k", 0.39210366500626975], ["( 1 ,", 0.3913731803513877], [", k )", 0.39094815750587336], ["#NEWLINE# #DEDENT# if __name__", 0.39065916809557005], ["+ 1 ) :", 0.39017763103651004], ["#NEWLINE# for _", 0.38984683668162956], ["[ i ] #NEWLINE#", 0.38815621870945677], ["m = map", 0.3860139529546167], ["m = map (", 0.3860139529546167], [", m = map", 0.3860139529546167], ["steps", 0.38432845198966603], [") #NEWLINE# check", 0.3818214519711838], ["sort (", 0.38145612018537245], ["set (", 0.38040990301812916], ["range ( 1 ,", 0.3779985449305983], [") #NEWLINE# check if", 0.375780531598247], [". lower ( )", 0.37564251784540553], ["lower ( )", 0.37564251784540553], ["lower (", 0.37564251784540553], [". lower", 0.37564251784540553], [". lower (", 0.37564251784540553], ["each", 0.36922897744920297], [") ) #NEWLINE# a", 0.3685142279141393], ["\"__main__\" : #INDENT#", 0.3682475682150404], ["== \"__main__\" : #INDENT#", 0.3682475682150404], ["with", 0.3678771340023371], ["== \"__main__\"", 0.3666608273424433], ["\"__main__\"", 0.3666608273424433], ["== \"__main__\" :", 0.3666608273424433], ["\"__main__\" :", 0.3666608273424433], ["if __name__ == \"__main__\"", 0.3666608273424433], ["__name__ == \"__main__\" :", 0.3666608273424433], ["__name__ == \"__main__\"", 0.3666608273424433], ["#NEWLINE# def", 0.3660904858037785], ["input #NEWLINE#", 0.3636346159860626], ["#NEWLINE# result", 0.36301482629179777], ["result #NEWLINE#", 0.3623843627545547], ["#NEWLINE# print the", 0.3586417079870092], ["be", 0.3578778995819863], ["] #NEWLINE# for _", 0.35774904090371157], ["#NEWLINE# #DEDENT# #DEDENT# return", 0.35688002640106115], ["sum ( a", 0.3559907721094129], ["range ( 1", 0.35263567326465367], ["print ( \"yes\"", 0.35177977911823916], ["a [", 0.35117629899129404], ["s ) :", 0.3492794361593757], ["l , r", 0.3490604794248283], ["are", 0.34892139000878897], ["n , m ,", 0.3473740287222618], ["[ ] #NEWLINE# for", 0.34579822377863606], ["dx", 0.3456503520892902], ["range ( n", 0.3444529064025252], ["char", 0.3433484632335814], ["the result", 0.3426963059356029], ["in range ( 1", 0.34268247118358686], ["#INDENT# n", 0.3424762575363061], ["( solve", 0.3423240996305447], ["( solve (", 0.3421711438085473], ["row", 0.3412291002446706], [", int", 0.34040535082649187], ["print ( solve", 0.3369504258512613], ["print ( solve (", 0.33679693155654816], [", int (", 0.33561273048387513], ["\"yes\" ) #NEWLINE#", 0.3332164104997523], ["range ( n )", 0.33296111886544294], ["1 ) :", 0.33258460466855844], ["print ( \"yes\" )", 0.3308455222362383], ["( \"yes\" ) #NEWLINE#", 0.3308455222362383], ["in the", 0.32851663248203195], ["matrix", 0.3268511355505627], [": #INDENT# n", 0.3267706009491598], ["-1 ) #NEWLINE# #DEDENT#", 0.3265651782374995], ["( \"yes\"", 0.32564068727226003], ["a [ i", 0.3255628672272603], ["#DEDENT# print the", 0.325166521851636], ["read", 0.322776005167441], ["s_i", 0.32247587705009645], ["#NEWLINE# result =", 0.3191710807447049], ["( a , b", 0.3188783463133564], ["dp [ i ]", 0.31713145167790735], ["( 1 , n", 0.3169044630717286], ["#DEDENT# check", 0.31622294706900356], ["-1 ) #NEWLINE#", 0.314075906628797], [") ) #NEWLINE#", 0.3139689990399245], ["stack", 0.3131213041042776], ["winner", 0.3126121352137755], ["boxes", 0.3111588911242851], ["curr", 0.3108095799711887], ["sequence", 0.31046326338511465], ["moves", 0.3104212257010586], ["card", 0.30989151031422263], ["#INDENT# print ( \"no\"", 0.3085555565154949], ["( s ) :", 0.30800861721199185], ["cost", 0.3068870953544299], ["#INDENT# print ( \"yes\"", 0.30683682532637346], ["= sum ( a", 0.3060985360039096], ["\"yes\" )", 0.30589646689811967], ["\"no\" ) #NEWLINE# #DEDENT#", 0.3047264779268714], ["s ) : #INDENT#", 0.30358477751783375], ["( \"yes\" )", 0.3034829375709606], ["print ( *", 0.3033729975828542], ["print ( -1", 0.30222038870380685], ["or", 0.30179116505276127], ["print ( -1 )", 0.3006370207453973], ["\"no\" )", 0.2996627444813488], ["sum ( a )", 0.2987598950715428], ["dist", 0.2981677314028879], ["1 ) : #INDENT#", 0.2980064130065822], ["dy", 0.29721927009873356], ["#NEWLINE# initialize", 0.29689850843951093], ["return -1", 0.29584967524576766], ["exit", 0.29584036039981154], ["read input", 0.295834789332293], [") . lower", 0.29541810427000753], [") . lower (", 0.29541810427000753], ["( n , m", 0.2948291013999328], ["direction", 0.2946650695509702], ["can be", 0.29404471812466076], ["a [ i ]", 0.29385988587104284], ["minimum number", 0.2934773116620576], ["int ( (", 0.2933645325092016], ["the current", 0.29272287565911576], ["( set", 0.29200798316790016], ["#DEDENT# check if", 0.29200412484645594], ["node", 0.2901938145762001], ["\"no\" ) #NEWLINE#", 0.28966888937441543], ["#NEWLINE# print ( solve", 0.2896407600739924], ["exit (", 0.288976686191368], ["n , k", 0.28893596394069454], ["minimum number of", 0.288558344969815], [", r", 0.28553351225253404], ["range ( i", 0.2844105793507313], ["3 #NEWLINE# n", 0.2842621833072627], ["string", 0.2836788282625222], ["in range", 0.2834596925473772], ["#INDENT# print ( -1", 0.28189135753552746], ["in range (", 0.280013239030647], ["int", 0.2779815699488092], ["( \"no\"", 0.27785004980488853], ["print ( \"no\"", 0.27785004980488853], ["element", 0.27661474997337976], ["( set (", 0.2765103407590811], ["#NEWLINE# exit (", 0.2763779602727783], ["#NEWLINE# exit", 0.2763779602727783], [") #NEWLINE# exit", 0.2763779602727783], [") #NEWLINE# exit (", 0.2763779602727783], ["not in", 0.27589044894910003], ["coins", 0.2758673708909588], ["n = len", 0.27564350598980686], ["n = len (", 0.27564350598980686], ["( \"no\" ) #NEWLINE#", 0.27540236078984087], ["( \"no\" )", 0.27540236078984087], ["print ( \"no\" )", 0.27540236078984087], ["neighbor", 0.2753904253239167], [") : #INDENT# n", 0.27521362013269957], ["0 : #INDENT# return", 0.27486535485571967], ["by", 0.27479446272922026], ["( result", 0.27388549461424483], ["output", 0.27367190844608325], ["return -1 #NEWLINE#", 0.2728660974888545], ["in range ( i", 0.27250147959359566], ["length", 0.2724973286385192], ["board [", 0.2717397652291573], [", n )", 0.27168455810861625], ["the result #NEWLINE#", 0.27163582872589925], ["input", 0.27114264097336394], ["result )", 0.27105347179566286], [") #NEWLINE# print the", 0.2681885483426924], [") #NEWLINE# a .", 0.26729555748847905], ["all", 0.26708955872420986], ["exit ( ) #NEWLINE#", 0.26674523033177217], ["exit ( )", 0.26674523033177217], ["def solve ( n", 0.2664139991960872], ["pairs", 0.2661415260153766], ["#INDENT# n = len", 0.2658748318016492], [": if", 0.26564398416239826], ["1000000007", 0.26559773637325784], ["split", 0.26396759751705723], ["( -1 ) #NEWLINE#", 0.263626468260495], ["possible", 0.2630282519224348], ["==", 0.2619545888112979], [") #NEWLINE# print", 0.2613475009489516], ["n , k )", 0.26128591053000966], ["return false #NEWLINE#", 0.261253400300101], ["( ) . lower", 0.26101169836624394], ["( 1", 0.2606864550353106], ["i - 1", 0.2597453609960869], [". split", 0.25936355458774474], [". split (", 0.2591653119333657], [") :", 0.25900364963754374], ["not", 0.2580558072465324], ["1 : #INDENT# return", 0.25790116970559385], ["#NEWLINE# find", 0.2572480209438323], ["m )", 0.25701007942274584], ["lower ( ) #NEWLINE#", 0.25653788376903947], ["strip ( ) )", 0.25634082140859354], ["return false #NEWLINE# #DEDENT#", 0.2561683687211669], ["m , k", 0.25572196406161846], [",", 0.25568028929506725], ["[ i -", 0.2556379510499871], ["'s", 0.25540729454850275], ["#INDENT# n = int", 0.25463612239887795], [") #NEWLINE# for _", 0.254187842182262], [") ) #NEWLINE# check", 0.25416501890891813], ["function", 0.2540961946326931], ["1 , n", 0.25387474009780864], ["i -", 0.253662728486024], ["-1 #NEWLINE#", 0.2534451678172658], ["#NEWLINE# exit ( )", 0.2533681261049287], ["#INDENT# return false #NEWLINE#", 0.25298197903054087], ["return false", 0.25266796763786825], ["a , b", 0.2521182741965058], ["calculate the number", 0.2520182604404676], ["calculate the number of", 0.2520182604404676], ["[ i - 1", 0.25180883603506765], ["line", 0.2506488730215833], ["initialize the", 0.24982223679517757], ["the minimum number", 0.24867842240837043], ["knights", 0.2484360846934758], ["split (", 0.24804367824392956], [") #NEWLINE# result", 0.24783266773720944], ["sizes", 0.24763924522862865], ["#NEWLINE# find the", 0.24715640266776603], ["** 0.5 ) +", 0.24676017902597389], ["i ] #NEWLINE# #DEDENT#", 0.24635709774445258], ["equal", 0.24553957788258232], ["to the", 0.24516641255832824], [", m", 0.24440951550954904], ["#NEWLINE# a .", 0.24425643791135515], ["defaultdict", 0.24407696123335876], ["= a [ i", 0.24370399884063354], ["the minimum number of", 0.24366366040485818], [", m , k", 0.2431378331477733], ["time", 0.24275170301744653], ["= a [", 0.24224166302920044], ["return -1 #NEWLINE# #DEDENT#", 0.24205438744458227], ["height", 0.24175210007125258], ["#NEWLINE# check if the", 0.24156662589294597], [": #INDENT# return false", 0.24101935819986936], ["order", 0.2408665216778649], ["it", 0.24050053381303582], ["power (", 0.24024013141302647], ["= int ( input", 0.2401089824206024], ["is a", 0.23990588199721083], ["problems", 0.23945567345352936], ["read the", 0.23934886065477431], ["2 #NEWLINE#", 0.23883210947928313], ["strip ( ) .", 0.23851103485466627], ["strip ( ) #NEWLINE#", 0.23842052834391878], [") #NEWLINE# result =", 0.23741648891978476], ["#INDENT# return false", 0.23711132379176186], ["result ) #NEWLINE#", 0.23708567531290298], [") . split", 0.23698922192957927], [") . split (", 0.2369305719998428], ["at", 0.23617274174683336], ["r ,", 0.2359235244656348], ["day", 0.2351915180408441], ["min_cost", 0.23474081845685354], ["prefix_sum", 0.23430925304787678], ["// 2 #NEWLINE#", 0.23394117729169348], ["#DEDENT# calculate", 0.23376649355333118], ["solve ( ) :", 0.2335629963845293], ["def solve ( )", 0.2335629963845293], ["there", 0.2332632669293533], ["position", 0.2330775685799859], ["if s [", 0.23274661297164975], ["#INDENT# result", 0.2322215405525248], ["size", 0.2312938311275425], ["if", 0.23108462334592356], ["x [ i", 0.2304235531505423], ["( ) . split", 0.22932968559802347], ["calculate the minimum", 0.22897791071366724], ["a . sort (", 0.22877649223687188], ["a . sort", 0.22877649223687188], ["than", 0.2285611353257054], ["power", 0.2273476442438421], ["#NEWLINE# #DEDENT# def solve", 0.22698278943795416], ["int ( ( n", 0.2267323303435757], ["array", 0.22654378205771494], [") #NEWLINE# initialize", 0.22632180369422142], ["0.5 ) + 1", 0.22526274126360488], ["0.5 ) +", 0.22526274126360488], ["#NEWLINE# print ( *", 0.22431617823344582], ["( -1 )", 0.22416845707518238], ["#DEDENT# #DEDENT# #DEDENT# return", 0.22355759647996168], ["iterate", 0.2230737076771724], ["days", 0.22300252543628837], ["#DEDENT# read", 0.22288900205423293], ["i - 1 ]", 0.2225204613658114], [": #INDENT# result", 0.22206284079425945], ["result #NEWLINE# print (", 0.22203065306382408], ["result #NEWLINE# print", 0.22203065306382408], ["current_position", 0.22142435721147008], ["#NEWLINE# a . sort", 0.22108818770640387], [") #NEWLINE# a", 0.22082640861789485], ["== '__main__'", 0.22048128063907313], ["'__main__' :", 0.22048128063907313], ["if __name__ == '__main__'", 0.22048128063907313], ["'__main__'", 0.22048128063907313], ["__name__ == '__main__'", 0.22048128063907313], ["== '__main__' :", 0.22048128063907313], ["__name__ == '__main__' :", 0.22048128063907313], ["2 #NEWLINE# #DEDENT#", 0.22017059384494453], ["= int", 0.22004330732785363], ["= int (", 0.22004330732785363], [": i", 0.21952453536324332], ["\\", 0.2189407348220525], ["#NEWLINE# #DEDENT# check", 0.21872240989657066], ["n - 1", 0.21866240959428712], ["'__main__' : #INDENT#", 0.2185253046390088], ["== '__main__' : #INDENT#", 0.2185253046390088], [", n ) :", 0.21694341220428465], [") #NEWLINE# find", 0.21685006105938484], ["create", 0.21669352691972804], ["len ( set", 0.21649653292170215], ["print ( result", 0.2164478312474252], ["#DEDENT# calculate the", 0.21594621890796875], ["x ) %", 0.21536287652935068], ["#DEDENT# n", 0.21503204047060193], [", a )", 0.21495805665405707], ["* x ) %", 0.21478518226558008], ["1 ] :", 0.2147285071992749], ["print the result", 0.2144579974953194], ["area", 0.2144117048557855], ["a , b )", 0.21361020542073944], ["hours", 0.21331171311921351], ["n = int (", 0.2130016688009674], ["n = int", 0.2130016688009674], ["1 and", 0.21291637126920523], ["#NEWLINE# #DEDENT# check if", 0.21282900300544966], ["input #NEWLINE# n", 0.21277171116214816], ["( result )", 0.21273909915746309], ["#NEWLINE# operations", 0.21268754111077826], ["v1", 0.21233591448843978], ["l ,", 0.2120671409414378], ["if s", 0.21146588740443548], ["len ( set (", 0.21140802195747865], ["queue", 0.21058068670937236], ["s_i [", 0.21056050262044052], [") #NEWLINE# find the", 0.21046785418932307], ["prefix", 0.21036178943135686], ["x [ i ]", 0.21016044690940894], ["cards", 0.21007416095019427], ["cnt [", 0.20991244786393623], ["update", 0.20845867873313725], ["( l , r", 0.20845174189310184], ["maximum number", 0.2083160306133981], ["c = map", 0.20823271758440098], ["c = map (", 0.20823271758440098], [", c = map", 0.20823271758440098], ["#NEWLINE# #INDENT# if", 0.20806626643206635], ["two", 0.2078322635236843], ["j )", 0.20770783025092174], ["store", 0.2070679537645426], ["if there", 0.20575772218797886], ["a_i", 0.20558513052598545], ["dp [ i -", 0.20515718148823633], [", b )", 0.20503493041842527], ["\"yes\" ) #NEWLINE# print", 0.2049694687996734], ["import math #NEWLINE# def", 0.2045936015753313], ["math #NEWLINE# def", 0.2045936015753313], ["[ ] #NEWLINE#", 0.20429573784301408], ["[ i :", 0.2038914485929527], ["the input", 0.2038254401048128], ["k ) :", 0.20314682809533896], ["painters", 0.20301729221992157], ["( a [", 0.20277967999970434], ["dx ,", 0.20243655176762276], ["print the result #NEWLINE#", 0.20239646750142065], ["a [ 0", 0.20218932577664603], ["1 , int", 0.20216042282507776], ["1 , int (", 0.20216042282507776], ["that can", 0.20197095613389848], ["digit_count", 0.2019036014886916], ["len ( s )", 0.20179661582620062], ["( a [ i", 0.20145262905743827], ["is_valid", 0.2009076158519895], ["= [ ]", 0.20079407022254042], [") !=", 0.20014143553441993], ["the result #NEWLINE# print", 0.2001234000881826], ["print ( result )", 0.19939566411884202], ["range", 0.19891318136531125], ["#DEDENT# solve (", 0.19887995548611642], ["#DEDENT# solve ( )", 0.19887995548611642], ["#INDENT# count", 0.19799341714395868], ["graph", 0.19778818154156985], ["x , y", 0.19770522982785324], ["city", 0.1973226070653647], ["( 1 , int", 0.19714594393571916], ["store the", 0.196909950707622], ["n + 1", 0.19674624463253296], [", y", 0.1966544665259234], [", k ,", 0.19634445214844568], ["= abs (", 0.19589268235699112], ["= abs", 0.19589268235699112], ["1 , n +", 0.1958650508551675], [", k ) :", 0.1957067363894807], [", m ,", 0.19535397828373033], ["winner =", 0.19505928860578683], ["\"no\" #NEWLINE#", 0.19460815106944923], ["the answer", 0.1944954631603044], ["#DEDENT# #DEDENT# print the", 0.1942380337574146], ["that can be", 0.19356884987105052], ["* x )", 0.19346326002487907], ["numbers [", 0.19321978351952296], ["values", 0.193216177539993], ["#NEWLINE# calculate the number", 0.1930580650546398], ["// 10", 0.19294433899240515], ["#NEWLINE# #DEDENT# print the", 0.1927507743040955], ["test", 0.19255463549467874], ["diff", 0.19238643291156643], ["max_sum", 0.19238189057640068], ["+ 1 ] :", 0.19219059868996582], ["blocks", 0.1917957946691487], ["solve ( ) #NEWLINE#", 0.19153196070974657], ["#NEWLINE# d = list", 0.19144282519666683], ["the maximum number", 0.1909259439389418], ["return true #NEWLINE#", 0.19089635290620854], [": #INDENT# return -1", 0.19056363362531611], ["result [", 0.19054163660150922], ["#NEWLINE# #DEDENT# calculate", 0.19052542344483941], ["with the", 0.19028154144935155], ["#INDENT# return -1", 0.19012204626832332], ["components", 0.18990649214017216], ["character", 0.1895538882524125], ["max_blocks", 0.18921308003461088], [") ) #NEWLINE# result", 0.18913233639891794], ["nums", 0.18895542617382188], ["y =", 0.18835135141507803], ["line [", 0.18800823435637284], ["( result ) #NEWLINE#", 0.18800535726040246], ["name", 0.1879651574980325], ["#INDENT# dp [ i", 0.18755158105968356], ["the string", 0.18733229009568422], ["password", 0.18726646309284206], ["elements", 0.18711480553638546], ["files", 0.18708223159513898], ["script", 0.1866586159331119], ["return true", 0.1864914180493532], ["n =", 0.18609275512998819], ["#NEWLINE# iterate", 0.1860426951326141], ["we", 0.1853938294683269], ["int ( math", 0.18527904459599592], ["int ( math .", 0.18527904459599592], ["the total", 0.18491626933535707], [") ==", 0.18490507620428617], ["( -1", 0.18456349710115505], ["s [ i", 0.1845564173395925], ["maximum number of", 0.18447675815485237], ["#NEWLINE# else", 0.1844062416654299], ["#NEWLINE# else :", 0.1844062416654299], ["#DEDENT# solve", 0.1840936659238869], ["v2", 0.18346669238507735], ["#DEDENT# find", 0.18332536912303116], ["t ) :", 0.1833244461297528], ["#DEDENT# def solve (", 0.18320845929268453], ["#DEDENT# def solve", 0.18320845929268453], ["#DEDENT# #DEDENT# if __name__", 0.18275881907698305], ["#NEWLINE# x", 0.18275534883205324], ["#NEWLINE# #DEDENT# read", 0.18238847311464038], ["complexity", 0.18215526414085498], ["return true #NEWLINE# #DEDENT#", 0.18215432209985988], ["n + 1 )", 0.18213954809435187], ["'' . join (", 0.18190195211157334], ["b , c", 0.18161308447510172], ["range (", 0.18134966802397587], ["i , n )", 0.181263415064034], [") ) #NEWLINE# x", 0.18109767725990572], ["false #NEWLINE# #DEDENT#", 0.18088513468853454], ["#NEWLINE# #DEDENT# solve (", 0.18073753127852427], ["return \"no\" #NEWLINE#", 0.18037807641248582], ["return \"no\"", 0.18037807641248582], ["b = map", 0.180316634292986], [", b = map", 0.180316634292986], ["b = map (", 0.180316634292986], [") #NEWLINE# #DEDENT# solve", 0.18016731793060353], ["p , k", 0.1792013096751606], ["#NEWLINE# calculate the minimum", 0.17911386844388025], ["strings", 0.17897711285060797], ["l , r )", 0.1786194638923474], ["1000000007 )", 0.17859597610686057], ["times", 0.1785399919177607], ["sum of", 0.1784320108984091], ["1 ] =", 0.17814999345045612], ["tiles", 0.17799097304321948], ["#NEWLINE# #DEDENT# calculate the", 0.1778775941186535], ["#INDENT# return 0", 0.17786382909706874], ["1 ] : #INDENT#", 0.17782267819995287], ["- 1 ) )", 0.17751087648121364], ["a [ 0 ]", 0.1770055316659143], ["#DEDENT# read input", 0.17693845271089043], ["edges", 0.1768866946765749], ["subsequence", 0.17677032005952129], ["\"no\" #NEWLINE# #DEDENT#", 0.17665809523055276], [") ) #NEWLINE# initialize", 0.17652487070718334], ["create a", 0.17623816582905208], [": #INDENT# count", 0.17615694421200717], ["calculate the maximum", 0.17580866794879335], ["#DEDENT# n = int", 0.1757173309740599], ["found", 0.1756766483519588], ["int ( input", 0.17510219206322833], ["if s [ i", 0.17497959669419044], ["operations =", 0.17473599622182792], ["#INDENT# return -1 #NEWLINE#", 0.1744655577566045], ["( num", 0.1743549477462581], [": check if", 0.17425959212654404], [") : #INDENT# for", 0.17413608841133002], ["gcd ( a", 0.17413303858359483], ["#DEDENT# n =", 0.17325054992794559], ["length of", 0.17302691366262668], [": #INDENT# return 0", 0.17291381652042936], ["over", 0.17288431882182007], ["range ( i ,", 0.17273919493334502], [". #NEWLINE#", 0.1724160823329417], ["= [ ] #NEWLINE#", 0.17234720974017909], ["#NEWLINE# #DEDENT# solve", 0.17204865561381666], ["num in", 0.1719894504515816], ["== s", 0.17168601117844212], [", d", 0.17165534107535516], ["digits", 0.1716025867869064], ["the array", 0.17138023969173416], ["then", 0.1706547732474423], ["1 , n )", 0.17046260768005564], ["total_cost", 0.17041837704608978], ["#NEWLINE# initialize the", 0.17033032148179048], ["cases", 0.17028714055200345], ["s .", 0.17025737296437504], ["target", 0.16994445665505425], ["a and", 0.16946397018900242], ["( n , a", 0.16900934643315127], ["move", 0.1689701482399324], ["#INDENT# dp", 0.16875406874725046], ["( board", 0.16875397813026288], ["return 0", 0.16868123571087307], [") #NEWLINE# output", 0.16820845627504247], ["read input #NEWLINE#", 0.168186853580591], ["-1 )", 0.1678613254613632], ["( solve ( n", 0.16785845575818933], ["min_days_off", 0.16771055524183365], [", b , c", 0.16755278819081018], ["n <", 0.16750831424367044], ["a and b", 0.16736282920381979], ["b > 0", 0.16710566927390136], ["the first", 0.16710102112125702], ["while true", 0.1667518397628582], ["while true :", 0.1667518397628582], ["b #NEWLINE#", 0.16668210242676046], ["the maximum number of", 0.1666256664107679], ["max_num", 0.1665698837371507], ["i , j )", 0.16617260981674242], ["i ] +", 0.1661579709708032], ["lines", 0.16610790443848328], ["[ ]", 0.16605831253168102], ["table", 0.16600273856300218], [") %", 0.16583207685085885], ["998244353", 0.16577062835502707], ["a )", 0.16566091684737494], ["#NEWLINE# def solve (", 0.16561304252085177], ["#NEWLINE# def solve", 0.16561304252085177], [", k ) )", 0.16548721292203444], ["3 #NEWLINE# n =", 0.1654395823851396], [") #NEWLINE# operations", 0.1652468418455702], ["table [", 0.1652444102075097], ["graph [", 0.16494033544358336], ["abs ( a", 0.16490796745381284], ["#DEDENT# find the", 0.16445761891173413], ["#NEWLINE# calculate the maximum", 0.16411682140237235], ["print ( m", 0.1641060809282112], ["y = map", 0.16407275882331365], [", y = map", 0.16407275882331365], ["y = map (", 0.16407275882331365], ["left ,", 0.1638312751908382], ["#INDENT# if n", 0.16380781094364338], [") ) #NEWLINE# print", 0.16358520658705294], ["string #NEWLINE#", 0.1633518888988425], ["{ } #NEWLINE# for", 0.16321194352235655], ["minutes", 0.162893635141575], ["between", 0.162789311864257], ["solution", 0.16274115610985143], [", a [", 0.16265849803988072], ["max_days_off", 0.16248373117498258], ["998244353 #NEWLINE#", 0.1624468656849839], ["n , a )", 0.16209717797438405], ["#DEDENT# return a", 0.16193122923704392], [": calculate", 0.161852960455484], ["1 ) %", 0.16182417180780168], ["arr [ j", 0.16173168124778897], ["no", 0.16168993447547722], [", t )", 0.16154508842805954], ["x +", 0.1613643673150857], ["] <", 0.16113236053997937], ["#DEDENT# check if the", 0.16108637332016615], ["= a", 0.16106235497298863], ["k == 0 :", 0.16105533675387798], ["read the input", 0.16079288798942812], [", r ,", 0.16069570614778741], ["k )", 0.16046839243969704], [") : #INDENT# dp", 0.16034102532163497], ["sys #NEWLINE# from collections", 0.16031655640961953], ["j ,", 0.16026218145018115], [") , int (", 0.16018341442349068], [") , int", 0.16018341442349068], ["max_idx", 0.15995351155161938], ["#NEWLINE# create", 0.1599322465074821], ["+ r", 0.1593515914632902], ["sets", 0.15929137789226544], ["( points", 0.1592366382791099], ["-1 #NEWLINE# #DEDENT#", 0.1588801097508898], ["return \"no\" #NEWLINE# #DEDENT#", 0.1584556721570249], ["i :", 0.15832022456080294], ["and y", 0.1581742800154702], [">= 2", 0.15809048263601433], ["( n , s", 0.15808337271914538], ["#INDENT# if s [", 0.15793545381758284], ["cnt1", 0.1578054860988532], ["wins", 0.15766735414526567], ["operation", 0.15752236885279153], ["i - 1 ,", 0.1574453561334565], ["inv", 0.15738815763873576], ["// 2 #NEWLINE# #DEDENT#", 0.15730093103555992], ["#NEWLINE# x =", 0.15689940483643702], ["( x +", 0.15683305993507468], ["while b", 0.1566792302274544], ["% 2 == 0", 0.15650988634716234], ["2 == 0", 0.15650988634716234], ["#DEDENT# return res", 0.15645740985684536], ["if a +", 0.15643241887348094], [", x = map", 0.156318606208186], ["x = map", 0.156318606208186], ["x = map (", 0.156318606208186], ["3 #NEWLINE# n ,", 0.15617956289345636], ["#NEWLINE# read", 0.15613329805262766], ["% b", 0.15589315904516673], ["- 1 ) %", 0.15577642139089753], ["square", 0.15564703602761837], ["+ (", 0.155229631517065], ["mex", 0.15515914886125615], ["min_idx", 0.15513452721786627], ["\"__main__\" : #INDENT# main", 0.15508849440025874], ["abs ( a [", 0.15483319916699262], ["( operations", 0.1546483573666196], ["cases #NEWLINE#", 0.1545054411050592], ["( *", 0.15429263206504334], ["through", 0.1542606537953119], ["k == 0", 0.15400137562455063], [" #INDENT# #DEDENT# return", 0.15390484791594242], ["#INDENT# #DEDENT# return", 0.15390484791594242], [": calculate the", 0.1535967862614764], ["reachable", 0.15325033990009296], ["to store", 0.15298423784529], ["#NEWLINE# while true :", 0.15291007670737825], ["#NEWLINE# while true", 0.15291007670737825], ["#NEWLINE# if the", 0.15288103739558684], ["last", 0.1528678865946981], ["n // 2", 0.15273387928403911], ["ways", 0.15266065453580172], ["2 == 0 :", 0.15243512805521195], ["return n", 0.15204792995200475], ["#NEWLINE# #DEDENT# return res", 0.15201472041854283], [") #NEWLINE# #DEDENT# return", 0.15197341589430263], ["dp_odd", 0.1519265264082773], [": #INDENT# if n", 0.15180229445190305], ["function to", 0.15173057016877126], ["to store the", 0.15153591628025043], ["x + 1", 0.15142410594124478], ["import defaultdict", 0.15118193981827618], ["from collections import defaultdict", 0.15118193981827618], ["collections import defaultdict", 0.15118193981827618], ["#INDENT# ans += 1", 0.1508326326200944], ["of a", 0.15070717151959895], ["append ( int", 0.15062975327328854], [". append ( int", 0.15062975327328854], ["append ( int (", 0.15062975327328854], ["n , a", 0.15054561687121432], ["m = int", 0.15042803257449172], ["m = int (", 0.15042803257449172], ["if it", 0.15013328233459547], ["the sum", 0.15011976319262738], ["= set", 0.15010243173157595], ["= set (", 0.15010243173157595], [": x", 0.15006084340525078], ["#INDENT# return 0 #NEWLINE#", 0.15000405555226612], ["n - 1 )", 0.1499571983623813], ["return \"yes\"", 0.14985899707662792], ["n , t", 0.1492857215106849], [", i ,", 0.1490410773986743], [", n + 1", 0.14889841678052326], ["m ) :", 0.14872803810063812], ["#NEWLINE# a", 0.1487278754505382], ["sys #NEWLINE# from", 0.14867945535759125], ["import sys #NEWLINE# from", 0.14867945535759125], ["longest", 0.14865917481287447], ["and the", 0.14856542068704645], ["} #NEWLINE# for", 0.14831485831230234], ["required", 0.14830110880592862], [": #INDENT# dp", 0.14822520069985531], ["a >", 0.14811533250378345], ["#NEWLINE# #DEDENT# find", 0.14805144596685393], ["l , r ,", 0.14804323150440915], ["if n <", 0.14778817629266458], ["[ i ] +", 0.14774666125038988], ["s_i [ i", 0.1475175036941012], ["needed", 0.1474956975749021], ["n ** 0.5 )", 0.14740679360922956], ["#DEDENT# return res #NEWLINE#", 0.1472564657581334], ["y >", 0.14713665171048937], [") and", 0.14707384451877004], ["hull", 0.14699577582828027], [") ) #NEWLINE# output", 0.14698408020273404], [", a ) :", 0.14692189828165902], ["#NEWLINE# #DEDENT# read input", 0.14683618291345216], ["#NEWLINE# count", 0.14670639233425228], ["'' .", 0.14668989165229648], ["'' . join", 0.14668989165229648], ["operations )", 0.1466321026632168], ["result [ i", 0.14658368871867597], ["#INDENT# return \"no\"", 0.14634111994392912], ["#INDENT# return \"no\" #NEWLINE#", 0.14634111994392912], ["defaultdict #NEWLINE#", 0.14631898361071974], ["import defaultdict #NEWLINE#", 0.14631898361071974], ["collections import defaultdict #NEWLINE#", 0.14631898361071974], [": check", 0.14619857083290114], ["return 1", 0.14616399522466983], ["f ,", 0.14603861913139443], ["k ,", 0.14602759533908477], ["answer #NEWLINE#", 0.14594512067184737], ["int ( input (", 0.14593385481002677], ["** 0.5 )", 0.14524118197295707], ["win", 0.14508926218971593], ["iterate over", 0.1449585623758527], ["#INDENT# #DEDENT# if", 0.1449085073556077], [" #INDENT# #DEDENT# if", 0.1449085073556077], ["length of the", 0.14485409545121086], ["from the", 0.1447435964768068], ["of each", 0.14455330384049828], ["#NEWLINE# print ( result", 0.14446354705996856], ["true :", 0.14442196002220933], ["b : #INDENT# a", 0.14418384224787267], [", then", 0.14406883327959172], [") #NEWLINE# dp [", 0.14405543371859755], ["wins #NEWLINE#", 0.14372040283950754], [", k =", 0.14363764227150816], ["test cases #NEWLINE#", 0.143568349458591], ["test cases", 0.143568349458591], [": #INDENT# return \"no\"", 0.14354112890390122], ["_to", 0.14345313934889892], ["#INDENT# if a", 0.14313526722060943], ["] = a [", 0.14303311952861117], ["the longest", 0.14269109724516899], ["a #NEWLINE# #DEDENT# def", 0.1426588098637914], ["0 : #INDENT# print", 0.14260709892294687], ["count the", 0.1424363488750663], ["calculate the minimum number", 0.14241815167322286], ["volume", 0.14226711790748744], ["( f", 0.14217869000737507], ["s ) -", 0.14208536879632264], [". sqrt", 0.14196375388225232], [". sqrt (", 0.14196375388225232], ["#INDENT# while b", 0.14153911700314722], [": #INDENT# while b", 0.14153911700314722], ["% a", 0.1415232049345177], ["#DEDENT# return a #NEWLINE#", 0.14146404882469266], ["tree", 0.14145943137423855], ["_cost", 0.14142336870482322], ["+ 1 )", 0.14134257580837165], ["lambda x : x", 0.141245299677004], ["x : x", 0.141245299677004], ["return 0 #NEWLINE#", 0.1409172803803013], ["#NEWLINE# output", 0.1407774880481107], ["#NEWLINE# #DEDENT# n =", 0.14074740224164903], ["float ( 'inf' )", 0.14070811880362244], ["float ( 'inf'", 0.14070811880362244], ["vectors", 0.14064863283914739], ["] for _", 0.14064301631451845], ["] for _ in", 0.14064301631451845], ["( s ) -", 0.14057832264526735], ["is not", 0.1405518924238133], [", r )", 0.1405180868879647], ["] , a", 0.14046121939515735], ["] , a [", 0.14046121939515735], ["will", 0.14037569833265856], ["m , k ,", 0.14027795232259896], ["10 ,", 0.1402773643172282], ["line2", 0.13996787414067943], ["line1", 0.13996787414067943], ["% b #NEWLINE#", 0.13994724091714406], ["#DEDENT# test", 0.13991697337322298], ["equal to", 0.13980831914285832], ["( m", 0.13980492689057689], ["divisible", 0.13950497864643216], ["divisible by", 0.13950497864643216], ["dp_even", 0.13926598254092104], ["dp_odd [", 0.13926598254092104], ["key = lambda", 0.1391834055179053], ["update the", 0.13906442915172565], ["divisors", 0.13899827564377581], ["field", 0.13878247198272686], ["gcd ( a ,", 0.1386451793726156], ["component", 0.1385279783671773], ["value", 0.13843007779873143], [", dy", 0.13837142927801252], ["dx , dy", 0.13837142927801252], [") ) #NEWLINE# find", 0.13825176040901124], ["#DEDENT# #DEDENT# check", 0.1381649345750911], ["2 == 0 and", 0.13803131327453894], ["b #NEWLINE# #DEDENT#", 0.13798497472565202], ["+= a [ i", 0.13797046097619195], ["\"__main__\" : #INDENT# n", 0.1379278690088145], ["// a", 0.13787136194780644], ["cubes", 0.13762931590407576], ["k ) )", 0.1374701648249101], ["[ i ] ==", 0.13727697588780485], ["( m )", 0.1371360368314321], ["0 or", 0.1370738987448878], ["digit in", 0.13706901456695267], ["k ) : #INDENT#", 0.13679920982513463], ["v [ i", 0.13675778964867044], ["v [ i ]", 0.13675778964867044], [": #INDENT# if y", 0.13652635927277007], ["#INDENT# if y", 0.13652635927277007], ["1000000007 ) #NEWLINE#", 0.13649491505619973], [", n +", 0.13649428549775622], ["1 #NEWLINE# x", 0.13640469171047018], ["b #NEWLINE# #DEDENT# return", 0.13636465406211368], ["= 0 ,", 0.1362417086209069], ["digit #NEWLINE#", 0.13607027578632597], ["min_lcm", 0.13604382084694674], ["input #NEWLINE# n ,", 0.13604333839569593], ["b >=", 0.13590533264615234], ["( a [ 0", 0.1358474871190568], ["b , c )", 0.1358109244334518], ["right =", 0.13580951363626584], ["if the current", 0.13576548039598368], ["#NEWLINE# time", 0.13574413367131827], ["res = 1 #NEWLINE#", 0.13560205236654155], ["res = 1", 0.13560205236654155], ["right_most_packman", 0.1355781053630482], [") #NEWLINE# initialize the", 0.13555536098535922], ["parent", 0.13554119937911566], ["arr ) :", 0.13533852403875352], ["screen", 0.1351414765013167], ["1 )", 0.13498391966920076], ["( y", 0.1347444531910052], ["multiple", 0.13460526180540874], ["dp [ n", 0.13443519172782792], ["given", 0.1344182338711267], ["#NEWLINE# operations =", 0.13438324182804878], ["#INDENT# while b :", 0.1343079077497189], ["the answer #NEWLINE#", 0.13424149530247942], ["#NEWLINE# y =", 0.13399952144709779], ["v [", 0.13391868635452528], ["n , s", 0.13388123492221451], ["= solve", 0.13380101050936186], ["= solve (", 0.13380101050936186], ["for num", 0.13377983008125935], ["for num in", 0.13377983008125935], ["lengths", 0.13373485101526866], ["n - i -", 0.1332581513807884], ["] [ c", 0.1331928047098535], ["k - 1 )", 0.1331467750998515], ["all (", 0.13309008302386094], ["grid [", 0.13303667655951423], ["count += 1", 0.13295698769282638], ["count += 1 #NEWLINE#", 0.13295698769282638], ["#NEWLINE# x = list", 0.13273649820036348], ["1 #NEWLINE# #DEDENT# elif", 0.13251492634634632], ["t ) : #INDENT#", 0.1323347987517673], ["i ] ==", 0.13229378649851184], ["if all", 0.13223892313738295], ["% 2 ==", 0.13221079308254963], ["len ( s", 0.13212336990520684], ["1 ) )", 0.1320488900123894], ["\"-\"", 0.13202168178558182], ["else : #INDENT# return", 0.13197961537372543], ["i , n", 0.13186331135015453], ["has", 0.13174486283307296], ["( * a )", 0.13166344095520802], ["( * a", 0.13166344095520802], ["true #NEWLINE# #DEDENT#", 0.13157756908873253], ["n , m )", 0.13152418900093327], ["def_y", 0.1314600872633451], ["for digit", 0.1312328592895817], ["for digit in", 0.1312328592895817], ["points )", 0.13119697972198624], ["name =", 0.13118556468484957], ["vertex", 0.13114720632509697], ["count +=", 0.13111109465240073], [") ) #NEWLINE# count", 0.1310379178544172], ["#INDENT# if s", 0.13089006257256824], ["p ,", 0.13086859919584987], ["#NEWLINE# b = list", 0.13082269814293712], [", s ,", 0.13069578573499266], ["[ n //", 0.13055123360863982], ["( i , n", 0.13045227690046524], ["#NEWLINE# #DEDENT# find the", 0.13041589157700614], ["output :", 0.13029702504539797], ["#NEWLINE# output :", 0.13029702504539797], [") #NEWLINE# output :", 0.13029702504539797], ["output #NEWLINE#", 0.12997843390068023], ["count the number of", 0.12983695120595828], ["count the number", 0.12983695120595828], ["i : i +", 0.12963527871307007], ["[ i : i", 0.12963527871307007], ["i : i", 0.12963527871307007], ["#INDENT# res +=", 0.12957654191286447], [", m )", 0.12956836232075264], ["points [", 0.12939223339669967], ["j ) #NEWLINE#", 0.1293395554227715], ["steps =", 0.12920191753068216], ["_sum", 0.12918199139967074], ["( t ) :", 0.12867686404275372], ["#INDENT# dp [", 0.12862126429493503], ["% b #NEWLINE# #DEDENT#", 0.1285685569277602], ["a % b #NEWLINE#", 0.1285685569277602], [": #INDENT# res +=", 0.12838780837023842], ["26", 0.12835549442179434], ["end", 0.12830394830043457], ["matrix [", 0.12815524907396497], ["( key = lambda", 0.12806277483047823], ["possible to", 0.12793468869645003], ["the length", 0.12782912691216464], ["#NEWLINE# create a", 0.12768679260241297], ["= int ( (", 0.12766928857815907], ["join ( [", 0.1276186952452015], [". join ( [", 0.1276186952452015], ["num )", 0.12760471342911925], ["x ) % mod", 0.1268426884300282], ["#NEWLINE# m = int", 0.12682098547354953], ["child", 0.12677534541433774], ["left , right", 0.12668654957390413], ["range ( m", 0.12662371683397952], ["dp_even [", 0.1266054386735645], ["d = list", 0.1265829638971109], ["d = list (", 0.1265829638971109], ["readline #NEWLINE# def", 0.12646859308795871], [". readline #NEWLINE# def", 0.12646859308795871], ["1000000007 #NEWLINE#", 0.12639552069472348], ["+= i", 0.12631726200229867], [") #NEWLINE# #DEDENT# check", 0.12630330070299695], ["n or", 0.12624984305631023], ["1 ,", 0.12623091814953327], ["= lambda x :", 0.12617943330746606], ["there is", 0.1261561138251048], ["res #NEWLINE# #DEDENT# def", 0.12607893722630079], ["#NEWLINE# for", 0.12594581905178698], [": #INDENT# if a", 0.1258818171749896], ["] #NEWLINE# while", 0.12587076285396923], ["return 1 #NEWLINE#", 0.1258603789386096], ["#INDENT# dp =", 0.12583275672973943], ["= ( x", 0.12571959146530928], ["( ) #NEWLINE# calculate", 0.12570910273930505], ["#NEWLINE# #DEDENT# n", 0.1257029107253475], [") : calculate", 0.12569377553346114], ["output #NEWLINE# print", 0.12566843484758405], ["output #NEWLINE# print (", 0.12566843484758405], ["return ans", 0.12562589489112852], ["#NEWLINE# from collections import", 0.12548368341051164], ["#NEWLINE# from collections", 0.12548368341051164], ["arr ) : #INDENT#", 0.1253955934251219], ["it 's", 0.125339803412085], ["coords", 0.12532760891920508], ["while true : #INDENT#", 0.1252548688903271], ["t ,", 0.1251440560448234], [": i +", 0.12508710939479692], [", j )", 0.12506522737931333], ["difference", 0.12495298510424284], ["weight", 0.12490320394007927], ["return res", 0.12479591010130367], ["the sum of", 0.1243595705168968], ["the length of", 0.1243256211553192], ["color", 0.12430151903129417], ["stones", 0.12421541081252001], ["n * m", 0.12416789436141866], ["cases #NEWLINE# print (", 0.12411785428929588], ["cases #NEWLINE# print", 0.12411785428929588], ["test cases #NEWLINE# print", 0.12411785428929588], ["return sum", 0.12398908284867509], ["] if", 0.1239879579239544], [", l , r", 0.12391095858138754], ["array #NEWLINE#", 0.12380822710824049], ["#INDENT# res = 1", 0.12380622287170621], ["t = input", 0.12378577244225344], ["t = input (", 0.12378577244225344], [": check if the", 0.12377697696620565], ["and arr [", 0.12372316753882626], ["and arr", 0.12372316753882626], ["lcm (", 0.12364471468542472], ["#NEWLINE# print the result", 0.12351103406364626], ["bottles", 0.12348750040358236], ["_pieces", 0.12345570605174967], ["a ) )", 0.12338017983643065], ["if n", 0.12335287909959124], ["all possible", 0.12319477131054173], ["n , s )", 0.12318190112212508], ["( f )", 0.122909375155975], ["( diff", 0.12286487384635914], [": #INDENT# res =", 0.12274793420037745], ["== 0 or", 0.12274457970676925], ["0 , 0 #NEWLINE#", 0.12272342149598016], ["( n ) )", 0.122654655822436], ["m ) : #INDENT#", 0.1225502742546615], [") % n", 0.12252818278599703], ["remaining", 0.12239971709097826], ["( r ,", 0.12219466549636333], ["there are", 0.12218044209547459], [", l =", 0.12210297406150687], [", l", 0.1220135354708855], [") : calculate the", 0.12198860056306185], ["( ) #NEWLINE# check", 0.12186465946227243], ["1 ] for", 0.12183782074956725], [") #NEWLINE# g", 0.12181571430647235], ["min_cost (", 0.12181220442417265], ["math . sqrt (", 0.12170568468489511], ["math . sqrt", 0.12170568468489511], ["return res #NEWLINE#", 0.12168897383643971], ["key = lambda x", 0.1216374362519274], ["def min", 0.121635637414921], ["#NEWLINE# #DEDENT# return a", 0.12152260846486578], ["( a ,", 0.12151464127101243], ["greater", 0.12144043115024877], ["#DEDENT# return count", 0.12139686371601967], ["is_valid (", 0.12136559951657384], ["else : #INDENT# print", 0.12135941201484925], [") }", 0.12133012912448969], ["append ( list", 0.12129510897352923], ["append ( list (", 0.12129510897352923], [". append ( list", 0.12129510897352923], ["0 #NEWLINE# for i", 0.12105467298734414], ["dist [", 0.12098881421505034], ["dp [ 0 ]", 0.12096296670317608], ["dp [ 0", 0.12096296670317608], ["2 ==", 0.1208717952830218], [", c ,", 0.12083747877742042], ["1 #NEWLINE# a", 0.12082691256985716], ["visited .", 0.12073030488157481], ["power ( x ,", 0.12060792445342391], ["power ( x", 0.12060792445342391], ["player", 0.12040289382965932], ["angle", 0.12039114608805856], ["b , c ,", 0.12033720968912617], ["#NEWLINE# x ,", 0.12032950304625206], ["90", 0.12032223207224628], ["q [ i", 0.12029886921311757], ["float (", 0.12028571456772702], ["% 10", 0.12021966729599784], ["make", 0.12016703949199005], ["== 0 and", 0.12012154551208913], ["% 1000000007", 0.11997661262764721], ["( ) #NEWLINE# ans", 0.11997590707641786], ["return 1 #NEWLINE# #DEDENT#", 0.1199581464769062], ["step", 0.11990541718493036], ["c [ i", 0.11980658925392017], ["int ( sys .", 0.11953211051838047], ["= int ( sys", 0.11953211051838047], ["int ( sys", 0.11953211051838047], ["count =", 0.11945733246908152], ["less", 0.11941079547854129], [") #NEWLINE# #DEDENT# if", 0.11940157971962713], ["count = 0", 0.11933091066013986], ["count = 0 #NEWLINE#", 0.11933091066013986], ["#NEWLINE# #DEDENT# #DEDENT# check", 0.1192415165497802], ["#NEWLINE# y", 0.11921288689152423], ["k ) ) #NEWLINE#", 0.11919195293275957], ["\\ *", 0.11889376046158748], ["return count", 0.11884121125458956], ["#DEDENT# print ( *", 0.11876684329773053], ["_count", 0.11869045182329854], [": #INDENT# dp =", 0.1186650893493061], ["return res #NEWLINE# #DEDENT#", 0.11865245024966975], ["( i , j", 0.11863934107158484], ["= ( x *", 0.11862538241751386], ["dy =", 0.11861083666288533], ["1 + (", 0.11856590864579088], ["direction ==", 0.11854407660839651], ["( input", 0.11841984367257102], [", s = map", 0.118394012662487], ["s = map (", 0.118394012662487], ["s = map", 0.118394012662487], ["nx", 0.11838536850783786], [", s", 0.11831397727586215], [") : check", 0.11819345854548652], ["] [ l", 0.11811090046231269], ["check if a", 0.1179922283163506], ["print the minimum", 0.11798367823331213], [", b +", 0.1179175381648055], ["projects", 0.11788582346661487], [") : if", 0.11780816040860476], ["l [ i", 0.11779972269136246], ["'.'", 0.11777423479891821], ["] ] ,", 0.11776063544074906], [": #INDENT# dp [", 0.11772926472578321], [": if the", 0.11770646010314667], ["- 1 ) +", 0.1175198557003402], ["#DEDENT# if the", 0.11747981846088472], ["!= s", 0.11724648486903791], [") #NEWLINE# create", 0.11723797265010455], ["total", 0.11722877148083295], ["-= 2", 0.11716900327103191], ["append", 0.11715370630895601], ["r = map (", 0.11710177430039541], [", r = map", 0.11710177430039541], ["r = map", 0.11710177430039541], ["and print", 0.11707864141938479], ["parity", 0.11701999548109909], ["#INDENT# return n", 0.11691526327880404], [": #INDENT# return n", 0.11691526327880404], ["( input (", 0.11684407868457009], ["#NEWLINE# else : #INDENT#", 0.11673154174574571], ["= lambda x", 0.11671237058510342], ["#INDENT# dp = [", 0.11671048218098554], [": #INDENT# res", 0.11660598033605263], ["( ord ( s", 0.11657603464631772], ["in range ( m", 0.11656931013207164], ["less than", 0.11626343463710176], ["#INDENT# for j", 0.11623880459721388], ["output the", 0.11622799453270698], ["return \"yes\" #NEWLINE#", 0.11621411615277583], ["if there is", 0.11608058494725829], [") : check if", 0.11606926245357888], ["i ] <", 0.11605096272838884], ["[ i ] <", 0.11605096272838884], ["direction =", 0.11593857973619101], ["return 0 #NEWLINE# #DEDENT#", 0.115924617113561], ["frame", 0.11588144856852334], ["minute", 0.1158096866476291], ["'a'", 0.11563914483840544], ["res #NEWLINE# #DEDENT#", 0.11551739791062697], [". floor", 0.11490302813811648], ["math . floor", 0.11490302813811648], ["math . floor (", 0.11490302813811648], [". floor (", 0.11490302813811648], [": x [", 0.1148807084322057], ["x : x [", 0.1148807084322057], [": #INDENT# left", 0.11483999885608054], ["#NEWLINE# for i in", 0.11482134313048677], ["lcm ( a", 0.1147473231955065], ["x * x", 0.11474464562445548], ["already", 0.11468891678089137], ["an", 0.11455430052400818], ["1 #NEWLINE# #DEDENT# return", 0.11450104741387232], ["iterate through", 0.11445874269690441], [") ) //", 0.11442268926668896], ["#NEWLINE# visited", 0.11420376413260439], ["otherwise", 0.11413550329107781], ["#INDENT# left", 0.11412999516050745], [") print", 0.11410273249111644], ["order #NEWLINE#", 0.11405100256288411], ["#NEWLINE# left", 0.11403721068271434], ["% mod #NEWLINE# y", 0.11400843792057297], ["2 #NEWLINE# if", 0.11399614287098585], ["'inf'", 0.11398934116084324], ["dp_odd [ i", 0.11394489480620804], ["targets", 0.11394130792120945], ["y +=", 0.11392518680704318], ["#INDENT# result =", 0.11388569394751173], [") #NEWLINE# y", 0.11363562084606633], ["or (", 0.113333994951009], ["// 2 #NEWLINE# if", 0.11328355858334029], ["\"yes\" #NEWLINE#", 0.11326710772228492], [", a ) )", 0.11316980004061114], ["1 ] *", 0.1131084744282789], [", right", 0.11300778526964002], ["1 , m", 0.11281858042754665], ["#DEDENT# #DEDENT# check if", 0.11264769355130676], ["the input #NEWLINE#", 0.11263216548518333], ["hp_m", 0.1126172491694917], ["integers", 0.11261076428900132], ["max_length", 0.11255485257615876], ["input #NEWLINE# n =", 0.1125152946318244], ["#DEDENT# return count #NEWLINE#", 0.11248210680506261], ["* ( n //", 0.11239615881430091], ["for digit in str", 0.11235534849404523], ["digit in str", 0.11235534849404523], ["digit in str (", 0.11235534849404523], ["m ,", 0.11233475523644096], ["#DEDENT# return -1", 0.11232231233707582], ["product", 0.1122691134862898], ["} #NEWLINE# for i", 0.11213090309129933], ["( points )", 0.11198321979850792], ["1 ) #NEWLINE# dp", 0.11197121643182655], ["return dp", 0.11196060335395093], ["2 #NEWLINE# #DEDENT# return", 0.11174175427905066], ["the function", 0.11162223416855413], ["the length of the", 0.11161857004313618], ["#DEDENT# return true #NEWLINE#", 0.11154473236708044], ["digit ==", 0.11151156139558246], ["while b :", 0.11143719879187432], ["while b : #INDENT#", 0.11143719879187432], ["if j", 0.11140108469221359], ["return ans #NEWLINE# #DEDENT#", 0.11138297926530508], ["dictionary", 0.11131420033136115], ["input (", 0.11130319900218315], ["greater than", 0.11122967099384762], ["'inf' )", 0.11120938264283335], ["( 'inf'", 0.11120938264283335], ["( 'inf' )", 0.11120938264283335], ["n , k ,", 0.11114775232064499], [", r ) )", 0.1109010361148811], ["result [ i ]", 0.110680038169634], ["pair", 0.11066542342043476], ["#NEWLINE# iterate over", 0.11052068910382964], ["check if there", 0.1104677586032961], ["* a )", 0.11044255870920755], ["- j", 0.11035748293824736], ["def power", 0.11027040534171789], ["def power (", 0.11027040534171789], ["#DEDENT# return -1 #NEWLINE#", 0.1102022054623127], ["s [ 1", 0.11019313167620794], ["degree", 0.11009487074624581], ["otherwise ,", 0.11003078177382768], [", the", 0.10993264470375518], [", b + 1", 0.10992961244342686], ["#NEWLINE# a =", 0.10988763246557896], ["[ 1 ] =", 0.10985231334189355], ["n ** 0.5", 0.10974121091142378], ["sorted_bottles", 0.10962888384035836], [", arr", 0.10957224325959831], ["( input ( )", 0.1095607646224008], ["( len ( a", 0.1094643732373869], [", d )", 0.10941260406690877], [": x [ 0", 0.10905719691069647], ["print the answer", 0.10900692789461384], ["( l ,", 0.10891876263858688], ["swaps", 0.10878675453883173], ["bottle", 0.1086390204973273], ["visited . add (", 0.10859407998102909], ["visited . add", 0.10859407998102909], ["% p #NEWLINE#", 0.1085870859914116], ["divisor", 0.10852671675460039], ["print ( m )", 0.10852621958135197], ["-1 #NEWLINE# for", 0.10850442950673159], ["right :", 0.10836732898041261], [", 5", 0.10834329095209336], ["words", 0.10833643461969292], ["return count #NEWLINE#", 0.1083245515808904], ["s ==", 0.10825647096043914], [": #INDENT# result =", 0.10821538778384303], ["next", 0.10812049298079446], [", [", 0.10806540581042368], ["( sys .", 0.10805360764546953], ["( sys . stdin", 0.10805360764546953], ["( sys", 0.10805360764546953], ["k ==", 0.1080392006183549], ["else 0 )", 0.10794123840542638], ["return sum (", 0.10788632434200002], ["< n - 1", 0.10787188623388967], ["x = ( x", 0.1078467573881252], ["seats", 0.1078151367530585], ["balls", 0.10764981647907683], ["if n == 1", 0.1075320793029308], ["#NEWLINE# x = int", 0.10751962777828591], [", k , a", 0.10749599239519954], ["9 + 7 )", 0.1071706875356553], [", s )", 0.10711979694050264], ["= 0 , 0", 0.10710905810606361], ["] ) ,", 0.10706179250270194], ["smallest", 0.10700231135223581], ["#INDENT# res += 1", 0.10700020355518525], ["#DEDENT# read input #NEWLINE#", 0.10695443476844597], ["#INDENT# res", 0.10693726872471446], ["#DEDENT# y", 0.10683336557245338], ["#NEWLINE# #DEDENT# y", 0.10683336557245338], ["price", 0.10679728190873265], ["multiple of", 0.10674944249465051], ["#INDENT# res =", 0.10671005743984655], ["!= 0 :", 0.1066881185595636], ["b , n", 0.10667705697689252], [", a [ i", 0.10656882905165788], ["( n **", 0.10652543660450164], ["count #NEWLINE#", 0.10641151420275927], ["#INDENT# return 1", 0.1063213655717282], [", by", 0.10631913971267587], ["return ans #NEWLINE#", 0.10619150058715492], ["[ : i", 0.10610187580139162], ["max_team_size", 0.1060988454506804], ["] -", 0.10609483272693736], ["lambda x :", 0.10604162067520032], ["= lcm", 0.1059936238385219], ["= lcm (", 0.1059936238385219], ["n == 1 :", 0.1059766057923674], ["> arr [", 0.10596216043433296], ["> arr", 0.10596216043433296], ["] > arr", 0.10596216043433296], ["] > arr [", 0.10596216043433296], ["calculate the maximum number", 0.1059298174464623], ["rectangles", 0.10588187691824273], ["it is", 0.1058693025866355], ["( n ** 0.5", 0.10578490894236636], [": #INDENT# if s", 0.10576050495782481], ["defaultdict (", 0.1057369617525822], ["we can", 0.10565545871136031], ["answer #NEWLINE# print (", 0.10565542186269715], ["answer #NEWLINE# print", 0.10565542186269715], ["the answer #NEWLINE# print", 0.10565542186269715], ["( i ) :", 0.10558800306635215], ["m ) #NEWLINE# print", 0.10552530451016863], ["not a", 0.1053882439518073], ["d )", 0.10537239278365226], ["on", 0.10533807447830922], ["elif i", 0.10533209838340343], [") #NEWLINE# create a", 0.10532726513231762], ["right : #INDENT#", 0.10511770752087277], ["x :", 0.105079379153546], ["a , b ,", 0.10503185206025759], ["sort the", 0.10496613680176682], ["m *", 0.10492883672059919], ["factorial", 0.10490033314568313], ["\"1\"", 0.10486050730459134], [") #NEWLINE# y =", 0.10481893314907141], ["intersection", 0.10472965849893177], ["def max", 0.1046779490686276], ["append ( input", 0.10467105101579936], [". append ( input", 0.10467105101579936], ["append ( input (", 0.10467105101579936], ["( s", 0.10458340169723503], ["( x + 1", 0.10456547767597354], ["to make", 0.10456204936225831], ["code", 0.10418528028161622], [": i ]", 0.10418466065131818], ["a .", 0.10416514219181751], [", 0 #NEWLINE#", 0.10405081317416626], ["c [ i ]", 0.10404836604549648], ["m , k =", 0.10399943318538078], ["rolls", 0.10399017655015468], [", print", 0.10398010285105512], ["dp [ n ]", 0.10395351076585227], ["#NEWLINE# iterate through", 0.10391485358613924], ["+ 1 ] =", 0.10390869676571242], ["#NEWLINE# elif", 0.10388206390640253], ["and n", 0.10387047699140213], ["_palindrome", 0.10380516562490617], ["( x * x", 0.10363763588857454], ["set ( a", 0.10363507858911097], ["read input #NEWLINE# n", 0.10352818591573983], ["black", 0.10343505119473397], ["// 2", 0.10327464970074368], ["math .", 0.10316277252552303], ["#DEDENT# otherwise ,", 0.10303284542920176], ["#NEWLINE# #DEDENT# otherwise", 0.10303284542920176], ["#NEWLINE# #DEDENT# otherwise ,", 0.10303284542920176], ["#DEDENT# otherwise", 0.10303284542920176], ["input from", 0.10295834712391186], ["mappings", 0.1029557471021839], ["#DEDENT# elif s", 0.10295344415468612], ["#DEDENT# return true", 0.10288851015812411], ["palindrome", 0.10288201275219655], [": #INDENT# for j", 0.10272217322849489], [", b2", 0.102692703972856], ["i ,", 0.10267677012451287], ["#INDENT# return true", 0.10267641391385102], ["and print the", 0.10263559507338034], ["#NEWLINE# dp [ 0", 0.10255468820056396], ["#NEWLINE# the", 0.10247284720490396], ["#NEWLINE# x , y", 0.10243695153056821], ["elif s", 0.1023981978131182], ["result = 0", 0.10235295984826606], ["input ( )", 0.10234933440509117], ["permutation", 0.10234242153687075], ["the next", 0.10228013106156528], ["< n -", 0.10225546997538942], ["any", 0.10209483302132466], ["n == 1", 0.1020413004533575], ["none #NEWLINE# for", 0.10203199150062843], ["0 ] -", 0.10191200246590985], ["print the answer #NEWLINE#", 0.10190446941847983], [", 10 ,", 0.10185714932438474], ["true : #INDENT#", 0.10181177256571965], ["sorted_bottles [", 0.10179824928033276], ["left =", 0.10178022188301387], [". append (", 0.10177968768067501], [". append", 0.10177968768067501], ["append (", 0.10177968768067501], ["#DEDENT# test cases #NEWLINE#", 0.1017067221233544], ["#DEDENT# test cases", 0.1017067221233544], ["nucleotide", 0.10165676153326886], ["] #NEWLINE# #DEDENT# #DEDENT#", 0.10163520312446138], ["= solve ( n", 0.1016293762910858], ["check if it", 0.10162822924215768], ["d ) :", 0.10160780099929276], ["#NEWLINE# j", 0.10158090310607204], ["range ( t )", 0.10153719356828007], ["return \"yes\" #NEWLINE# #DEDENT#", 0.101528597701396], ["\"yes\" #NEWLINE# #DEDENT#", 0.101528597701396], ["= -1 #NEWLINE# for", 0.10149553632089098], ["first", 0.10147117870412173], [", return", 0.10135438731651657], ["( 2 **", 0.10134686629577853], ["#INDENT# return 1 #NEWLINE#", 0.10134321950981542], ["hour", 0.1013095222068469], ["max_value", 0.10130723390727109], ["dp_even [ i", 0.10128435093885156], ["ans #NEWLINE# #DEDENT#", 0.10127748570875592], ["#NEWLINE# #DEDENT# test", 0.10126971222271848], ["result +=", 0.10123768154776748], ["2 #NEWLINE# print", 0.1011739213350644], [": #INDENT# return true", 0.10116739436336841], ["count #NEWLINE# #DEDENT#", 0.10087367424020593], ["return count #NEWLINE# #DEDENT#", 0.10087367424020593], ["swap", 0.10086147520581483], [") // 2 #NEWLINE#", 0.10058661977842086], ["key", 0.10051324803114481], ["sort ( key =", 0.10046744145944796], ["sort ( key", 0.10046744145944796], [". sort ( key", 0.10046744145944796], ["( key", 0.10046744145944796], ["( key =", 0.10046744145944796], [": #INDENT# return 1", 0.10045296509198669], ["( y1", 0.10042897859014542], [", u", 0.10042460924541954], ["#DEDENT# elif i", 0.10041133663606892], ["#NEWLINE# #DEDENT# elif i", 0.10041133663606892], ["#INDENT# x ,", 0.10031789111466057], [": initialize", 0.10017902742841639], ["needed #NEWLINE#", 0.10009812319289531], ["the sequence", 0.1000817339187925], ["i ] , a", 0.09993921796166294], ["left , right =", 0.09985301049527674], [", right =", 0.09985301049527674], ["#INDENT# x , y", 0.09971021865406167], ["than the", 0.09967198925932293], [") #NEWLINE# count", 0.0996320003037695], ["number #NEWLINE#", 0.09961974144629043], [", bx", 0.09935889330117127], ["range ( i )", 0.09934711640953207], ["range ( m )", 0.0991652069110568], ["] * b [", 0.09915801663303686], ["#INDENT# return true #NEWLINE#", 0.09911744511092767], ["#DEDENT# return ans", 0.09910975198966328], ["= none #NEWLINE#", 0.09906997644594712], ["q [ i ]", 0.09904796446275499], ["def lcm ( a", 0.0989087564026674], ["( num )", 0.09887633069962355], ["result = 0 #NEWLINE#", 0.09886178707887494], ["== 'a'", 0.0988525242608632], ["#NEWLINE# #DEDENT# elif s", 0.09879948865056729], ["= math", 0.09847983180247842], ["= math .", 0.09847983180247842], ["sequence #NEWLINE#", 0.09844769732496447], ["b + 1 )", 0.09840654251798611], ["\"yes\" ) #NEWLINE# #DEDENT#", 0.09837619321787101], [") in", 0.09837493790572613], ["int ( n", 0.09833191719872382], ["+ 2 )", 0.09833012975465885], ["'__main__' : #INDENT# n", 0.09832677611347121], ["( n - 1", 0.09832262882185626], ["#INDENT# count = 0", 0.09826556044990113], ["position #NEWLINE#", 0.09816326274272337], ["print the number", 0.0980907360287194], ["print the number of", 0.0980907360287194], ["compute", 0.09808118209011767], [", arr [", 0.09807128281106502], ["( n , t", 0.09804794645847363], [": #INDENT# x ,", 0.09776529351673781], ["field [", 0.09767316461705283], ["minimum cost", 0.0976595815660697], ["#NEWLINE# if len (", 0.09765629176753961], ["#NEWLINE# if len", 0.09765629176753961], ["is_possible", 0.09765359483519906], [") else", 0.097644725068201], ["weights", 0.09761926116169835], ["finger_movement", 0.09757261622113471], ["if gcd", 0.09756881924451173], [", t", 0.09754481297216476], ["i #NEWLINE# #DEDENT#", 0.09752986296938874], ["] < arr", 0.09746654956989378], ["] < arr [", 0.09746654956989378], ["0 #NEWLINE# #DEDENT#", 0.0974642451720956], ["bulb", 0.09746247787032492], ["variables", 0.09735320269938816], ["found =", 0.09729960137170154], ["f )", 0.09727712176658888], ["reach", 0.09718328816803165], ["#INDENT# n , k", 0.09717504322719918], ["lambda x", 0.09712633016529366], ["and b #NEWLINE#", 0.09711347463320986], ["[ 0 ] -", 0.09710129747458711], ["#INDENT# count =", 0.0970746356586618], ["-1 , -1", 0.09699034574812689], ["a + 1 )", 0.09697963644141244], ["function #NEWLINE#", 0.09693831691130063], ["if num", 0.0969248122575534], ["calculate the total", 0.09687655990847902], ["valid", 0.09686917376333885], ["the array #NEWLINE#", 0.09678524190871532], [", 0 #NEWLINE# for", 0.0967598293315412], ["dx , dy =", 0.09670659333029588], [", dy =", 0.09670659333029588], ["#INDENT# a , b", 0.09667372965760028], ["and all", 0.09655676892267284], ["return result", 0.09653882214627413], ["#DEDENT# #DEDENT# return count", 0.09652765058916352], ["return the", 0.0964499478210343], ["to find", 0.09634842760824165], ["if it 's", 0.09616510051573426], ["wins #NEWLINE# if", 0.09611373593383553], ["( board [", 0.09610217996821498], ["= ( dp [", 0.09608215045666096], ["] = ( dp", 0.09608215045666096], ["= ( dp", 0.09608215045666096], ["( p ,", 0.0959380712990676], ["0 ] * (", 0.09571976388238983], ["] : #INDENT# return", 0.09566614780208897], ["visited =", 0.09561689546952239], [") : #INDENT# while", 0.09558684056922953], ["print the maximum", 0.09553182856579726], ["#NEWLINE# #INDENT# print", 0.09544431187921122], ["#NEWLINE# #INDENT# print (", 0.09544431187921122], ["the given", 0.0954374667451368], [") #NEWLINE# #DEDENT# calculate", 0.09532578214568627], ["zfill", 0.09521933610003902], [") . zfill (", 0.09521933610003902], [") . zfill", 0.09521933610003902], [". zfill (", 0.09521933610003902], [". zfill", 0.09521933610003902], ["zfill (", 0.09521933610003902], ["max_num =", 0.09488088365242683], ["== s [", 0.09483724647063405], ["= math . sqrt", 0.0948352203065303], [", l ,", 0.09481887460617022], ["x //", 0.09480084440825433], ["#DEDENT# initialize", 0.09477811253592662], ["true #NEWLINE# #DEDENT# def", 0.09474226440826751], ["integer", 0.0947414091039227], ["a dictionary", 0.09473586560167903], ["in visited", 0.09470212875479807], ["values #NEWLINE#", 0.0946151945751953], ["board [ i ]", 0.09443038510167968], ["board [ i", 0.09443038510167968], [") ) #NEWLINE# c", 0.09433533654760887], ["of moves", 0.09422115368372663], ["keep", 0.09414620106142914], ["a [ 1", 0.09411117617866091], ["neighbor ]", 0.09410227400912276], ["[ neighbor ]", 0.09410227400912276], ["[ neighbor", 0.09410227400912276], ["b ) #NEWLINE# print", 0.09402962215184842], ["for each", 0.09400177177985104], ["n , x", 0.09396416558927714], ["or equal", 0.09393707748357881], ["+ t", 0.09387764439726297], ["( node", 0.09373735391150044], ["buy", 0.0937082877545627], ["% ( 10 **", 0.093681816004843], ["% ( 10", 0.093681816004843], ["2 ) +", 0.09366766687352836], ["#INDENT# for j in", 0.0936566603300961], ["append ( (", 0.09362463193053634], [". append ( (", 0.09362463193053634], ["if result", 0.09357641049065824], ["_time", 0.09357614505368334], ["] >=", 0.09353899530729773], ["unique", 0.09342907928499554], [") #NEWLINE# a =", 0.09341765028965023], ["is less than", 0.0933393951771495], ["is less", 0.0933393951771495], ["'t'", 0.09330738081753409], ["s ,", 0.09326657287861634], ["n and", 0.09321772024219742], ["true #NEWLINE# #DEDENT# #DEDENT#", 0.09320499041368645], ["'a' : #INDENT#", 0.09317261850899201], ["y %", 0.09314110599185274], ["j ] =", 0.0930169934024554], ["i , j", 0.0928662008905655], ["x in a", 0.09285489664137146], ["for x in a", 0.09285489664137146], ["#NEWLINE# #DEDENT# if j", 0.09284815838812124], ["] , arr", 0.0927520372364847], ["] , arr [", 0.0927520372364847], ["element #NEWLINE#", 0.09270919897845167], ["matrix [ i", 0.09267684848707076], ["else 0 ) #NEWLINE#", 0.09259381290092757], ["* a ) #NEWLINE#", 0.09246748591218433], ["hh", 0.0924602180091187], ["a * b //", 0.09245973275318643], ["number of moves", 0.09238221319422454], ["] * b", 0.09231070637351799], ["than or", 0.0923072076680742], ["than or equal", 0.0923072076680742], ["x and", 0.09220748981088756], ["read the input #NEWLINE#", 0.09202744759007635], ["s [ i :", 0.0919841357963186], ["#NEWLINE# read input", 0.0917101708581142], ["( ( x ,", 0.09169827666141593], ["#NEWLINE# dp", 0.09162771733439358], ["expected", 0.09158108423307065], ["( ) #NEWLINE# n", 0.09156600227319396], ["factorial (", 0.09154441985695468], ["+ 2", 0.09153557659742975], ["cakes", 0.0914620834884792], ["min_val", 0.09144071371653972], ["( 1 , m", 0.09143235974743945], ["c , d", 0.09140179430726629], ["( s ) #NEWLINE#", 0.0913695485215473], ["i ] ,", 0.0913638112671937], ["** 0.5", 0.09135232782606827], ["and y ==", 0.09132972282542662], ["#NEWLINE# read the", 0.09129368792590448], ["if there are", 0.09122315339098055], ["rating", 0.09118089063751884], ["values of", 0.09116866757318186], ["#NEWLINE# #DEDENT# result", 0.09116860961335342], ["replace", 0.09115462109143954], ["common", 0.09112492301063077], ["#NEWLINE# update", 0.09110518610165083], [", d = map", 0.09088618944174427], [", k , x", 0.09086500178926325], ["return dp [", 0.09078888102913875], ["s [ i -", 0.09075819718016873], ["than or equal to", 0.09073254081924523], ["or equal to", 0.09073254081924523], ["through the", 0.0906800833063109], ["the count", 0.09062760744481775], ["total number", 0.09051689674915536], ["+ 1 ) if", 0.09044248800012003], ["1 ) if", 0.09044248800012003], [", d ) :", 0.09023510345583376], ["#NEWLINE# if all", 0.09012968031445649], ["[ i ] ,", 0.0900409437585053], ["max_power", 0.09002375233705227], ["* x", 0.09000690767297892], [") #NEWLINE# x ,", 0.08994122123248272], ["a + 1", 0.08992023635807579], ["yes", 0.0898898745769], ["result #NEWLINE# #DEDENT#", 0.08987669360942394], ["** x", 0.08987563964484327], ["total number of", 0.08984870140104592], ["#INDENT# visited", 0.08982307805739109], ["a and b #NEWLINE#", 0.0897801167373689], ["i += 1 #NEWLINE#", 0.08977179208154502], ["i += 1", 0.08977179208154502], ["( int ) #NEWLINE#", 0.0897535801295565], ["int ) #NEWLINE#", 0.0897535801295565], ["while left", 0.0896826668446992], ["bit", 0.08967880821915357], ["= none #NEWLINE# for", 0.08961684468498479], ["= defaultdict (", 0.0896097940201587], ["= defaultdict", 0.0896097940201587], ["n , m =", 0.08959560477072095], ["probability", 0.08958205894318434], ["indices", 0.0895428264907436], ["bulbs", 0.08954188629421436], [") / 2", 0.08952014195351947], ["( dp [ i", 0.08945136505362258], ["_num", 0.08913526576024772], [") } #NEWLINE#", 0.08905169734766372], ["and (", 0.08904668892286763], ["set ( a )", 0.08901204421020763], ["a ) ==", 0.08899454081922392], ["( a ) ==", 0.08899454081922392], [") + abs", 0.08897340244633062], [") + abs (", 0.08897340244633062], ["key =", 0.08897067792474209], ["#NEWLINE# dp [", 0.08892502879957134], ["cnt2", 0.08886020213867937], ["a [ r", 0.08884919550602982], ["create a dictionary", 0.08879127450050735], ["== 'a' : #INDENT#", 0.08865085001315673], ["== 'a' :", 0.08865085001315673], ["sum of the", 0.08845583348894052], ["res #NEWLINE#", 0.08843455065037202], ["s ) - 1", 0.08842308533632576], ["#DEDENT# dp [ i", 0.08839043300833599], ["e_lines", 0.08838862207922969], ["a ) #NEWLINE# if", 0.08833397107309625], ["alpha )", 0.08827196980294108], ["( alpha )", 0.08827196980294108], ["( alpha", 0.08827196980294108], ["( digit )", 0.08822183941450434], ["( digit", 0.08822183941450434], ["digit )", 0.08822183941450434], ["i ] )", 0.08819292257840522], ["#DEDENT# n ,", 0.0881924286631411], ["// b )", 0.08813417012766822], ["moves +=", 0.08812566388382102], ["#DEDENT# print the result", 0.08810778962916029], ["bx", 0.08805287248696396], ["remainders", 0.08804469511421184], ["2 #NEWLINE# print (", 0.08801451262575213], [") : #INDENT# res", 0.08800005674003451], ["the distance", 0.08796277012218114], [") #NEWLINE# edges", 0.08789673288414791], ["matrix [ i ]", 0.08787809862923535], ["votes [", 0.08786249828117192], ["y1 ,", 0.08783354564890167], ["if a [ j", 0.08774801422942527], ["+= dp", 0.08774597596670515], ["] , [", 0.08772935379350463], ["standing", 0.08764998695273213], ["dist _driven", 0.08760313666566219], ["_driven", 0.08760313666566219], [", int ( n", 0.0875469807041409], [", b1", 0.08752039273369426], ["the minimum cost", 0.08744211432306824], ["the total number", 0.08729935860105988], ["equal #NEWLINE#", 0.08729493081433329], ["#NEWLINE# if all (", 0.0872560602838709], ["c .", 0.08721716482877029], ["= a [ 0", 0.08711460791038686], ["rebus", 0.08709002547134437], ["visited :", 0.08695509889686469], ["least", 0.08693718540029163], ["the smallest", 0.08689212010565849], ["#INDENT# a ,", 0.0868438156075042], [": #INDENT# a ,", 0.0868438156075042], ["< arr", 0.0868333824328246], ["< arr [", 0.0868333824328246], ["multiples", 0.08680585144038344], ["is greater", 0.0867465767584653], ["start ,", 0.08674216121534133], ["the total number of", 0.08661172104371923], [", y )", 0.08650911833799661], [", s ) :", 0.08645960160964006], ["rated", 0.08645295806657484], ["1 #NEWLINE# j", 0.08640807402686206], ["[ [ 0", 0.08634924202813163], ["int )", 0.08630162461773742], [") ] for _", 0.0862704842600351], ["more", 0.08626274185385521], ["initialize a", 0.08624455567267411], ["return result #NEWLINE#", 0.08622229745192471], ["s . count", 0.08620844126698113], ["s . count (", 0.08620844126698113], ["- 1 ] ]", 0.08618425700070631], ["#NEWLINE# p = list", 0.08616953836198328], ["[ : i ]", 0.08610418584673273], ["total_students", 0.08610091066111525], ["visited = set", 0.08600066361687704], ["visited = set (", 0.08600066361687704], ["[ j ] =", 0.08598037876577219], ["he", 0.08585806157058656], ["#NEWLINE# dist", 0.08582012856277593], ["( ) #NEWLINE# #DEDENT#", 0.0858133186472584], [") #NEWLINE# grid", 0.08580967711070796], ["#INDENT# dx", 0.08577730630626312], ["characters", 0.08575120844554629], ["coins [", 0.08574388387735045], ["'", 0.08564029396471322], ["= none", 0.08555221029367355], [", p", 0.08546790925935971], ["!= 0 : #INDENT#", 0.08542230625207058], ["dictionary to store the", 0.0851964465226979], ["dictionary to", 0.0851964465226979], ["dictionary to store", 0.0851964465226979], ["query", 0.08512526244959923], [": #INDENT# dx", 0.0851222176017411], ["res *", 0.08504975169855565], ["#DEDENT# elif direction ==", 0.08504347491949824], ["#DEDENT# elif direction", 0.08504347491949824], ["elif direction ==", 0.08504347491949824], ["#NEWLINE# #DEDENT# elif direction", 0.08504347491949824], ["elif direction", 0.08504347491949824], ["i not", 0.08503365070076722], ["i not in", 0.08503365070076722], ["( b +", 0.08498701339321221], ["= { i :", 0.08491585994108175], ["{ i :", 0.08491585994108175], ["{ i", 0.08491585994108175], ["= { i", 0.08491585994108175], ["] for", 0.08484178225867058], ["] [ c ]", 0.08482276043235265], ["rectangle", 0.08468035945205452], [") [", 0.08466906450774955], ["form", 0.08464159076440451], ["#INDENT# count += 1", 0.08462709654769551], ["the same", 0.08458767297175877], ["only", 0.08458395953133914], ["over the", 0.08457116170659026], ["x and y", 0.08444809209808633], ["at least", 0.08444050584277595], [") : initialize", 0.0843320070351122], ["t .", 0.08426788924405515], ["= [ [ 0", 0.08423173480022471], ["#NEWLINE# #DEDENT# if the", 0.08418817638196535], ["** y", 0.08416799026382052], ["** z", 0.08416799026382052], ["left <", 0.0840983733759198], ["row )", 0.08404841036487462], [". append ( x", 0.08396555366445457], ["append ( x", 0.08396555366445457], ["#DEDENT# #DEDENT# n", 0.08394334317495171], ["// gcd", 0.08388880031095981], ["_1", 0.08379730851253027], ["#NEWLINE# result = 0", 0.08379472668674437], ["i in range", 0.08368361216918385], ["#DEDENT# count", 0.08367298436084943], [": find the", 0.08357153056907378], [": find", 0.08357153056907378], ["[ l [", 0.08357134986700412], ["== 1 and", 0.08357033250210114], ["a ) ) #NEWLINE#", 0.08353616867568263], ["i ] >", 0.08353388727906948], ["[ i ] >", 0.08353388727906948], ["if gcd (", 0.08345146145570209], ["a dictionary to store", 0.08344084511586265], ["a dictionary to", 0.08344084511586265], [": #INDENT# return \"yes\"", 0.08336315521397991], ["#INDENT# return \"yes\"", 0.08336315521397991], ["#INDENT# return \"yes\" #NEWLINE#", 0.08336315521397991], [") ) ) for", 0.08333113669950466], ["* node", 0.08332061148892625], ["2 * node", 0.08332061148892625], [": #INDENT# visited", 0.08331925976752667], ["diff =", 0.08322705526033967], ["after", 0.08315889487615317], [") + (", 0.08313508725229797], ["in visited :", 0.08310309993828066], ["moves #NEWLINE#", 0.08309610823806586], ["n - 1 and", 0.0828719832217334], ["i !=", 0.08286241188746435], [", #NEWLINE#", 0.0828121038073001], ["0 , 1", 0.08279420646660907], ["% n", 0.08278989478366086], [", t ) :", 0.08276025599280971], ["#NEWLINE# c = list", 0.0827289193008679], ["max_diff", 0.08265440320565826], ["on the", 0.08255261977974118], ["is greater than", 0.08253085988741232], ["for the", 0.08252876764407033], [") #NEWLINE# if the", 0.08250207633344701], [", d ,", 0.08247597737629914], ["#NEWLINE# if result", 0.08243880029789298], ["0 ] for", 0.08238790769041245], ["integer #NEWLINE#", 0.08238138256166376], ["s , t )", 0.0823662532496652], ["[ node", 0.0823270972740871], [", b ) #NEWLINE#", 0.08232166091473013], ["-1 : #INDENT# print", 0.08214229775812111], ["iterate over the", 0.082132140839211], ["k , x", 0.08211200814379112], ["sqrt (", 0.08203133371421699], ["m = (", 0.08195202534815835], ["max_moves", 0.08191785857032848], ["maze", 0.08189363314017266], ["y % 2", 0.08187250374139048], ["output the result", 0.08187055746441038], ["3 #NEWLINE# print", 0.08181015502569647], ["import random", 0.08179544515404653], ["import random #NEWLINE#", 0.08179544515404653], ["sides", 0.08176607483324981], ["adj", 0.08173929731992813], ["elif s [", 0.0817159201722388], ["( min_cost", 0.08160939975767406], ["#DEDENT# dp [", 0.08156915987241792], ["is the", 0.0815396911817344], ["1 ] -", 0.08146668737112106], ["#NEWLINE# moves", 0.0814514177253385], ["a2 , b2", 0.0814109947570311], ["#NEWLINE# check if it", 0.08140100492357381], ["i in range (", 0.08120828529292509], ["( grid", 0.08116607366116234], ["#NEWLINE# direction =", 0.0811560566275209], ["#NEWLINE# direction", 0.0811560566275209], ["[ -2", 0.08111652306585326], ["if n ==", 0.08106632668673122], ["% b == 0", 0.08106616490778999], ["% b ==", 0.08106616490778999], ["1 , 0", 0.08097336948436017], ["* m )", 0.08094893940569924], ["increase", 0.08094633270781253], ["query (", 0.08093207015118464], ["elif x", 0.08087248868805072], ["+= dp [", 0.08082616029051379], ["] += dp", 0.08082616029051379], ["] += dp [", 0.08082616029051379], ["friends [", 0.08082230045250749], [", 1 #NEWLINE#", 0.08077488921643575], ["0 #NEWLINE# for j", 0.08073023824181608], ["s [", 0.08070297445000134], ["yes #NEWLINE#", 0.08069558390264565], [", n", 0.0806350341315948], ["( s , t", 0.08061605090581027], [", x2 ,", 0.08058165501303836], ["#NEWLINE# time =", 0.08056813212718027], ["#INDENT# n , m", 0.08056453896057608], ["n ] ) #NEWLINE#", 0.08049807949216349], ["ord ( s [", 0.08048933943009079], ["ord ( s", 0.08048933943009079], ["n - 1 :", 0.08048831904887965], ["int , sys .", 0.0804009764784897], ["int , sys", 0.0804009764784897], ["( int , sys", 0.0804009764784897], ["#DEDENT# return result", 0.0803821201519722], ["0 , 0", 0.08036051561102808], ["1 ] ]", 0.08033435258778045], ["check if it 's", 0.08031524709930658], ["] [ l [", 0.08031157293026224], ["#INDENT# x +=", 0.08029547934825873], ["create a dictionary to", 0.08021394290977109], ["print output", 0.08018077597183383], ["p = list (", 0.08012393981365161], ["p = list", 0.08012393981365161], ["stones [", 0.0801118429859062], ["up", 0.08005132062803753], ["result ) #NEWLINE# #DEDENT#", 0.08003929729961504], [") == 1", 0.0800245458936486], ["l [ i -", 0.08002023836973952], ["1 ) : ", 0.07994106253927905], ["= int ( n", 0.07988787646765894], ["[ n", 0.07983301206154786], ["+= dp [ i", 0.07980963000037265], ["[ n ] #NEWLINE#", 0.07971984028599728], ["and j", 0.07956593458808715], ["lights", 0.07954934213620007], ["] #NEWLINE# #DEDENT# if", 0.07954262590781457], ["the required", 0.07939125533720534], ["max _pieces", 0.07936438246183904], ["defaultdict ( int )", 0.07936274413017376], ["defaultdict ( int", 0.07936274413017376], ["+ dp [", 0.0792792026120964], ["#DEDENT# #DEDENT# return ans", 0.07924677313114203], ["//= 2 #NEWLINE# #DEDENT#", 0.07923935873342396], ["( p", 0.07919223276608264], ["#DEDENT# print the answer", 0.07915729114956174], [", m ) :", 0.07909860373157786], ["visited : #INDENT#", 0.07906319625535115], ["in visited : #INDENT#", 0.07906319625535115], ["find the maximum", 0.07906061263385468], ["#DEDENT# return ans #NEWLINE#", 0.07902210927136973], ["compute the", 0.07901905157160823], ["are equal", 0.07900973511271246], ["range ( j", 0.07900646281424267], ["in range ( j", 0.07900646281424267], ["- 1 ] -", 0.07892054752272294], ["[ left", 0.07890756240274749], ["a ) #NEWLINE# for", 0.07873122274779977], ["( n /", 0.07870816242033582], ["b is", 0.07868008685384577], ["#INDENT# count +=", 0.0786385768980322], [", a", 0.07856386496610274], ["-2 ]", 0.0784988796120256], ["== x", 0.07849457022735466], [") #NEWLINE# f", 0.07849147918811494], ["#INDENT# #DEDENT# n", 0.07846219964364592], [" #INDENT# #DEDENT# n", 0.07846219964364592], ["i <=", 0.07841207215473354], ["in graph", 0.0784093065602484], ["n ) : ", 0.07839544232279304], [": #INDENT# count =", 0.07838848998456992], ["#NEWLINE# result = [", 0.07838476512676713], [", b ) :", 0.07837845551116182], ["-2", 0.07829964172787209], ["( m ) :", 0.07829679616942725], ["#INDENT# for", 0.07826185078814929], ["lcm", 0.0782427972133972], ["return result #NEWLINE# #DEDENT#", 0.07821592067609265], ["// gcd (", 0.07818658288414237], [", c ) :", 0.07816584560352999], ["else \"no\"", 0.07813074303805431], ["#DEDENT# if j", 0.07789977910006995], ["'#'", 0.07789584582655461], ["c ) )", 0.07787634113670053], [": #INDENT# x +=", 0.07784795881323839], ["if i not", 0.077827015143749], ["if i not in", 0.077827015143749], ["\":\"", 0.07782320970992641], ["!= -1", 0.07779943659680862], ["dp =", 0.07771963160067018], ["mid + 1", 0.0777138393793562], ["#DEDENT# read the", 0.07771176920456495], ["x , y ,", 0.07767219377135186], ["form a", 0.07765833431844062], ["0 #NEWLINE# for", 0.07760803278888928], ["parent ,", 0.07759385197277754], ["( parent ,", 0.07759385197277754], ["( parent", 0.07759385197277754], ["number of ways", 0.07758294402325314], ["of ways", 0.07758294402325314], ["] [ y", 0.07741015884930683], ["r #NEWLINE# #DEDENT#", 0.07729725030408757], ["#NEWLINE# yes #NEWLINE#", 0.07720978191769036], [") #NEWLINE# yes #NEWLINE#", 0.07720978191769036], [") #NEWLINE# yes", 0.07720978191769036], ["#NEWLINE# yes", 0.07720978191769036], [", x2 , y2", 0.07715718342899096], ["return a", 0.07708486516038818], ["beauty", 0.0770823131611612], [", y1 ,", 0.07705220405316028], [", f", 0.0770377618975434], ["n +", 0.07700188986637575], ["mod ) % mod", 0.07697767024116801], ["mod ) %", 0.07697767024116801], ["elements #NEWLINE#", 0.07689894388586235], ["'s possible", 0.07687974245983432], ["'s possible to", 0.07687974245983432], ["it 's possible to", 0.07687974245983432], ["it 's possible", 0.07687974245983432], ["input the", 0.07687165899290618], ["#NEWLINE# while left", 0.07672604588331995], ["max _count", 0.07671538133337932], [", c , d", 0.07670778043259638], ["#NEWLINE# print ( len", 0.07665346814591872], [") : #INDENT# cnt", 0.07664412955226853], ["#DEDENT# #DEDENT# return true", 0.07660205260936002], [") #NEWLINE# #DEDENT# for", 0.07656555064853052], ["== n -", 0.07637216587237508], ["== n - 1", 0.07637216587237508], ["split ( ) [", 0.07636663770940293], ["min _cost", 0.07627249285473868], ["random", 0.07621440398224603], ["#DEDENT# return dp", 0.07621036847466017], [", visited", 0.07619772581061635], ["= b , a", 0.07614109393989324], ["\"yes\" if", 0.07612548239677865], ["_digits", 0.07612430083858808], ["operations #NEWLINE#", 0.07607016942677612], ["#NEWLINE# #DEDENT# #DEDENT# n", 0.07606843871646676], ["#INDENT# y", 0.0760414932880201], ["#NEWLINE# left ,", 0.07598655376846877], ["#NEWLINE# s = input", 0.07596798190588507], ["( i ,", 0.07590213629533417], ["j ] ,", 0.07584848122338667], ["if i !=", 0.07580616037906387], ["#NEWLINE# print the minimum", 0.07580159984219025], ["max_index", 0.07579395439252704], ["if a >", 0.07578548091625818], ["a1 , b1", 0.07578281943747096], ["1 ] ,", 0.07568249240905195], ["[ i ] -", 0.07566159697950908], ["( b [", 0.07565645521663353], [") % (", 0.07561843074988257], [". append ( i", 0.07561067364810846], ["append ( i", 0.07561067364810846], ["deque", 0.07560873285579789], ["0 #NEWLINE# iterate", 0.07559317756309712], ["user", 0.07554797495603692], ["( 2 , int", 0.07553479802832733], ["2 , int", 0.07553479802832733], ["2 , int (", 0.07553479802832733], ["range ( k +", 0.07547549307824043], ["0 : ", 0.07547423177467473], ["0 :  #INDENT#", 0.07547423177467473], ["problem", 0.07540717202350992], [". ceil", 0.07538247211661825], [". ceil (", 0.07538247211661825], ["the sum of the", 0.0753703142980413], [", x2", 0.07536428676721726], ["( total_students", 0.07533829682847579], ["+ 1 , n", 0.07533261595600467], ["sofas", 0.07532043701619226], ["( i -", 0.07528905892483406], ["( ( x", 0.0752580749876962], ["until", 0.07524075914064328], ["substring", 0.07522060741761787], ["+ ( n", 0.07515003311215754], ["( c ,", 0.07512491310960845], ["value of", 0.07511050014695991], ["#NEWLINE# #DEDENT# elif x", 0.07507779705805676], ["#DEDENT# elif x", 0.07507779705805676], [", end", 0.07506864448347585], ["faction", 0.07503067694545988], [", i ) #NEWLINE#", 0.07500073948354825], [", 1 ]", 0.07495573099476747], ["ticket", 0.07493322601646468], ["neighbor )", 0.07489030503373849], ["= 2 *", 0.07487055128456535], ["the remaining", 0.07487047472937942], ["1 , m +", 0.07486386084459588], ["over all", 0.07485284048742391], ["1 #NEWLINE# direction", 0.07483617074667076], ["1 #NEWLINE# direction =", 0.07483617074667076], ["n , l ,", 0.07472656119078525], ["distinct", 0.0747121106291555], ["#NEWLINE# grid", 0.07468940785469451], ["_min", 0.07467238519845043], ["at the", 0.07463457861911788], ["the function #NEWLINE#", 0.07462099240392432], ["#NEWLINE# if s", 0.07461295403379792], ["( int )", 0.07455388363775613], ["of n", 0.07453047065270423], ["#DEDENT# k =", 0.07444176344376412], ["mid +", 0.07437927662447225], [") #NEWLINE# if s", 0.0743602869220809], [") #NEWLINE# print (", 0.07435273623018504], [") #NEWLINE# if result", 0.07424284549720257], ["of all", 0.07420233641586109], ["[ ] #NEWLINE# while", 0.07418430335794438], ["= 0 #NEWLINE# iterate", 0.07418406442545068], ["distance =", 0.07414737235273448], [") #NEWLINE# read", 0.07412721830611264], ["x , y =", 0.07406865825049555], ["#NEWLINE# left , right", 0.07403668086903543], ["append ( ( x", 0.07397225743194569], ["#INDENT# if n ==", 0.07395423735295578], ["import deque #NEWLINE#", 0.07386040316717418], ["collections import deque #NEWLINE#", 0.07386040316717418], ["s , t", 0.07383265572495445], ["track", 0.07380034610327824], ["node )", 0.0738002416061244], ["[ -2 ]", 0.0737818383160411], ["min _time", 0.07373640185571062], ["length of the longest", 0.0736704997569882], ["of the longest", 0.0736704997569882], [") ) [", 0.07362459959714106], ["range ( len (", 0.07359622321579708], ["h [", 0.07353642978516176], ["[ max_idx", 0.07350734441123644], [") #NEWLINE# grid =", 0.07349819685160586], ["n ] )", 0.07349132538420172], ["print ( min_cost", 0.07342254768275114], ["#NEWLINE# print ( min_cost", 0.07342254768275114], ["the last", 0.07338955091515124], [", points", 0.07336945289358458], ["#NEWLINE# iterate over the", 0.07335553479267667], [") : #INDENT# result", 0.07334478480252066], ["( list ( input", 0.07332933071480746], ["-1 , -1 )", 0.07331748161088146], [") - (", 0.07327314843011817], ["2 #NEWLINE# #DEDENT# else", 0.07324426122611748], ["] == board", 0.07318281684146244], ["== board [", 0.07318281684146244], ["== board", 0.07318281684146244], ["] == board [", 0.07318281684146244], ["r + 1", 0.07316426540936959], ["the string #NEWLINE#", 0.07314398463783789], ["else 0", 0.07313028252539074], ["graph =", 0.07310581083412043], ["if current", 0.0730813313478153], ["0 ] ) )", 0.07307104301006358], [". #NEWLINE# #INDENT#", 0.07304768713964653], ["( a *", 0.07302220586311477], [", c ) )", 0.07295833407070004], ["lcm ( a ,", 0.07295313756418631], ["#NEWLINE# visited =", 0.07290064927778063], ["#NEWLINE# create a dictionary", 0.07280588871657526], ["1 - i", 0.07277531334502228], ["case", 0.07271588462304693], ["#NEWLINE# for i", 0.07270746183498157], [") #NEWLINE# #DEDENT# find", 0.07267038261536539], ["freq [", 0.0726047902742495], ["] ) #NEWLINE# print", 0.07249958697602212], ["#DEDENT# #DEDENT# read", 0.07248865699071785], ["def is", 0.07244683942635455], ["#NEWLINE# print ( x", 0.07243662233834677], ["mid", 0.07241217074209338], ["block", 0.07239172383219424], ["[ r ] [", 0.07238811527273811], ["r ] [", 0.07238811527273811], ["minimum time", 0.07238378484448675], ["\"no\" #NEWLINE# #DEDENT# #DEDENT#", 0.07234872808250539], ["same", 0.07228386384976405], [", [ ]", 0.07224723170207568], ["moves ) #NEWLINE#", 0.07222889401448171], [": #INDENT# count +=", 0.07222210963970892], ["keep track of", 0.0722066137774196], ["keep track", 0.0722066137774196], ["track of", 0.0722066137774196], [", b ) )", 0.07217643216384612], ["1 ] = 1", 0.07216196425458668], ["y :", 0.07216186078478197], ["= float ( 'inf'", 0.07215764666678477], ["u ) #NEWLINE#", 0.07212908610340019], ["] #NEWLINE# initialize", 0.07212061602146555], ["for i in range", 0.07211747492655106], ["mid =", 0.07207664414114444], ["result .", 0.07205445916792826], ["the list", 0.07202910593157226], ["( neighbor", 0.07200439518626035], ["between the", 0.07199478334460767], ["else : if", 0.0719807097618078], [": (", 0.07197784674665476], ["perform", 0.07192766519744581], ["number of days", 0.07184005446136701], ["of days", 0.07184005446136701], [": #INDENT# grid", 0.07183020170852676], ["#INDENT# grid", 0.07183020170852676], ["> n", 0.07180886022060247], ["#NEWLINE# update the", 0.07179825701618031], ["c ] ==", 0.07178283117119759], ["[ c ] ==", 0.07178283117119759], ["#NEWLINE# t = input", 0.07169256305569949], ["is already", 0.07164477797649808], ["def gcd", 0.07161502770357651], ["def gcd (", 0.07161502770357651], ["2 * math .", 0.07156438742174442], ["2 * math", 0.07156438742174442], ["import defaultdict #NEWLINE# def", 0.07154139345738969], ["defaultdict #NEWLINE# def", 0.07154139345738969], ["the number of ways", 0.0715074581684602], ["[ 1 ] *", 0.07150580842802001], ["numbers #NEWLINE#", 0.07148588723317355], ["y1 , x2", 0.0714145430636556], [", y1 , x2", 0.0714145430636556], ["y1 , x2 ,", 0.0714145430636556], ["if y", 0.07135312071348815], ["( node )", 0.0713172102909236], [">= 2 :", 0.07126981658753917], ["queue .", 0.07125654350912065], ["== 1", 0.07124213478025929], ["for neighbor", 0.07123138154570641], ["for neighbor in", 0.07123138154570641], ["neighbor in", 0.07123138154570641], ["mod = 1000000007", 0.07121462306587993], ["range ( i +", 0.07120055302034047], [", 1 )", 0.07115422783911683], ["% p #NEWLINE# #DEDENT#", 0.07115301636025362], [", j ,", 0.07110278840837157], ["1 ] !=", 0.07109938609358937], [": initialize the", 0.07108037709349091], ["+ dp [ i", 0.07105611300282322], ["b >", 0.07103275258371744], ["is_possible (", 0.07101835451591258], ["distance #NEWLINE#", 0.07100431657557647], ["( q )", 0.07097695801584539], ["cells", 0.07091279804627472], ["int ( digit )", 0.07087248059050619], ["int ( digit", 0.07087248059050619], ["increment", 0.07081141587745474], ["#DEDENT# input", 0.07078014478314815], ["amount", 0.07075994112435433], ["#NEWLINE# mod = 1000000007", 0.07075712559521409], ["print ( moves", 0.07072411537414977], ["print ( moves )", 0.07072411537414977], ["% k ==", 0.07070450626987097], ["z **", 0.0706995293775461], ["- 1 )", 0.07069545998457934], ["if it 's possible", 0.07069398343269757], ["( int ( digit", 0.07068611577946428], ["#DEDENT# return result #NEWLINE#", 0.07066858497901408], ["in graph [", 0.07064638495540325], ["a1 ,", 0.07061148201841783], ["( n -", 0.07058789934268658], ["#NEWLINE# points", 0.070546822287579], ["a [ i -", 0.07047322894074486], ["k , a", 0.07041234233371862], ["#DEDENT# read the input", 0.07038938541664767], ["n , l", 0.07032484711693707], [") #NEWLINE# visited", 0.07028500794962594], ["- 1 and", 0.07026368570474432], ["] //", 0.07024780690667064], [", visited ,", 0.0701875805436407], ["visited ,", 0.0701875805436407], [") % n #NEWLINE#", 0.07003793562567602], ["s = list", 0.06990901816195516], ["s = list (", 0.06990901816195516], ["hand", 0.06986972065820078], ["d +", 0.069859370001829], ["#NEWLINE# #DEDENT# initialize", 0.06983144652605398], [", p )", 0.06981610470472707], ["left +", 0.06980766970229554], ["increasing", 0.06966792040487887], ["p )", 0.06962211216628413], [">= 2 : #INDENT#", 0.06960089962904352], ["a ) %", 0.06958184769812155], ["num_ways", 0.06955136393418172], ["#NEWLINE# calculate the total", 0.06951636493354568], ["( x , y", 0.069508035895089], ["[ ] ,", 0.06948134025761553], ["dp = [ 0", 0.06943509384118629], ["construct", 0.06935282585400673], ["from collections import deque", 0.06933944943817436], ["import deque", 0.06933944943817436], ["collections import deque", 0.06933944943817436], [", a =", 0.06932585933368303], ["empty", 0.06926632523163706], ["#NEWLINE# #DEDENT# #DEDENT# read", 0.06923481382797608], ["#NEWLINE# #DEDENT# test cases", 0.0692021984357648], ["- pos", 0.06919962658571863], ["data", 0.06905475444120898], ["strings #NEWLINE#", 0.06902381278656829], ["r + 1 )", 0.06896006011033211], [": #INDENT# y", 0.06889639555940831], ["the probability", 0.06884028035685819], ["q )", 0.06874040086561492], ["of x", 0.06863686384879797], ["node ]", 0.06855747181749224], ["% a == 0", 0.06855533476921377], ["% a ==", 0.06855533476921377], ["] == s [", 0.0685548442077988], ["#NEWLINE# #INDENT# for", 0.06853860516425542], ["of moves #NEWLINE#", 0.06853388345113531], ["test the", 0.06846825916695813], ["test the function #NEWLINE#", 0.06846825916695813], ["test the function", 0.06846825916695813], [", and", 0.06843453469338151], ["3 #NEWLINE# #DEDENT#", 0.06842205352612427], ["] ==", 0.06836032813019081], ["b == 0 :", 0.06827146408961783], ["result #NEWLINE# if", 0.06824313079565793], ["180", 0.06820972053000281], ["keep track of the", 0.06816100132704797], ["track of the", 0.06816100132704797], ["( u ) #NEWLINE#", 0.06813508491511336], ["i ] #NEWLINE# if", 0.06807969030385716], ["length #NEWLINE#", 0.06801686238690113], ["#DEDENT# #DEDENT# calculate", 0.06801157369670201], ["-1 ] #NEWLINE# #DEDENT#", 0.0680022234557778], ["get the", 0.06799410505283152], ["[ j ] ,", 0.06790962809351908], ["def gcd ( a", 0.0678519817679228], ["i ] [", 0.06782738565922646], ["#DEDENT# #DEDENT# return -1", 0.0677871359544365], [") #NEWLINE# dp", 0.0677623680279202], ["-1", 0.06774510900227688], ["#DEDENT# else : if", 0.06770095026905507], ["are at", 0.0676707092089266], ["u )", 0.06765012902660764], ["the output", 0.0676494329189414], [") % p #NEWLINE#", 0.06758933120439739], ["input values", 0.06756432499786089], ["1 #NEWLINE# for i", 0.06746845570458412], ["1 +", 0.06746750695514547], [") #NEWLINE# graph [", 0.06745750321343688], ["( 4 ,", 0.06745646588477529], ["d ) : #INDENT#", 0.06742274831175697], ["int ( n **", 0.06740980169923382], [", q = map", 0.06738251137844481], ["q = map (", 0.06738251137844481], ["q = map", 0.06738251137844481], ["#NEWLINE# n , m", 0.06736547676257654], ["w ) :", 0.06735378719689629], [": count the", 0.06735208011217965], [": count", 0.06735208011217965], ["= [ 1 ]", 0.06734044339488399], ["10 +", 0.06728046631674157], ["// gcd ( a", 0.06725946401791548], ["initialize variables", 0.06723240168075298], ["students", 0.06718660998970702], ["grids", 0.06716342261939794], [") : #INDENT# t", 0.06711226403479656], ["days #NEWLINE#", 0.06709890622085014], ["cost #NEWLINE#", 0.06708421482119736], [") ) #NEWLINE# edges", 0.06707728913521721], ["u , v", 0.06705593450919313], ["b , d ,", 0.0670455708510785], [", d , s", 0.0670455708510785], ["d , s", 0.0670455708510785], ["#DEDENT# check if there", 0.06702847651785528], ["x_min", 0.06698564662777394], ["y_min", 0.06698564662777394], [". index (", 0.06695042904535607], ["abs ( b", 0.06692242093611085], ["h [ i", 0.06691371414440297], ["if all (", 0.06688492667257614], ["( f ,", 0.06686901621887552], ["0 ] .", 0.0668633652978973], ["[ 0 ] .", 0.0668633652978973], ["else : #INDENT# break", 0.06684771696799198], ["* 10 +", 0.06682878594726255], ["- 1 ] [", 0.06677375291939142], ["c ) ) #NEWLINE#", 0.0667337285465682], ["moves )", 0.0667176919705483], ["profit", 0.06670159539922606], [", x ) :", 0.06668737605277729], [", pos", 0.06666587734777643], [") ) #NEWLINE# grid", 0.06662295071181168], ["0 ) ,", 0.06660488671145987], [", 0 ) ,", 0.06660488671145987], ["solve ( n )", 0.06659819703357651], ["#DEDENT# result", 0.06652223997844614], ["prefix_sum [", 0.06650715389200283], ["number of moves #NEWLINE#", 0.06641328153277282], [") ) #NEWLINE# s", 0.0664129235177694], ["the result #NEWLINE# if", 0.06638107518581744], ["to find the", 0.06636120291619203], [", we", 0.06630578020607866], [", x [", 0.0662962026585806], ["read input from", 0.06626716464776641], ["x1 , y1 ,", 0.06619681908882254], ["in the array", 0.06610390756330806], ["#INDENT# while", 0.06608857127639992], ["#NEWLINE# keep", 0.06608202781299216], ["base", 0.06597833285680957], ["the input #NEWLINE# n", 0.06596967858002702], ["if it is", 0.06596405495294892], ["roads", 0.06595662846269083], ["] , [ ]", 0.06591200848824019], ["[ ] , [", 0.06591200848824019], ["y : #INDENT#", 0.06578066194075345], ["is 0", 0.06574764061497874], ["j - 1", 0.06571146305353047], ["[ 0 ] )", 0.06568319949702343], ["( arr ,", 0.06545906310471304], ["#NEWLINE# #DEDENT# input", 0.06544556556593309], [": count the number", 0.0653254482650115], ["calculate the distance", 0.06529841437172952], ["iterate through the", 0.06529348893811525], ["return a #NEWLINE#", 0.0650827342778793], ["== a", 0.06508038910472407], ["break #NEWLINE# #DEDENT# else", 0.06507259200967173], ["#DEDENT# initialize the", 0.0650717928240855], ["n , edges", 0.0650233808637584], ["count of", 0.06502267482389246], ["ans : #INDENT#", 0.06497004576259158], ["ans :", 0.06497004576259158], ["#NEWLINE# if n <", 0.06494285705489419], ["index (", 0.06492046913291817], ["deque #NEWLINE#", 0.06489577613267165], ["if the number", 0.0648441334560497], ["abs", 0.06484326922218829], [") #NEWLINE# f =", 0.06483702207443737], ["#INDENT# diff =", 0.06480555421619223], ["#INDENT# diff", 0.06480555421619223], ["false #NEWLINE# #DEDENT# #DEDENT#", 0.06480411136356065], ["have", 0.06479600760111295], [", grid", 0.06477967089544644], ["n ] #NEWLINE#", 0.06477044761472016], ["] = a", 0.06475914391769902], ["( total_students // 2", 0.0645756829958364], ["( total_students //", 0.0645756829958364], ["#INDENT# result +=", 0.06457376454172835], ["wcd", 0.06455803515432833], ["the difference", 0.06454738492515905], [", [ ] #NEWLINE#", 0.06451222533713254], ["there is a", 0.06450847299578913], [", add", 0.06450456898027905], ["] + a", 0.06447944393758735], ["rank", 0.06440457282196828], ["i ] [ j", 0.06439374931109272], [". sort ( reverse", 0.0643300149892776], ["sort ( reverse =", 0.0643300149892776], ["sort ( reverse", 0.0643300149892776], ["( reverse", 0.0643300149892776], ["( reverse =", 0.0643300149892776], ["( reverse = true", 0.0643300149892776], ["number of ways to", 0.06430853722380722], ["ways to", 0.06430853722380722], ["of ways to", 0.06430853722380722], ["/ 2 * math", 0.06426676730092688], ["/ 2 *", 0.06426676730092688], ["max_messiness", 0.06420018568720799], ["% k == 0", 0.06416695272671273], ["i - j", 0.06414963677215886], ["** i", 0.06414270707368411], ["pos )", 0.06412335390557294], ["a list", 0.06412032122553318], ["readline ( ) )", 0.06399210637619807], ["+ abs (", 0.06394617952317043], ["+ abs", 0.06394617952317043], ["loop", 0.06391410994963502], ["#DEDENT# print the maximum", 0.06389052005556281], ["] + dp [", 0.06380818966868766], ["] + dp", 0.06380818966868766], ["moves =", 0.06376259183508409], ["#NEWLINE# sort", 0.06369350284106069], ["to check", 0.06368200213197515], ["= s [ i", 0.06353642653649282], ["] * (", 0.06342312609556136], ["x + 1 )", 0.06340738320068574], ["b + 1", 0.06337928114510209], ["( a ) )", 0.0633624608447201], ["ratings [", 0.06330926146385173], ["( 6", 0.06329463903182292], ["#NEWLINE# edges", 0.06317230817508013], ["times #NEWLINE#", 0.0630768167382201], ["time )", 0.06306339012972084], ["to check if", 0.06299102638116347], ["== 'b'", 0.06294027638160606], ["1 #NEWLINE# b", 0.06285966903177317], ["s = input (", 0.06284345681484187], ["s = input", 0.06284345681484187], [", 10", 0.06274403692784664], [", n - 1", 0.06273947470454726], ["] [ i", 0.0627136445276328], [">= m", 0.06262624930684657], ["#NEWLINE# arr = list", 0.06261623973433435], ["arr = list (", 0.06261623973433435], ["arr = list", 0.06261623973433435], [", y2", 0.06258916832135741], ["abs (", 0.06252169105456087], ["left #NEWLINE#", 0.06251381736892887], ["range ( n -", 0.06251256970398661], ["% (", 0.06242352425059123], ["return a #NEWLINE# #DEDENT#", 0.06242097101262824], ["digits #NEWLINE#", 0.06241427004160946], ["the count of", 0.06241088387943358], ["check if there are", 0.06238362330289883], ["w ) : #INDENT#", 0.06237448691835545], [") ) #NEWLINE# p", 0.06225518909247582], ["* b //", 0.06220377189220258], ["m , x", 0.06214737312044601], ["calculate the total number", 0.06213753673517018], ["type", 0.062026303127597236], ["#NEWLINE# iterate through the", 0.061995096590334454], ["print the minimum number", 0.06197014478681726], [", x =", 0.061963720767131525], ["[ [ 0 ,", 0.06195777057773149], [", b2 )", 0.06192142307735388], ["= len ( s", 0.06185512831806461], ["#NEWLINE# grid = [", 0.06182592771075972], ["grid = [", 0.06182592771075972], ["#NEWLINE# grid =", 0.06182592771075972], ["grid =", 0.06182592771075972], ["node ,", 0.06181421353386868], ["s and", 0.061810142072388705], ["#INDENT# #DEDENT# #DEDENT#", 0.06177923527184137], [" #INDENT# #DEDENT# #DEDENT#", 0.06177923527184137], ["2 **", 0.06173551345388791], ["false #NEWLINE# #DEDENT# if", 0.06171246985108024], ["#DEDENT# i +=", 0.06166960689026722], ["the user", 0.061660784553594555], ["so", 0.06165973786088749], ["mod = 1000000007 #NEWLINE#", 0.06164993642003926], ["to buy", 0.06163530529604416], ["] ) ) :", 0.06149768056071349], ["// b", 0.06145161881504253], ["k , a )", 0.06136672812244761], ["= 2", 0.061362085375597036], ["i ] == '1'", 0.061360554887374144], ["difference between", 0.06134965841557193], ["amount of", 0.06134896816400695], ["grid )", 0.06132393350020866], ["'c'", 0.06128962523366341], ["dp = [", 0.06116435986981435], [") ) #NEWLINE# create", 0.06115634973943553], ["max ( max", 0.06115376425204258], ["#NEWLINE# cost =", 0.061094935659118776], [", n ) )", 0.061059536745439916], ["last element", 0.06098978863218942], ["result = solve", 0.060909198004463545], ["result = solve (", 0.060909198004463545], ["different", 0.060899849342007796], ["r - 1", 0.06089291163552967], ["a + b", 0.060801811527293755], ["both", 0.060751833634235475], ["( m ) #NEWLINE#", 0.060749800302966554], ["index of the", 0.060723587031534444], ["index of", 0.060723587031534444], ["find the minimum", 0.0607190198242881], ["teams", 0.060697143661836206], [", y ,", 0.06069226004574291], ["m ]", 0.060658594287049124], ["( s ) )", 0.060650958732266724], ["#DEDENT# return dp [", 0.06064057275650566], ["and print the result", 0.0605597920795253], ["input #NEWLINE# a", 0.06053922177621754], ["q * ( n", 0.06052033651029565], ["q * (", 0.06052033651029565], ["] == s", 0.060518855900666656], ["vasiliy", 0.06043069185091541], ["function to check", 0.0604045351836055], ["operation ==", 0.06039003696251449], ["tile", 0.060373172162971105], [": i + 2", 0.06033596332907754], [") ) for _", 0.06024426311291317], ["add the", 0.06024404534387955], ["== n", 0.06019137292063334], ["( 10 ** 9", 0.0601792361262481], ["] + a [", 0.060148406774132926], ["of s", 0.06013757987183747], ["#NEWLINE# compute", 0.06008874229839693], ["1 #NEWLINE# while", 0.06004641642013227], ["pile", 0.05999567995770707], ["the index", 0.0599926878318227], ["cost of", 0.05998193222506312], [", y2 ,", 0.05997027457990135], ["n ) )", 0.05987689785784093], ["j >", 0.059843513478453035], ["such", 0.05983268405770948], ["b -=", 0.05981257271290835], ["function to check if", 0.05969555010325658], ["= w", 0.05968631187035065], ["return dp [ n", 0.05968341111601669], ["the cost", 0.05967329032909364], [", -1 ,", 0.05966528487916378], ["else : print", 0.05956536947969507], ["== '1'", 0.05950465812515749], ["u ,", 0.059472737378509805], ["is possible", 0.05947221312576922], ["the target", 0.05944020794954025], ["] = p", 0.05943763464173904], ["#DEDENT# #DEDENT# calculate the", 0.059414725984466885], ["'a' ) )", 0.059395950760424365], ["( 'a' ) )", 0.059395950760424365], ["convert", 0.059394994762221286], ["+= a [", 0.05936227145139276], ["= s .", 0.05918529788283088], ["x +=", 0.05918368477503712], [") #NEWLINE# break", 0.0590969254519743], ["a [ 1 ]", 0.059080446022645776], ["0.5 )", 0.059072748923319325], ["'a' :", 0.05906890039239545], [", t ) #NEWLINE#", 0.05903195232256164], ["x6", 0.05902569669844413], ["y5", 0.05902569669844413], ["y6", 0.05902569669844413], ["floor (", 0.05902439789835095], ["#INDENT# return sum (", 0.05892921858048914], ["#INDENT# return sum", 0.05892921858048914], ["their", 0.058810395100946614], ["#DEDENT# #DEDENT# n ,", 0.058792422975247206], ["#NEWLINE# c", 0.05878068965354723], ["#NEWLINE# sort the", 0.05875545192837872], ["#NEWLINE# perform", 0.05870127318656986], [", screen", 0.05855201284743846], ["votes", 0.05850876950397278], ["g [ i ]", 0.05848954791286155], ["col", 0.058475719562131205], ["( u )", 0.058456568523215076], ["else \"no\" )", 0.058435915311505535], ["( \"yes\" if", 0.058435915311505535], ["print ( \"yes\" if", 0.058435915311505535], ["can not", 0.05841149760560994], ["terms", 0.05841069790783237], ["spectators", 0.05836910510292554], ["#NEWLINE# graph [", 0.05836567392535726], [") : initialize the", 0.05828463572062267], ["x = list", 0.05826950320924362], ["x = list (", 0.05826950320924362], ["the range", 0.058263634941345246], ["x [", 0.058229367026467735], ["check if there is", 0.05822923013469588], ["#NEWLINE# print ( count", 0.05820385135205245], ["r #NEWLINE#", 0.05815910317779894], ["[ node ]", 0.05814951931982603], ["import sys #NEWLINE# def", 0.05812597190828568], [") #NEWLINE# break #NEWLINE#", 0.058100624384249226], ["bars", 0.05806263941145597], ["j , k", 0.0579970844470847], ["y ==", 0.05797817454675538], ["a palindrome", 0.05797803714708508], ["ans #NEWLINE#", 0.057941084843451555], ["( ) #NEWLINE# if", 0.057857557302576856], [") #NEWLINE# v", 0.057851056631087895], ["s [ i ]", 0.05784388368157496], [": #INDENT# while", 0.057686894485018014], ["( j ,", 0.05766494523019166], ["elif a", 0.05759905802647789], ["as the", 0.057531350176001646], ["n % b", 0.05750976440564013], ["] [ y ]", 0.0574671503157298], ["i +=", 0.057422274963170185], ["#NEWLINE# graph", 0.05725851597832483], ["[ max_index", 0.05725340970080701], ["= 1000000007", 0.0572378509094709], [": #INDENT# return sum", 0.057207361300335706], ["the index of", 0.05712598984666669], ["the index of the", 0.05712598984666669], ["from stdin", 0.05707689416481417], ["#NEWLINE# #DEDENT# read the", 0.05704351442326872], ["element is", 0.05701561872880285], ["* ( n", 0.057007981018358835], ["square #NEWLINE#", 0.05700186611063602], ["into", 0.056789165252571425], [": if there", 0.0567656180104042], ["steps #NEWLINE#", 0.05670707508523102], ["( x1 ,", 0.056680543270845755], ["#INDENT# if grid", 0.0566298499312642], ["#INDENT# if grid [", 0.0566298499312642], [", 4 )", 0.056599377551963974], [", x", 0.05658842911944624], ["#NEWLINE# steps", 0.056587847872664236], ["of digits", 0.056585949675488925], ["in range ( len", 0.05655177862211454], ["range ( len", 0.05655177862211454], ["#DEDENT# dp", 0.05647606660572732], ["end = \" \" )", 0.05646396942018538], ["end = \" \"", 0.05646396942018538], ["the current element", 0.05645518718516703], ["current element", 0.05645518718516703], ["needed to", 0.05640303236889618], ["+= 1 #NEWLINE# if", 0.05640109924376913], ["#DEDENT# i += 1", 0.05635693634908696], ["w , h", 0.05633189831963937], ["in str", 0.05623574679384472], ["in str (", 0.05623574679384472], ["list of", 0.05612437172832996], ["i ] ] =", 0.056048256848706304], ["elif x ==", 0.056024206659053576], ["#NEWLINE# #DEDENT# def main", 0.056020734168930254], ["the grid", 0.055992465141444195], ["#NEWLINE# right", 0.0559831047076331], ["n // 2 +", 0.055953677693932696], ["cost =", 0.055850309405121555], ["] #NEWLINE# return", 0.05575018643265543], ["#INDENT# i += 1", 0.05574649978931479], ["( ) [", 0.0557229513398955], ["stripe _height", 0.05572073987558702], ["_height", 0.05572073987558702], ["stripe", 0.05572073987558702], ["coordinates", 0.055601504171645576], ["st1", 0.05559618388440581], ["adjacent", 0.05558264471058197], ["return max", 0.05556555523695431], ["- 1 , j", 0.05556530883068622], ["g .", 0.055560485938689404], ["winning", 0.05555757209731334], [", 1", 0.05553748279977658], ["eat", 0.05551898508080008], ["a", 0.05543044549119964], ["of the current", 0.055256628362657045], ["= 2 **", 0.05524233409045577], ["time #NEWLINE#", 0.05522479756165838], ["#NEWLINE# initialize a", 0.05519731035134748], ["of distinct", 0.05518742421486695], ["number of distinct", 0.05518742421486695], [") #NEWLINE# #DEDENT# otherwise", 0.055172927186530926], ["#DEDENT# print the minimum", 0.0551458405327844], ["if the first", 0.05513710802356275], ["z )", 0.055092451806825364], ["_count =", 0.0550076035659648], ["#DEDENT# elif a", 0.05500115404895107], ["j + 1", 0.05497584684503931], [", y +", 0.05491076045046279], ["( u", 0.05488111329286935], ["through all", 0.05481172274568547], ["r in", 0.054777960569742684], ["y == 0", 0.05474881239513799], ["c , d )", 0.054745542540838375], ["even", 0.054708786619652276], ["potions", 0.0546211268767889], ["t = int", 0.054560433987976595], ["t = int (", 0.054560433987976595], ["increment the", 0.05449869134039712], ["and maximum", 0.0544674878588085], ["sum ( 1 for", 0.05442965095260267], ["sum ( 1", 0.05442965095260267], ["( 1 for", 0.05442965095260267], ["i ] = (", 0.054386961820390045], ["#NEWLINE# moves +=", 0.054359105934330756], ["to be", 0.05433910227565244], ["a valid", 0.054268053249812355], ["y ,", 0.05423230836499133], ["to get", 0.054196172131215886], ["function to find", 0.05414609218733148], ["conditions", 0.05411361511534096], ["1 , 1 #NEWLINE#", 0.05410706303837632], ["] ) % mod", 0.05404750240663263], ["function to calculate", 0.05403599486873898], ["to calculate the", 0.05403599486873898], ["function to calculate the", 0.05403599486873898], ["to calculate", 0.05403599486873898], ["] #NEWLINE# #DEDENT# elif", 0.05402049825559589], ["programming", 0.05397459698588225], ["if the number of", 0.05396428359968445], ["j ] = 1", 0.05396374838960872], [") &", 0.05392313715627748], [", points [", 0.05390544783297106], ["] , points [", 0.05390544783297106], ["] , points", 0.05390544783297106], ["minimum and maximum", 0.05389836447437408], ["minimum and", 0.05389836447437408], ["x ] [ y", 0.05387272830273266], ["#DEDENT# the", 0.053827288889960294], [") #NEWLINE# edges =", 0.05376324871108167], ["m + 1 )", 0.053736348365369585], ["floor", 0.05373014012941377], ["* math .", 0.053662702679825536], ["* math", 0.053662702679825536], ["vasya", 0.053614738489778116], ["in each", 0.05361442455192397], ["area =", 0.05358667364999841], ["c -", 0.053576016372896135], ["is equal", 0.05351090302876401], ["// 2 ) #NEWLINE#", 0.053508290772239134], ["= abs ( a", 0.05349923135990489], ["arr )", 0.0533736711455613], ["if we", 0.053358702859174274], ["the two", 0.053347875782681076], ["calculate the sum", 0.053347296603525975], ["in range ( t", 0.05331912296063785], ["range ( t", 0.05331912296063785], [", y =", 0.053286003468869636], ["max_length =", 0.05328094528383377], ["if sum (", 0.05326664089618602], ["( x1 , y1", 0.053243669522070665], ["= i + 1", 0.05319416719890581], ["+ dp", 0.053183169020721066], ["index", 0.05316165897679508], ["#NEWLINE# #DEDENT# elif a", 0.0531300674578324], ["#INDENT# b =", 0.05308834206143925], ["#INDENT# s = input", 0.053021950539912675], ["( a * b", 0.05301123230186484], ["less than or equal", 0.052942186597459015], ["less than or", 0.052942186597459015], ["1 ] - 1", 0.052910203993635795], ["1 , j ,", 0.05289981947151026], ["of students", 0.05289054514679501], ["#NEWLINE# #DEDENT# dp", 0.05287560074648318], ["] = dp", 0.05281382298919016], ["] = dp [", 0.05281382298919016], ["a [ j", 0.05276516025126526], ["the time", 0.052721359355597436], ["is divisible by", 0.05259522950247496], ["is divisible", 0.05259522950247496], ["( n + 1", 0.05259246453136558], ["#NEWLINE# #DEDENT# x", 0.05251822319423061], ["* b [", 0.05251599143549894], ["* math . sin", 0.052455972981564125], ["math . sin", 0.052455972981564125], ["sin (", 0.052455972981564125], [". sin (", 0.052455972981564125], [". sin", 0.052455972981564125], ["math . sin (", 0.052455972981564125], ["#NEWLINE# #DEDENT# #DEDENT# calculate", 0.0524159681642862], ["( hh", 0.052400268518221486], ["( n , x", 0.05238570534054513], ["the values", 0.052346758757131996], ["// 2 ]", 0.05228512331249228], ["right ,", 0.05227840305670727], ["maximum value", 0.05222912132161562], ["#DEDENT# create a", 0.0521918184533408], ["#DEDENT# create", 0.0521918184533408], ["the minimum and maximum", 0.052091603863019316], ["the minimum and", 0.052091603863019316], ["b ,", 0.05208389570376857], ["by the", 0.05206029354973329], ["( count", 0.052036436009826104], ["[ max", 0.052016166716593426], ["( j )", 0.05200398808633483], ["] = -1 #NEWLINE#", 0.05195993763925454], ["] = -1", 0.05195993763925454], ["side", 0.05189703551700601], ["with the maximum", 0.05182377835390635], ["c in s", 0.051802533232672164], ["for c in s", 0.051802533232672164], ["if sum", 0.051753288603048446], ["#NEWLINE# #DEDENT# initialize the", 0.05169939067229914], ["r ] [ c", 0.051683019805812365], ["[ list ( map", 0.05167973941668713], ["st2", 0.05162502789266256], ["call", 0.05155813120281351], ["can form", 0.051539262882506674], ["can form a", 0.051539262882506674], ["x ) :", 0.05153395102801906], ["d ==", 0.05144187950589478], [") #NEWLINE# update", 0.05138829514497273], ["#NEWLINE# to", 0.051354707307389655], [") #NEWLINE# iterate", 0.05126020837022779], [". index", 0.051257574783465584], ["m ) ]", 0.051233569418352526], ["screen ,", 0.051233011241508655], [": #INDENT# b =", 0.05115284979562055], ["ans += 1", 0.05113911494021815], ["ans += 1 #NEWLINE#", 0.05113911494021815], ["elements in", 0.05106444127706053], ["#NEWLINE# #DEDENT# return result", 0.05104918788218585], ["#NEWLINE# if a [", 0.05099856088237675], ["false #NEWLINE#", 0.050983831149528126], ["when", 0.05095740327593403], ["distance between", 0.05092846729618508], ["greater than or equal", 0.05079893054494087], ["greater than or", 0.05079893054494087], [", x , pos", 0.05079164778301978], ["good", 0.05079139766196448], ["three", 0.05076140694493642], ["segment", 0.05075961441421665], ["#NEWLINE# count the", 0.05075863544294504], ["= ( res *", 0.05074383381697966], ["( res *", 0.05074383381697966], ["#INDENT# res = (", 0.05074383381697966], ["[ max (", 0.050719648354938564], ["iterate over all", 0.05065441863089788], ["for all", 0.05062673525941346], ["return len (", 0.05061828572060498], ["return len", 0.05061828572060498], ["n - a", 0.05060577344044436], ["sequence of", 0.05060254668954548], ["( m ) ]", 0.05059465736825451], ["#DEDENT# calculate the minimum", 0.050489387857065936], ["0 : if", 0.050478465126710566], ["the winner", 0.05045638138622997], ["{", 0.0504199043487986], ["}", 0.0504199043487986], ["= b #NEWLINE#", 0.0503565641870402], ["+ 7 ) #NEWLINE#", 0.050339427962766914], ["7 ) #NEWLINE#", 0.050339427962766914], ["#DEDENT# #DEDENT# read input", 0.05031350405097261], [", b", 0.05020751610429497], ["'g'", 0.05015482890808593], ["find the number", 0.05014914623137463], ["find the number of", 0.05014914623137463], ["y2 ,", 0.05011830940123769], ["user #NEWLINE#", 0.05010739196778962], ["[ n ]", 0.05010051534252997], ["x , y )", 0.050080496757276105], ["b = b ,", 0.04998353224188697], [", b = b", 0.04998353224188697], ["= b ,", 0.04998353224188697], ["tuple ( map (", 0.04992818313227092], ["tuple ( map", 0.04992818313227092], ["( n +", 0.049922775478851614], ["j ] >", 0.04988296005892794], ["[ j ] >", 0.04988296005892794], ["#INDENT# a .", 0.0498670433694557], ["( x *", 0.04986691474016338], ["row and", 0.04986319938761329], ["bottle #NEWLINE#", 0.04986048325052637], ["m ) )", 0.04985164860608878], [", we can", 0.04983266772358934], [") : #INDENT# k", 0.04982380001697421], ["= defaultdict ( int", 0.04982261381610004], ["this", 0.0498106859990433], ["d :", 0.04979896634765955], ["queue =", 0.049781348984924895], ["removed", 0.049774429372034565], ["] + (", 0.049724846878205525], ["squares", 0.04970405724929851], ["_prices", 0.04965213771664205], ["is odd", 0.049633883221821926], ["top", 0.049623435616121335], ["= defaultdict ( list", 0.04961312423356964], ["] \\", 0.04960397825442366], ["modulo", 0.04960333485509653], ["( moves )", 0.049603126925169765], ["( moves", 0.049603126925169765], ["r +", 0.04960153034115157], ["#INDENT# if l", 0.0496000119227046], ["value in", 0.049585430500363806], ["( left", 0.04952751992019369], ["#DEDENT# print the number", 0.04951433120927626], [") : if the", 0.04949524992486636], ["the maximum length", 0.049471830107827096], ["maximum length", 0.049471830107827096], ["soda", 0.04944596430143019], ["== 0 : if", 0.049429373481797545], ["1 ) +", 0.04942026261723661], ["part", 0.049394883832959105], ["- 1 ,", 0.04939071651646769], ["#DEDENT# elif x ==", 0.049349186814357605], ["( 3 ,", 0.04934832958810398], ["curr_num", 0.04930175503663939], ["calculate the sum of", 0.049278248113051155], ["#DEDENT# return \"no\" #NEWLINE#", 0.04925645410152095], ["#DEDENT# return \"no\"", 0.04925645410152095], ["join (", 0.049235320696802455], [". join (", 0.049235320696802455], ["] == 0 and", 0.049229503162322906], ["a . append (", 0.04922072509298437], ["a . append", 0.04922072509298437], ["read the number", 0.049184708616269654], ["read the number of", 0.049184708616269654], ["#DEDENT# return the", 0.04914019742635296], ["new_x", 0.04909335561904805], ["the number of distinct", 0.04907660180294873], ["call the", 0.049068364466517196], ["the previous", 0.04906630429853405], ["== '.'", 0.049057151550096496], ["make the", 0.0490049431205946], ["expression", 0.048990333686705134], ["#INDENT# n ,", 0.04891901863484536], ["] ) for", 0.04889837734079434], ["'inf' ) #NEWLINE# for", 0.04885698560954827], ["the second", 0.048808435879314396], ["min_index", 0.04876544036607768], ["h +", 0.04873087097506617], ["in the array #NEWLINE#", 0.048728005424808964], ["n ) #NEWLINE# print", 0.048667966273014215], ["initialize the number of", 0.0486350045448929], ["initialize the number", 0.0486350045448929], ["x5", 0.04859635479596644], [") : #INDENT# count", 0.04851485751498902], [") #NEWLINE# initialize a", 0.04850721493239151], ["b == 0", 0.048435474147184694], ["i < n", 0.0484153336190944], ["n // a", 0.048414733960783315], ["( a1 ,", 0.04838020275569236], ["= -1 #NEWLINE#", 0.048363163842399935], ["string is", 0.04835615557448406], ["] [ i +", 0.048333906781066055], ["perform the", 0.04832579654429356], ["#INDENT# #DEDENT# print (", 0.048314311189984985], ["binary", 0.04831033841914317], [" #INDENT# #DEDENT# print", 0.048308969302941124], ["#INDENT# #DEDENT# print", 0.048308969302941124], ["coin", 0.04828982965056568], ["in edges", 0.048273108555199784], ["#INDENT# #DEDENT# for", 0.0482411254660783], [" #INDENT# #DEDENT# for", 0.0482411254660783], ["#INDENT# u ,", 0.04822288042003114], [": #INDENT# u ,", 0.04822288042003114], ["#INDENT# u , v", 0.04822288042003114], ["column", 0.048216156413215756], ["a number", 0.04820276681126219], ["segment_length", 0.048201451350488624], ["a , b =", 0.048186769336256166], ["equal ,", 0.04812160646395245], ["( k ,", 0.04797597031768552], [", i +", 0.04796598668613025], ["= float (", 0.04793085419669987], ["= float", 0.04793085419669987], ["= 1000000007 #NEWLINE#", 0.047917500356499707], ["divs", 0.04787731280863277], ["if no", 0.04783271857258168], [") - ord", 0.047810243613020297], ["- ord ( 'a'", 0.047810243613020297], [") - ord (", 0.047810243613020297], ["who", 0.04780098833613729], [", edges", 0.04773654277303199], [") not in", 0.04771255927988617], [") not", 0.04771255927988617], [", mod -", 0.047684759604139586], ["!= -1 :", 0.047683568301121866], ["'inf' ) #NEWLINE#", 0.04763549969770654], ["( 'inf' ) #NEWLINE#", 0.04763549969770654], ["' #NEWLINE#", 0.04763447447770003], ["none #NEWLINE#", 0.047590488822852654], ["] , x [", 0.0475529830647804], ["check if the current", 0.04753258544336004], ["( 0 , 0", 0.04752557750521496], ["distance (", 0.04752544960037576], ["that is", 0.047520686828482636], ["nearest", 0.04751553394704428], ["else : print (", 0.04748587734017962], ["1 #NEWLINE# #DEDENT# #DEDENT#", 0.04742711331677929], ["calculate and", 0.0474185898141173], ["#NEWLINE# calculate and", 0.0474185898141173], ["( n *", 0.047418292650571625], [") #NEWLINE# count the", 0.04741453175158309], ["to reach", 0.04738363919366876], ["over all possible", 0.04736114891907456], [") for _ in", 0.04733130373572225], [") for _", 0.04733130373572225], ["grade", 0.04723340332531417], ["l [ i ]", 0.047201826947075975], ["#DEDENT# function", 0.04717849016449616], ["#DEDENT# function to", 0.04717849016449616], ["n ]", 0.04716464155745564], ["n , k =", 0.047091206064737184], ["palindrome #NEWLINE#", 0.047086677745941274], ["0 #NEWLINE# iterate over", 0.04708036705789714], ["] - 1 )", 0.04707729168423319], [") ) #NEWLINE# read", 0.047027911636953516], ["satisfies", 0.047011736381702855], ["x0", 0.0469977687181405], ["becomes", 0.04696437414879723], [") /", 0.04693556041793365], [") #NEWLINE# sort", 0.046928021202573465], ["max ( dp", 0.04690915098050481], ["( 1 , len", 0.04684031022444224], [") #NEWLINE# graph", 0.04677717823028851], ["t #NEWLINE# #INDENT#", 0.04673334694488016], ["sin", 0.046731937073667226], ["[ i ] )", 0.046706703165330356], ["for a in range", 0.046689831617599556], ["a in range (", 0.046689831617599556], ["a in range", 0.046689831617599556], ["j ] [ k", 0.046674410342444926], [") #NEWLINE# read the", 0.046533038104529294], ["list to", 0.04652962559121408], ["#DEDENT# if all", 0.04652678715979909], ["#NEWLINE# g [", 0.046489555445808003], ["= ( i", 0.046439277899039844], ["is equal to", 0.04622250089860616], ["m ) #NEWLINE#", 0.04622244003499194], ["abs ( x", 0.046192981863244074], [": #INDENT# flag", 0.04613139497228604], ["#INDENT# flag", 0.04613139497228604], ["#INDENT# flag =", 0.04613139497228604], [": #INDENT# flag =", 0.04613139497228604], ["] :  #INDENT#", 0.046123531803493364], ["] : ", 0.046123531803493364], ["change", 0.046118671580816915], ["using", 0.04611023884232692], [", line", 0.04610475508712116], ["== '('", 0.04606096342291079], ["update the minimum", 0.046059666060273514], ["x ,", 0.04604860526855541], ["print ( len (", 0.04604266630186449], ["print ( len", 0.04604266630186449], [") % p", 0.045980063649950796], ["#NEWLINE# read input #NEWLINE#", 0.045974893771458074], ["* 2 #NEWLINE#", 0.04582519895843555], ["#DEDENT# n , m", 0.04580816747441693], [" #INDENT# #DEDENT# dp", 0.04580532826061218], ["#INDENT# #DEDENT# dp [", 0.04580532826061218], ["#INDENT# #DEDENT# dp", 0.04580532826061218], ["sqrt ( n", 0.04580307462805938], ["y + 1", 0.04577289539627554], [", 0 ) ]", 0.04575530441762121], ["a ) +", 0.04568149865966187], ["- 1 ] :", 0.04564582583342904], ["the right", 0.04562872584175568], ["graph [ v", 0.045598528091828155], ["graph [ v ]", 0.045598528091828155], ["window", 0.04553610405855721], ["+ m", 0.04551004437580757], ["used #NEWLINE#", 0.04550905028896317], ["ascending", 0.04546984424963565], ["ascending order", 0.04546984424963565], ["in ascending order", 0.04546984424963565], ["in ascending", 0.04546984424963565], ["'a' ) ) %", 0.045391067550502116], [") , abs", 0.045380272939594235], [") , abs (", 0.045380272939594235], ["of the array", 0.04533420488662802], ["of t", 0.045296538668835595], ["return min", 0.04529070814841351], ["to make the", 0.04527430343551607], ["m , d", 0.04527157972130684], ["m ) ) #NEWLINE#", 0.04517188181439792], ["[ j +", 0.04512651193007554], ["if grid [", 0.04510510176434157], ["if grid", 0.04510510176434157], ["minimum number of moves", 0.04504811595302952], ["1 or", 0.045009420740226534], ["abs ( x -", 0.04500485703084167], ["a winning", 0.04499546659700596], ["#NEWLINE# #DEDENT# x =", 0.0449665347474078], ["the new", 0.04496345966106685], ["#DEDENT# iterate", 0.04486417463261968], ["time =", 0.04484895486988725], ["through each", 0.04483302509424895], ["is at", 0.04483277988567749], ["found ,", 0.04480546280153885], ["right )", 0.04472796963533272], ["less than the", 0.04471504964016156], ["value #NEWLINE#", 0.04471013270060758], ["#NEWLINE# loop", 0.044692530548469424], ["is 1", 0.044659137319232996], [", y ) #NEWLINE#", 0.04447219986609482], ["s ) ) #NEWLINE#", 0.044403388120431646], ["x += 1 #NEWLINE#", 0.044401495581398116], ["x += 1", 0.044401495581398116], ["the condition", 0.044387248100055544], ["] [ j ]", 0.04437811077944914], ["person", 0.04436677358998412], ["initialize result", 0.04436157700038927], ["a [ j ]", 0.04435115084791442], ["#NEWLINE# graph =", 0.04428346917895869], ["+ p", 0.044280101578967695], ["#DEDENT# #DEDENT# if the", 0.04426897808004363], ["] == '.'", 0.044224048453963445], ["current character", 0.04420399408137944], ["#DEDENT# calculate the number", 0.04411456682121239], [", z", 0.04410570003725716], ["is odd ,", 0.04408539072642846], ["a2 ,", 0.04408136547135673], ["#INDENT# answer", 0.043942780299854156], ["flood_fill ( n ,", 0.04391400963557884], ["flood_fill ( n", 0.04391400963557884], ["flood_fill (", 0.04391400963557884], [", screen ,", 0.04391400963557884], ["flood_fill", 0.04391400963557884], ["m , i", 0.04391400963557884], ["the digits", 0.043874368254752945], ["freq", 0.04373305715978466], [", 1 ) )", 0.04372926698494637], ["return min (", 0.04372733544999104], ["is 0 ,", 0.04369148049430282], [", update", 0.04362414545502795], ["1 ] ) %", 0.04362131737983664], [") if", 0.04357648740701412], ["grid [ i", 0.04356795453306216], ["arr ) #NEWLINE#", 0.043544538754199384], ["= str", 0.04353252528042579], ["= str (", 0.04353252528042579], ["] [ k", 0.04352912595859086], ["res = 0", 0.04350305662181672], ["res = 0 #NEWLINE#", 0.04350305662181672], ["subsequence #NEWLINE#", 0.043440840345669716], ["for f", 0.04341771696131329], ["mod -", 0.04341214405017933], ["n , x ,", 0.043407226385272564], [". replace (", 0.04338815520867389], [". replace", 0.04338815520867389], ["replace (", 0.04338815520867389], [": if the current", 0.04338004595715672], ["( 'a'", 0.04336897219373467], [": #INDENT# a .", 0.043292055441214186], ["through all possible", 0.0432844114345805], ["impossible", 0.04320060923262039], ["#NEWLINE# #INDENT# n", 0.04317418989388814], ["positions", 0.043150849204238756], ["x *", 0.04314318171670017], ["painted", 0.04312720292274294], ["they", 0.043109615352043586], ["#DEDENT# n , k", 0.04310874793345212], ["#NEWLINE# if there", 0.04292999433150091], ["( arr ) #NEWLINE#", 0.04289383598040223], [") , (", 0.04280607523773705], [", y , z", 0.04270993645101258], ["#NEWLINE# count =", 0.04269446924126515], [": calculate the number", 0.04265895583243294], ["1 : ", 0.04255272574861953], ["1 :  #INDENT#", 0.04255272574861953], ["variable", 0.04251714150563023], [") ** 2 )", 0.04250971641839523], ["robot", 0.04250568374336622], ["b +", 0.04244323111737497], ["a = [ ]", 0.04244275081465654], ["m :", 0.04236840726783898], [", j , k", 0.04234593110670334], ["r [", 0.04232172381079813], ["1 , i", 0.04231714168630051], ["x , s", 0.042300377532627956], ["define", 0.04229579663838224], ["iterate through all", 0.04221873355797966], ["is a palindrome", 0.04220685374169157], ["[ i ] [", 0.04218366369805666], ["] , x", 0.04204491162204794], ["] [ k ]", 0.041996114597602004], [", p ) :", 0.04199409111478063], ["required number of", 0.04198280103449084], ["required number", 0.04198280103449084], [": #INDENT# for", 0.04185085978158759], ["prev =", 0.04181040770789705], ["1 , 1", 0.04177953899608572], ["* b #NEWLINE#", 0.04174153227724136], ["not possible", 0.04173125309503999], [") #NEWLINE# sort the", 0.041697076640090786], [": create", 0.04169616102577432], [", -1 , -1", 0.041670980053147004], ["#NEWLINE# #DEDENT# function", 0.041653918342662376], ["#NEWLINE# #DEDENT# function to", 0.041653918342662376], ["team", 0.041646603743351995], [", 2 *", 0.041637676541725205], ["a palindrome #NEWLINE#", 0.04161026705872132], ["number of pairs", 0.04158412807329486], ["of pairs", 0.04158412807329486], ["the maximum value", 0.04157353077917774], ["|=", 0.041570839903552315], ["- 2 )", 0.04155236377225537], ["j >=", 0.04152009518154126], ["k_power", 0.04151955866642113], ["n't", 0.041512540190730536], ["taking", 0.04141503221324585], ["if h", 0.04140514947583365], [", r ) :", 0.04139435633194586], ["k // 2", 0.04136399925474318], ["= ans", 0.041303488524834425], ["it is not", 0.04128458096580547], ["+ 1 ] )", 0.04128432187423699], ["equal to the", 0.04124966485952358], ["absolute", 0.04123933126941676], ["#NEWLINE# #INDENT# return", 0.04123641044198322], ["( a ) -", 0.041223416648281545], ["character is", 0.04119190585011349], ["items ( ) :", 0.04113680989544976], ["#NEWLINE# function", 0.041133683392833825], ["#NEWLINE# function to", 0.041133683392833825], ["if the total", 0.04112128761069798], ["#NEWLINE# print the number", 0.0411204153042084], ["i ] ) -", 0.04108315954355638], ["list to store", 0.04102641292639169], ["list to store the", 0.04102641292639169], ["number of students", 0.040982086043946646], ["return max (", 0.040930656067978265], ["is a palindrome #NEWLINE#", 0.04080094802730064], ["#INDENT# right", 0.04078375398414125], ["right = 0", 0.040756122234635754], ["k ]", 0.040689962569153616], [", k ) #NEWLINE#", 0.04066743693554412], ["t in", 0.040555396373076445], ["string #NEWLINE# #INDENT#", 0.04055465527700669], ["people", 0.04050082598964818], [": #INDENT# right", 0.04047572588978451], ["the difference between", 0.04045445607098315], ["zero", 0.040364112434639283], ["x3", 0.040347305851719875], ["!= -1 : #INDENT#", 0.04034321840508765], ["#INDENT# for c", 0.04025995666460233], ["#INDENT# for c in", 0.04025995666460233], [": #INDENT# for c", 0.04025995666460233], ["primes", 0.040188568684786076], ["== s [ i", 0.040185602960161215], ["the maximum sum", 0.040183931180739346], ["maximum sum", 0.040183931180739346], ["not possible to", 0.04017889047547608], ["#DEDENT# if the current", 0.040171896858455514], [", b ,", 0.040031475775728534], ["ans = (", 0.03999995496529538], ["y1 , y2", 0.03994940639889999], ["#NEWLINE# #INDENT# if s", 0.03991481592374114], ["1 #NEWLINE# print", 0.039898666625516284], ["] : #INDENT# print", 0.039881055446787064], ["else \"no\" ) #NEWLINE#", 0.03987727753820572], ["#NEWLINE# num", 0.03985099213856264], ["p ) :", 0.03980591092087629], ["connected", 0.03979465310503583], ["sys #NEWLINE# def", 0.03975153712209041], ["max_val", 0.039739321697082025], ["#NEWLINE# try", 0.03965986436723324], ["the remainder", 0.039651496724143635], ["to store the number", 0.039638353024964504], ["store the number", 0.039638353024964504], ["store the number of", 0.039638353024964504], ["] - a [", 0.03962199292558555], ["] - a", 0.03962199292558555], ["a set", 0.03962008205445105], ["rectangle #NEWLINE#", 0.0396068371043627], [", sys .", 0.03958184320270666], [", sys . stdin", 0.03958184320270666], ["function to find the", 0.03957683819549347], [": #INDENT# n ,", 0.03952581992960851], ["2 + 1 )", 0.039500447190801494], ["j ) #NEWLINE# #DEDENT#", 0.039397223561913594], ["k , x ,", 0.03937446359396331], ["!= 0", 0.0393259959352252], ["the digit", 0.03931582567531542], ["pop ( 0", 0.03929198595459697], [". pop ( 0", 0.03929198595459697], ["pop ( 0 )", 0.03929198595459697], [". array", 0.03927933703289485], [". array (", 0.03927933703289485], ["array (", 0.03927933703289485], ["np . array (", 0.03927933703289485], ["np . array", 0.03927933703289485], ["#NEWLINE# and", 0.03922694149735881], ["convert the", 0.03904719236153632], ["#DEDENT# visited", 0.03902231462446922], ["in edges :", 0.03902000002891389], ["edges :", 0.03902000002891389], ["y , z", 0.03900906658497912], ["then it", 0.039002067371350195], ["subtract", 0.03899463145737975], ["greater than the", 0.03893964259855994], [") #NEWLINE# x", 0.03893616666746305], ["#NEWLINE# return the", 0.03885071643759363], ["while i < n", 0.038849509817738714], ["cost to", 0.03884545571159857], [": i ] +", 0.03881530903096528], ["( max_length", 0.038808301616555935], ["y -=", 0.038789880963932113], ["( ( n", 0.038733961200531755], ["of operations", 0.03869548512482848], ["= y", 0.0386851670955149], ["( ) #NEWLINE# initialize", 0.038684006743091574], ["= {", 0.038644220232843286], ["#NEWLINE# count the number", 0.038603001279697666], ["dp array", 0.038601323219098885], ["y_max", 0.03859857315980841], ["x_max", 0.03859857315980841], ["'('", 0.038559162264860045], ["== 0 : ", 0.0385371772533529], ["#INDENT# #DEDENT# n ,", 0.03853283681219531], [") <=", 0.03851396974059595], ["is less than the", 0.03849638171382752], ["k #NEWLINE# #DEDENT#", 0.03847039158277192], ["a ,", 0.03846293078845267], ["#NEWLINE# initialize the number", 0.03841939263463998], [">= 3", 0.03841746280593036], ["#DEDENT# def main", 0.0384031877181396], ["#DEDENT# def main (", 0.0384031877181396], ["smaller", 0.038375148016797034], ["i ] >=", 0.038356474717657414], ["[ i ] >=", 0.038356474717657414], ["the graph", 0.03829202439082963], ["#NEWLINE# q =", 0.03825779711058553], ["s = s", 0.038238102420659156], ["can win", 0.0382298067780931], ["i ] ] #NEWLINE#", 0.03816256478681112], ["edges =", 0.03816065752776288], ["reach the", 0.03798757863825214], ["append ( i )", 0.03794902309556337], ["-1 :", 0.03794371793268252], ["#NEWLINE# #INDENT# count", 0.037937361548257505], ["#DEDENT# print ( \"yes\"", 0.03792874309385301], ["n is", 0.0378854579998407], ["b // gcd", 0.037870606567460496], ["b // gcd (", 0.037870606567460496], ["#NEWLINE# iterate over all", 0.03781091685063043], ["p0", 0.03780101447478223], ["#NEWLINE# return \"yes\"", 0.037792692512591784], ["the maximum sum of", 0.03779005252030499], ["#DEDENT# #DEDENT# return the", 0.03775925931794806], ["segment_sum", 0.03769910153784388], ["<= x", 0.0376425823965781], ["j - 1 ]", 0.037635845655933094], ["( math", 0.03762686286425299], ["( math .", 0.03762686286425299], ["k ) #NEWLINE# print", 0.03762259305116252], ["= 1000000007 #NEWLINE# def", 0.037589956823050955], ["1000000007 #NEWLINE# def", 0.037589956823050955], ["the number of pairs", 0.037531544115248276], ["n <=", 0.03750467149084056], ["if k ==", 0.03750150575871395], ["#NEWLINE# max", 0.0374723008883453], ["] * ( n", 0.03745882699866155], ["[ 1 ] ,", 0.0373499966772397], ["flag", 0.03728810369799717], ["] not", 0.037258332129338836], ["] not in", 0.037258332129338836], ["arr [ i -", 0.037064451314610405], ["y2 = map", 0.03694470311080555], ["y2 = map (", 0.03694470311080555], [", y2 = map", 0.03694470311080555], ["return x", 0.03687273020902066], ["curr_index", 0.03683873548918105], ["#INDENT# if n %", 0.03674511988329511], ["its", 0.03669288153654321], [", update the", 0.036631536793026775], ["( h ) :", 0.03662896514148838], ["#INDENT# i +=", 0.036625667487137206], [": #INDENT# i +=", 0.036625667487137206], ["current number", 0.03657229062257247], ["[ i ] not", 0.03653020888474057], ["i ] not in", 0.03653020888474057], ["i ] not", 0.03653020888474057], [") // k", 0.03652502559615316], [") #NEWLINE# else :", 0.03651419911960304], [") #NEWLINE# else", 0.03651419911960304], ["number of operations", 0.03648395089593225], ["if the maximum", 0.036465402372786226], ["j +", 0.0364488891380184], ["( 10 **", 0.036440528318543566], ["cell", 0.03635883979213702], ["1 #NEWLINE# calculate", 0.036262944730910816], ["% mod ) #NEWLINE#", 0.03622660902399072], ["the current character", 0.036223548459476076], ["i #NEWLINE#", 0.036214230829690316], ["1 , j", 0.03613256361546188], [": if it", 0.03610525033757294], ["in edges : #INDENT#", 0.03610359996833814], ["edges : #INDENT#", 0.03610359996833814], ["== 'b' :", 0.03608676859853063], ["'b' : #INDENT#", 0.03608676859853063], ["== 'b' : #INDENT#", 0.03608676859853063], ["result = [", 0.0360866642273093], ["required #NEWLINE#", 0.036071959716177465], ["% k", 0.03605945922266585], ["case when", 0.03603986797887577], ["= np . array", 0.03598479499627452], ["need to", 0.035972425087253075], [", dp", 0.03595346326757426], ["rank [", 0.03591707433852907], ["j ]", 0.03590499405372401], ["#INDENT# #DEDENT# n =", 0.03590289645612986], [") #NEWLINE# #DEDENT# initialize", 0.035899075557740794], [") [ 0 ]", 0.035893315541881944], ["minutes #NEWLINE#", 0.035891259519111395], ["#DEDENT# #DEDENT# n =", 0.0358655835274716], ["dp [ 1 ]", 0.035860973761293075], ["dp [ 1", 0.035860973761293075], ["random #NEWLINE#", 0.0358255231178302], ["] * k", 0.0358252427897936], ["= -1", 0.03574228488728445], ["p ) : #INDENT#", 0.03573048885366583], ["( 4", 0.035712497502276314], ["0 #NEWLINE# iterate through", 0.03563193052589991], [", p =", 0.03555772657293947], ["+ s", 0.03552842573952826], ["res = (", 0.035505468825848416], ["] is", 0.035480671973650915], ["<= m", 0.035476023715968356], ["the cost of", 0.03545979491362275], ["#NEWLINE# iterate through all", 0.03544471241882986], ["if n == 0", 0.03538842829870634], [") or", 0.03527685924345031], [", y ) )", 0.035121434209153715], ["#DEDENT# read input from", 0.035115008250536595], ["ticket [", 0.03507067461912956], ["res +=", 0.03502932796792584], ["fuel", 0.03500599491863155], ["to keep track", 0.03498490870438062], ["to keep track of", 0.03498490870438062], ["to keep", 0.03498490870438062], ["#NEWLINE# #INDENT# dp", 0.03496773372945994], ["#NEWLINE# moves =", 0.03489153758369413], ["so we", 0.0348299384368036], ["result #NEWLINE# result", 0.03482310005312533], ["[ tuple ( map", 0.03482111515607089], ["1 #NEWLINE# iterate", 0.03479472352589506], [", then it", 0.03478389086963973], ["== 'd'", 0.03474507916135348], ["#NEWLINE# edges =", 0.03470996397628607], ["d = map (", 0.03469631830650473], ["d = map", 0.03469631830650473], ["split ( ) #NEWLINE#", 0.03467955694845026], ["number of steps", 0.03462885889293749], ["of steps", 0.03462885889293749], [") % 4", 0.03461577200113436], ["( p )", 0.034608692679299516], ["is greater than or", 0.03460003070119841], ["move to", 0.0345791450797655], ["be made", 0.03457229806023536], ["if abs (", 0.034543643687795056], ["if abs", 0.034543643687795056], ["num_pairs", 0.03451864201348736], ["'a' )", 0.034517559287012334], ["( 'a' )", 0.034517559287012334], ["i + 2", 0.03448841370414535], ["// 2 + 1", 0.03443210563387041], [", t ) )", 0.03442943234766889], ["m , k )", 0.03437774957892074], ["t :", 0.034342760000330125], ["in range ( w", 0.03429840291328888], ["if s [ 0", 0.03429556434375978], ["employee", 0.03424874340249933], ["< n", 0.034246391478878736], ["loop through", 0.0341240333678915], ["1 <<", 0.03410162373941104], ["list #NEWLINE#", 0.03409022619722827], ["a = [ 0", 0.03408710259494711], ["initialize the minimum", 0.034012657982599934], ["all the", 0.03397838806750794], ["b %", 0.033913908273423395], ["divide", 0.03390915438668943], ["m : #INDENT#", 0.03389174195367085], ["n , t =", 0.033855662960346825], ["] #NEWLINE# #DEDENT#", 0.033837539293593726], ["float", 0.03382342977264277], ["] #NEWLINE# check if", 0.03376839804670821], ["by 1", 0.033722237450868456], ["required to", 0.03368588987043769], ["s [ : i", 0.03368447884005166], ["n - 2 )", 0.03359263044272768], ["#NEWLINE# move", 0.03357508823579741], ["if x >", 0.033535063946305795], ["-1 ] :", 0.03351249184159071], ["1 to", 0.03350402162577224], ["skill", 0.033477963153368186], ["[ 1 ] :", 0.033456545785846274], ["* inv", 0.03344113298277025], ["* stripe _height", 0.0334324439253522], ["* stripe", 0.0334324439253522], ["\\ * stripe", 0.0334324439253522], ["\\ * stripe _height", 0.0334324439253522], ["] , dp", 0.03341201018316437], ["] , dp [", 0.03341201018316437], ["x2 ,", 0.03340699960202484], ["increase the", 0.03330859384894761], ["switch", 0.03329249790464262], ["y3", 0.03325113577242594], ["if a", 0.033243902661844196], ["= 3", 0.033240549953704006], ["initialize the result", 0.03321292345360023], ["check if the number", 0.03314306365467014], ["] [ (", 0.03314065345779008], ["i < n -", 0.033067249473086764], [". #NEWLINE# if", 0.033048864064982295], ["been", 0.033039390672489725], ["other", 0.03303230634505778], ["end =", 0.03299749125561574], [") : #INDENT# u", 0.032952069615808155], [". values", 0.03294955851468965], [". values (", 0.03294955851468965], [". values ( )", 0.03294955851468965], ["values ( )", 0.03294955851468965], ["values (", 0.03294955851468965], ["1 ) ) #NEWLINE#", 0.0329249036017633], ["== -1", 0.03290770799460517], ["!= 1 :", 0.032884182276290475], ["x = (", 0.032878908402273144], ["- 1 ) :", 0.032841072413032184], ["to check if a", 0.03283547741555807], ["#NEWLINE# #INDENT# if a", 0.03276884177369722], ["== 'd' :", 0.03276283785265613], ["#INDENT# return \"bitaryo\" #NEWLINE#", 0.032756245808101374], ["#INDENT# return \"bitaryo\"", 0.032756245808101374], ["return \"bitaryo\" #NEWLINE#", 0.032756245808101374], ["\"bitaryo\" #NEWLINE#", 0.032756245808101374], ["\"bitaryo\" #NEWLINE# #DEDENT#", 0.032756245808101374], ["return \"bitaryo\"", 0.032756245808101374], ["return \"bitaryo\" #NEWLINE# #DEDENT#", 0.032756245808101374], ["#NEWLINE# loop through", 0.032739473975848116], ["_streets", 0.032691822641631965], [": increment", 0.03269148662667553], ["#NEWLINE# dp [ i", 0.03258938470548006], ["#NEWLINE# update the minimum", 0.03258127721383157], ["x2 , y2", 0.03249184227094473], ["solved", 0.03247709193925991], [") [ 0", 0.032468558234439164], ["( y ) #NEWLINE#", 0.03245778052376221], ["a list to", 0.03245433172677018], ["* b // gcd", 0.03244763876418732], ["co_primes", 0.03242176345434751], ["0 #NEWLINE# print", 0.032415815628531366], ["] #NEWLINE# #DEDENT# else", 0.03239529234820377], ["= 0 #NEWLINE# for", 0.03239405910166486], ["-1 #NEWLINE# #DEDENT# #DEDENT#", 0.032354201872994516], ["= len (", 0.032340773082503715], ["= len", 0.032340773082503715], ["if the current element", 0.032273923812862634], [": j", 0.032256485622554905], ["array #NEWLINE# for i", 0.032222901717051666], ["array #NEWLINE# for", 0.032222901717051666], ["the user #NEWLINE#", 0.032176388424778046], ["from the user", 0.032176388424778046], ["from the user #NEWLINE#", 0.032176388424778046], ["i + 1 #NEWLINE#", 0.032143170001807136], ["message", 0.03213619792051466], ["it is possible to", 0.03213205259497263], ["is possible to", 0.03213205259497263], ["it is possible", 0.03213205259497263], ["n , x =", 0.032117702055335276], ["] != 0", 0.03211248197333556], ["print ( count", 0.032093032084806856], ["% n #NEWLINE#", 0.03207496752646522], ["bids", 0.031999122783801404], [": read", 0.03193637674387954], ["2 , mod", 0.03192525381292878], ["string is a", 0.03187087591884793], ["= sum ( 1", 0.03184438762834284], ["#INDENT# d ,", 0.03180885739475292], ["is less than or", 0.03170809136148675], ["#NEWLINE# if the current", 0.03166383191165934], ["#NEWLINE# call", 0.03164687231293156], [") #NEWLINE# call", 0.03164687231293156], ["( arr", 0.03162981415569049], ["arr ,", 0.03162308671759158], ["#NEWLINE# while b", 0.03158741155761354], ["j :", 0.031581882482660285], ["move to the", 0.031563749639137335], ["list ) #NEWLINE# for", 0.03155826920810238], ["!= 1 : #INDENT#", 0.03153120578163704], ["for r in range", 0.03152274943695861], ["r in range", 0.03152274943695861], ["r in range (", 0.03152274943695861], [") #NEWLINE# update the", 0.031505672876517794], [", end =", 0.03149118408141251], ["#NEWLINE# while (", 0.031444460906461975], ["= ( a", 0.03143806501970065], ["#DEDENT# update", 0.03140221403324625], ["we have", 0.03138844771735801], ["#INDENT# x1 , y1", 0.031388115776801444], ["#DEDENT# #DEDENT# read the", 0.031382155606683], ["( ) #NEWLINE# def", 0.03137221982204769], ["20", 0.03134862575047343], ["of the first", 0.031329526198321765], ["( i - 1", 0.03130655395077023], [") ** 2", 0.03130456875554676], ["= 2 #NEWLINE# #DEDENT#", 0.0313008360246538], [", return the", 0.03127361361615203], ["import math #NEWLINE#", 0.03126516823065233], ["] == '1'", 0.031183963952798276], [") #NEWLINE# w", 0.031170163812107358], ["is greater than the", 0.031135375195325492], ["number of minutes", 0.03111226079081537], ["of minutes", 0.03111226079081537], ["#NEWLINE# return (", 0.030974146934127353], ["create a list", 0.030944300726702317], ["from 1 to", 0.0309291765060941], ["from 1", 0.0309291765060941], ["iterate through each", 0.030897061387120107], ["impossible to", 0.0307574011639332], [": int", 0.030738049293104357], ["5 ]", 0.030633164092950766], ["+ a [ i", 0.030622042209686694], [": create a", 0.030588748960352772], ["2 #NEWLINE# #DEDENT# #DEDENT#", 0.030560374791298826], [") #NEWLINE# return the", 0.03040222032446218], ["z ,", 0.030387040600066927], ["array to", 0.03032879065710792], ["if sum ( a", 0.030294032972114974], ["record", 0.030291611189130027], ["[ 1 ] ==", 0.030205731653577275], ["to 0", 0.030171063584861976], ["#INDENT# graph", 0.030150416444838995], ["1 , b", 0.030093503701307273], ["pattern", 0.03007471014958374], ["result #NEWLINE# result =", 0.030025097985352665], ["the end", 0.029962539024328903], ["* pow (", 0.029947515612978377], ["* pow", 0.029947515612978377], ["n * ( n", 0.029918720548226186], [", a %", 0.029877203231621522], ["#INDENT# s =", 0.029854768371889107], ["can be made", 0.0298319836765046], ["( ( n -", 0.0297172844785582], ["append ( x )", 0.02970909669856002], ["#NEWLINE# #DEDENT# update", 0.02969075739065637], ["math . ceil", 0.02968825577325769], ["math . ceil (", 0.02968825577325769], ["= { }", 0.02968480160945611], ["#DEDENT# x =", 0.029607136470419227], ["1 ] [ 1", 0.02954038425254041], ["- 1 ] *", 0.029538852925696215], ["1 ) : check", 0.029514315493229776], ["i #NEWLINE# if", 0.029511468122077025], ["number is", 0.02951056271330558], ["it #NEWLINE#", 0.029488103981529224], ["( arr )", 0.029389719545528985], ["[ ord (", 0.029367141744834756], ["[ ord", 0.029367141744834756], ["/ 2 #NEWLINE#", 0.029359201044156007], ["cur_idx", 0.029325242215501927], ["match", 0.029204399221456644], ["the list of", 0.029173372421260207], [", j", 0.029168543925337662], ["j ] #NEWLINE# #DEDENT#", 0.02916023490173668], ["find the minimum number", 0.029148013045749138], ["* ( n +", 0.029121155960488934], ["x ) : #INDENT#", 0.029104533361163493], ["#NEWLINE# then", 0.029036935852944427], ["0 #NEWLINE# print (", 0.02902487119997089], [") #NEWLINE# c =", 0.028956049107684186], ["r , c", 0.02891606735581958], ["[ ] #NEWLINE# #DEDENT#", 0.02889799652490642], ["( range ( 1", 0.02883141919208616], ["#NEWLINE# call the", 0.028821864895670492], [") #NEWLINE# call the", 0.028821864895670492], ["x .", 0.028818070663272764], ["] : if", 0.028737880609645574], [") #NEWLINE# a ,", 0.02872095192021655], ["to the current", 0.028710984426311738], ["( n ) #NEWLINE#", 0.028658671423950344], ["#NEWLINE# else : print", 0.02865580374386247], ["#NEWLINE# return false #NEWLINE#", 0.028643766939584155], ["#NEWLINE# return false", 0.028643766939584155], ["i ] [ 0", 0.028641271570991916], ["] + s", 0.028623762866819717], ["#NEWLINE# n = len", 0.028606410213095162], ["n /", 0.028593925707578977], ["1 , len (", 0.02854977820130448], ["input from the", 0.028548033017392314], ["( ) #NEWLINE# for", 0.028472742049142883], ["3 ) )", 0.02844206646553039], [", #NEWLINE# then", 0.028437664331336824], ["- j )", 0.0284272166684602], ["apples", 0.028427188541033162], ["// 2 :", 0.028389342850881013], ["car", 0.028377903541023028], ["to 0 #NEWLINE#", 0.02834360478595571], ["= b", 0.028341454550124736], ["{ } #NEWLINE#", 0.028282559580723652], ["= { } #NEWLINE#", 0.028282559580723652], ["i ] == 1", 0.028251031564216555], [") and (", 0.02818815752386775], ["sequence .", 0.028140801091798194], ["1 ) ] for", 0.028109840856141613], ["> a [", 0.02809051454703026], ["] > a [", 0.02809051454703026], ["] > a", 0.02809051454703026], ["of possible", 0.02805794680185213], ["a list to store", 0.02804145910808643], ["for d", 0.028007496637349676], ["+ 1 ) %", 0.027998049711961594], ["next_b", 0.027957012470137994], ["the sequence #NEWLINE#", 0.02794046109732607], ["n-1", 0.027897591393515855], ["train", 0.02789152636953411], [") : create", 0.027889912865675374], ["if l", 0.027867366600008818], [", 4 ,", 0.027858739709675166], ["get", 0.027851010057563415], ["#DEDENT# return false", 0.02782018596525803], ["] [ w", 0.027795299783155255], ["co-prime", 0.027790082960869305], ["( right", 0.02777355154083969], ["j + 1 ]", 0.027691616487619152], ["0 ) ]", 0.02766091203745159], ["a . index", 0.02764878065495257], ["a . index (", 0.02764878065495257], ["5 :", 0.027633075648850515], ["place", 0.027614201974660524], ["2 ] ==", 0.027597449766081875], ["'?'", 0.02759285455365513], [", so", 0.027585060596077928], ["#NEWLINE# #DEDENT# #DEDENT# elif", 0.027578360061129625], ["s ) #NEWLINE#", 0.02755966854062801], ["x1 ,", 0.027555146591438928], [", 3 ,", 0.027504108411128752], ["input from the user", 0.027493311104909775], ["update the maximum", 0.02747900489085931], ["max ( a", 0.02747805801238241], ["- 1 #NEWLINE# #DEDENT#", 0.027447581418131094], ["#NEWLINE# iterate through each", 0.02742485005115864], ["an empty", 0.027399494405717942], ["#NEWLINE# if j", 0.02739212530528003], ["the result string", 0.027379742594143955], ["result string", 0.027379742594143955], ["the current element is", 0.027350663431783707], ["current element is", 0.027350663431783707], ["] #NEWLINE# check", 0.027282347545148085], ["count [", 0.02727545803074214], ["means", 0.027274158131077947], ["n *", 0.027194256072665575], ["#INDENT# u", 0.02716962444127796], [": #INDENT# u", 0.02716962444127796], ["if the current character", 0.027148076099293112], ["^", 0.027120559445638598], ["[ node ] :", 0.027105585360288332], ["node ] :", 0.027105585360288332], ["#NEWLINE# create a list", 0.027060353247505258], ["y2 )", 0.02705502206890515], ["#NEWLINE# for r in", 0.02704667117897228], ["#NEWLINE# for r", 0.02704667117897228], ["parent [", 0.02695842587050365], [", key = lambda", 0.02688039221935981], ["#NEWLINE# #INDENT# for i", 0.026806754829687515], ["max _num", 0.026791296139858086], ["cube", 0.026775815331328678], ["#INDENT# x -=", 0.02673620715417577], ["i - 1 )", 0.02669358559692923], ["+ 1 :", 0.02667062574094137], ["p [ i ]", 0.026573435496131847], ["then the", 0.026552409487044536], ["b , d", 0.026548283135151635], ["#INDENT# a . append", 0.02651419860219042], [": #INDENT# parent", 0.02650529642910864], ["necessary", 0.026457232219500023], ["coordinate", 0.0264355142411878], ["y2", 0.02642124544257077], [") == 0", 0.026417647185609374], ["n ) ) #NEWLINE#", 0.026409200948813098], ["#INDENT# sequence", 0.02634528161259843], ["a ) -", 0.02634357361099201], ["#INDENT# if a [", 0.026342087182721907], ["inputs", 0.026340835494807997], ["0 #NEWLINE# #DEDENT# #DEDENT#", 0.02633981913487833], ["j ] , dp", 0.026173361400219575], ["num =", 0.02610248187699377], ["x3 ,", 0.02609461518766481], ["the result #NEWLINE# result", 0.026086680075871376], ["#NEWLINE# #INDENT# result", 0.026065337370266332], [") ) #NEWLINE# call", 0.026021635866280205], ["the function to", 0.026004407388715484], ["[ [ 0 ]", 0.02600176348954422], ["sqrt ( n )", 0.0258834569818293], ["#NEWLINE# #INDENT# if n", 0.025810017549119085], ["print ( 0 )", 0.02571933023035105], ["of coins", 0.025712819509262897], [": set", 0.025696950436879664], ["#DEDENT# update the", 0.025681846384185813], ["i , j ,", 0.02567444269415249], ["subtract the", 0.025661898014725158], ["b [ 0 ]", 0.025623817637918794], ["#DEDENT# #DEDENT# return false", 0.025444687372806925], ["+= x", 0.025439190883425708], [", 5 ,", 0.025428721428595098], ["( 1 <<", 0.025419236312624535], ["a % b", 0.025389119170322164], ["1 ] , dp", 0.025378853436075988], ["- a )", 0.025376240795642033], ["<= 2", 0.025354579010925443], ["#NEWLINE# #DEDENT# count", 0.025354460079928722], ["+ q", 0.025353734618799823], ["#INDENT# x1 ,", 0.025339941328378798], [": #INDENT# x1 ,", 0.025339941328378798], ["pile [", 0.025337006328567818], ["j ] ==", 0.025308197945203895], ["print ( 1", 0.0252645917547097], ["calculate and print", 0.02525782474963374], ["calculate and print the", 0.02525782474963374], ["digits [", 0.025241485774779634], [") or (", 0.025218518461035618], ["+= c", 0.025152279205823715], ["and k", 0.025074137175847142], ["] #NEWLINE# iterate", 0.025034256628306727], ["#NEWLINE# prev", 0.025024125852813325], ["j ] + 1", 0.024997878104188517], [") / 2 #NEWLINE#", 0.024965378711740482], ["4 :", 0.024946146547762556], ["heap", 0.02491000421333647], ["mid = (", 0.02489936994647776], [", 1 #NEWLINE# #DEDENT#", 0.024897827592093812], ["number of possible", 0.02487536646059313], ["= 1 #NEWLINE# while", 0.024859987707608767], [", then the", 0.024745303893996595], ["] for i in", 0.024725166239524764], [", return -1", 0.02472338691714728], ["factors", 0.02471872818773849], ["edges = [", 0.02471239046461227], ["== '0'", 0.024705873630632594], ["#NEWLINE# queue", 0.024657601771993554], [") % 2 ==", 0.02453696022269988], ["y -= 1 #NEWLINE#", 0.024522466446014406], ["y -= 1", 0.024522466446014406], ["range ( k", 0.024514530527505348], [": i + 1", 0.02450936247475046], [") : #INDENT# def", 0.024399340697173904], ["i >=", 0.02437147853940278], [", t ,", 0.024339382075742048], ["#NEWLINE# j =", 0.024333317251184608], ["append the", 0.024322332649404782], ["to check if the", 0.024318535336440152], ["[ [ 0 for", 0.02431494475507039], ["= ( res", 0.02431234111060999], ["res = ( res", 0.02431234111060999], ["[ j + 1", 0.024282211858553313], ["the current number", 0.024183632125135274], ["a ) ) :", 0.02415859422023668], ["a == 0", 0.023969527376747256], ["[ j ] #NEWLINE#", 0.023933448882238643], ["sequence #NEWLINE# #INDENT#", 0.023892588721077912], ["8", 0.0238805566817925], ["#NEWLINE# add the", 0.023863302662585576], [") == 1 :", 0.02379271632240597], ["to the next", 0.023755107732502986], ["- ord", 0.023725675944417594], ["- ord (", 0.023725675944417594], ["it to", 0.023713373605879745], ["and i", 0.023686002324720186], ["of stones", 0.02365873946403217], ["] != 0 :", 0.023639638740230527], ["n ) : if", 0.023628876852691022], ["return the minimum", 0.023406441442877436], ["call the function", 0.02340587043743203], ["n // 2 )", 0.023400970817506864], ["return (", 0.02338673281285372], ["the current character is", 0.02332454309866708], ["current character is", 0.02332454309866708], ["1 : ] #NEWLINE#", 0.023314796251778656], ["j ) :", 0.023300494855833475], ["node ] : #INDENT#", 0.023225394721876274], [") ] +=", 0.0231797182462193], ["return [", 0.023157319336209], ["% mod )", 0.023145598771514782], ["1 , 0 )", 0.023110895588655846], ["#INDENT# graph [", 0.023053835264569687], ["- i +", 0.023000893596310582], ["for l", 0.022988513839500478], ["1 #NEWLINE# print (", 0.022972809725699227], ["s ) )", 0.022972020811153824], ["( ord (", 0.022965552957218797], [", dp [", 0.022948963648808194], ["'a' ) ]", 0.022947829430455924], ["( 'a' ) ]", 0.022947829430455924], ["b ) #NEWLINE# #DEDENT#", 0.022873238392519854], ["0 #NEWLINE# #INDENT#", 0.022846916330499976], ["largest", 0.02284265666504829], ["1 , len", 0.02275284654966505], ["the number of students", 0.02270380071395286], ["[ ] for _", 0.022687486090122888], ["n ] [", 0.022683941472746435], ["< k : #INDENT#", 0.02262604634629524], ["( math . sqrt", 0.02254086406188938], ["if k >", 0.022514163938148], ["y +", 0.02247187792919429], ["alpha", 0.022455819738877742], ["[ j - 1", 0.02245259672547022], ["( n - i", 0.02239107227746629], ["student", 0.02234445204085489], ["#DEDENT# if n ==", 0.02233052886790125], ["columns", 0.022243678738112314], ["( u , v", 0.022205847273773328], [", z =", 0.022166344588983766], ["y , z =", 0.022166344588983766], ["str ( i", 0.022146141345638602], ["create a list to", 0.022123590194400494], ["n , p ,", 0.022114681165257763], ["+ 1 : ]", 0.02210489294023849], ["2 ] ,", 0.021960588418860505], ["#DEDENT# get", 0.021959147678030044], ["#DEDENT# get the", 0.021959147678030044], ["a ) #NEWLINE#", 0.021903680155437408], ["3 ) ) #NEWLINE#", 0.021888675396004822], ["x >", 0.021834616481259752], ["return s", 0.02180534000932493], ["** k", 0.0217472576466135], ["i ] % 2", 0.021698703745472298], ["join", 0.021673294600078764], [". join", 0.021673294600078764], ["( t ,", 0.02158384081736712], ["n , p", 0.02155237888572432], ["visited [", 0.02139165509345772], [": #INDENT# graph", 0.02136309639248659], ["( j -", 0.021273049522364956], ["_agasa", 0.021232924875661988], ["_conan", 0.021232924875661988], ["range ( w", 0.021123867278148235], ["sum ( int (", 0.021122255547914037], ["sum ( int", 0.021122255547914037], ["( l -", 0.021117031478259284], ["- 1 ] ,", 0.02109981058823039], [": #INDENT# graph [", 0.02107724117503088], ["#NEWLINE# edges = [", 0.02107324274465952], ["( list ) #NEWLINE#", 0.021058474948885925], ["defaultdict ( list )", 0.021058474948885925], ["list ) #NEWLINE#", 0.021058474948885925], ["( list )", 0.021058474948885925], ["defaultdict ( list", 0.021058474948885925], ["the current index", 0.021054889031726136], ["current_length", 0.02105416183021186], ["- 1 ) ,", 0.020976835484528934], ["unused_b", 0.020967759352603497], ["<= 1", 0.020921652616521028], ["m ==", 0.020877949018914006], ["function and", 0.020873495252216642], [", sys", 0.020836727936659263], [") #NEWLINE# count =", 0.02082883903679736], [": increment the", 0.020749430936357418], [", y1", 0.020705033852326617], [": initialize a", 0.02068088672920245], ["] + 1 )", 0.02063304133355902], ["[ j ]", 0.020620363461225803], ["- a [ i", 0.020601716500401084], ["#DEDENT# return false #NEWLINE#", 0.020563650086351595], ["center", 0.020488961609267577], ["** (", 0.020349036994340958], ["1 , -1 ,", 0.020345403641148056], ["max ( a )", 0.020344876061579593], ["i + 1 ,", 0.020289389478354663], [", it", 0.020287617227808058], [") #NEWLINE# #DEDENT# n", 0.020273805863364643], ["( tuple", 0.020252959361571683], ["take", 0.02022660521920538], ["-1 : #INDENT#", 0.02019678159125024], ["and y1", 0.0201585210323114], ["increment the number of", 0.020154248372429167], ["increment the number", 0.020154248372429167], [": #INDENT# main", 0.020047807370163897], ["#INDENT# main (", 0.020047807370163897], [": #INDENT# main (", 0.020047807370163897], ["#INDENT# main", 0.020047807370163897], ["0 #NEWLINE# initialize", 0.020005547318264604], ["] ) -", 0.020003380458044735], ["the left", 0.01993837048427781], ["#NEWLINE# w", 0.019926211579905637], ["1 ) for _", 0.019895973528784593], ["] = 0", 0.01986978622789269], ["#NEWLINE# b = int", 0.019849473084797523], ["n // b", 0.019817770365086727], ["next card for", 0.019716287384543275], ["next card", 0.019716287384543275], ["card for", 0.019716287384543275], ["the next card", 0.019716287384543275], ["the next card for", 0.019716287384543275], ["b , a %", 0.01971004342640173], [", a % b", 0.01971004342640173], ["// 2 )", 0.019709109082120327], ["graph [ u", 0.01966481146071814], ["graph [ u ]", 0.01966481146071814], [", edges )", 0.019617287067048243], ["friends", 0.019600067322475836], ["1 , 1 )", 0.01957088788638288], ["q ) :", 0.019541116666773977], ["golorp [ i ]", 0.019502373328059205], ["golorp [ i", 0.019502373328059205], [": #INDENT# s =", 0.019486651107330825], ["r ) )", 0.019456010133353255], ["dp = [ [", 0.01943907735736826], ["-1 #NEWLINE# if", 0.019407081936376313], ["( y )", 0.019335002870156784], ["#NEWLINE# b .", 0.019254762697821507], ["c in s :", 0.01924223796574536], ["#NEWLINE# #DEDENT# n ,", 0.019230621307124347], ["print ( x", 0.019219351607773928], ["res += 1", 0.01921277907040789], ["res += 1 #NEWLINE#", 0.01921277907040789], ["rows", 0.01914653764422922], [", x )", 0.01909198910994797], ["to the result", 0.019065385063439338], ["#NEWLINE# if sum (", 0.01892330935213791], ["current card", 0.018889621958570767], ["dp [ -1", 0.018859380950096774], ["dp [ -1 ]", 0.018859380950096774], ["= 0 #NEWLINE# initialize", 0.018858786783960607], ["def lcm", 0.018781740744630807], ["def lcm (", 0.018781740744630807], ["[ b", 0.018721778437986804], ["#INDENT# print ( *", 0.018666228986744235], ["current_seq", 0.018629512253015682], ["= i +", 0.018596511833466823], ["variable to", 0.018466369258961734], ["students with", 0.018410075727240675], ["p .", 0.018393495610907102], ["#INDENT# main ( )", 0.018308435845022782], ["#NEWLINE# cost", 0.01826524198995636], ["dp [ j ]", 0.01819501613241285], ["+ 1 ] ,", 0.01815136776570673], [") % 2", 0.018070891241164767], ["0 #NEWLINE# loop through", 0.018049365035449204], ["0 #NEWLINE# loop", 0.018049365035449204], ["sleep", 0.01803177436408138], ["i ] <=", 0.01802279530307857], ["[ i ] <=", 0.01802279530307857], ["is equal to the", 0.01796220847477018], ["for t", 0.017927975158742514], ["] = [", 0.01786799812039135], ["#NEWLINE# count = 0", 0.01785542101955227], ["] #NEWLINE# iterate through", 0.017777291502752743], ["- a", 0.01775678410271274], ["#INDENT# m =", 0.017753372197694364], ["b ) #NEWLINE#", 0.017751785982144042], [": append", 0.017649858708905727], ["[ 0 ] *", 0.01762161322539143], ["0 ] *", 0.01762161322539143], ["#NEWLINE# n ,", 0.01760546335772655], ["if max (", 0.0175062766476359], ["[ a [ i", 0.017489852928874974], ["b [ i", 0.01748962157626187], [", -1", 0.017477856065863506], ["] -= 1", 0.017446919656341504], ["] -= 1 #NEWLINE#", 0.017446919656341504], ["- i ]", 0.017420905666864755], ["return the number of", 0.01741952040695236], ["return the number", 0.01741952040695236], [") #NEWLINE# if n", 0.017317105481245508], ["#NEWLINE# #DEDENT# return the", 0.017248365678940843], ["team #NEWLINE#", 0.01724758315216324], [") ) #NEWLINE# d", 0.01722244548652564], ["( k - 1", 0.017206313062930002], ["#NEWLINE# total", 0.017199229992960023], ["#DEDENT# break", 0.017082021389244643], ["#DEDENT# break #NEWLINE#", 0.017082021389244643], ["1 ] [ i", 0.017063541378745585], ["ans = ( ans", 0.01702470769935391], ["[ u ] .", 0.017014497355461535], ["u ] .", 0.017014497355461535], ["h ) :", 0.01697127459614052], ["<= k", 0.016930168110984186], ["t : #INDENT#", 0.016906263499948934], ["antennas", 0.016899321978449584], ["ord ( 'a'", 0.016857022890997657], ["ord ( 'a' )", 0.016857022890997657], ["#INDENT# m", 0.01683340285653667], ["x : (", 0.016783626171895646], ["lambda x : (", 0.016783626171895646], ["#NEWLINE# def dfs (", 0.016723308166044976], ["#NEWLINE# def dfs", 0.016723308166044976], [", len ( s", 0.016692973472546533], ["#NEWLINE# v", 0.016676567800706376], ["i ] ) #NEWLINE#", 0.01662868854124763], [", y ) :", 0.01662226100518243], ["x % 2", 0.016557435698839388], ["at least one", 0.016533131382916653], ["least one", 0.016533131382916653], ["#DEDENT# x", 0.01649919008490589], ["+= 1 #NEWLINE# #DEDENT#", 0.016419565758823876], ["0 , 0 )", 0.01641520462408433], ["k >", 0.016411391753747197], ["0 #NEWLINE# for a", 0.01638501206235648], ["( time", 0.016346845642731624], ["if i <", 0.01615579156676515], [") : initialize a", 0.01614619328403073], ["b -= 1", 0.016109048746561567], ["b -= 1 #NEWLINE#", 0.016109048746561567], ["#NEWLINE# solve", 0.016082987316589362], ["garden", 0.016076330634429536], ["the loop", 0.016012441723296193], ["#NEWLINE# q", 0.01591287519234669], ["x1 , y1", 0.015858194982177137], ["remove", 0.01579847043960649], ["] for i", 0.015793251150249512], [") #NEWLINE# b .", 0.01573545305607414], [", j +", 0.015718539467510697], ["] == x", 0.015687356877425288], [") #NEWLINE# c", 0.015622263881749365], ["i ] [ 1", 0.015523863253821326], ["( ( a", 0.01544165022497911], ["[ 1 :", 0.015413882120656466], ["i > 0", 0.015395191364308187], ["1 #NEWLINE# for", 0.015382951342585426], [") ) #NEWLINE# t", 0.01530738779725088], [", c", 0.015295210949577493], ["a > b", 0.015270016278939397], ["a = int", 0.015228928132569715], ["a = int (", 0.015228928132569715], ["#INDENT# c +=", 0.015180778537494534], [": #INDENT# c +=", 0.015180778537494534], [", a2 ,", 0.015167435002237937], ["max ( dp [", 0.015108527080208524], ["the fuel", 0.015002569250842106], ["math #NEWLINE#", 0.014905402488777714], [", 0 ]", 0.014853579010305663], ["of '", 0.014841969292759246], ["number of '", 0.014841969292759246], ["i ] -= 1", 0.014826544630877153], ["#NEWLINE# for t", 0.014731313765092383], ["#NEWLINE# for t in", 0.014731313765092383], ["and m", 0.014682469861783357], ["t )", 0.01465293424052434], ["team size", 0.014632305999922015], ["ca n't", 0.014595467751343325], ["a = a", 0.014572397943960572], [") ** 2 +", 0.014562764017390891], ["** 2 + (", 0.014562764017390891], ["[ 0 ] [", 0.01454352429830329], ["0 ] [", 0.01454352429830329], ["x is", 0.014470636644237653], ["2 and", 0.014361419602600794], ["#NEWLINE# def gcd (", 0.01434150483915178], ["#NEWLINE# def gcd", 0.01434150483915178], ["xor", 0.01432795942877699], ["colors [", 0.014296114340030898], ["if a [ 0", 0.014237079944623216], ["( count )", 0.013989653926201997], ["deque (", 0.01388751932455775], ["] = max (", 0.0138613381615528], ["the garden", 0.013832899669216522], ["#INDENT# cost", 0.01377620225122598], ["len ( b", 0.01376478891173966], [") >", 0.013693638581116083], ["num ,", 0.01369204493363639], [", b =", 0.013687419127636019], ["2 + 1", 0.01364609318629068], ["b :", 0.013644378536476398], ["% 2", 0.013328991945681015], ["} #NEWLINE#", 0.013283215658596068], ["and not", 0.013276812627742694], ["// 2 ,", 0.013188417805272816], ["2 : ]", 0.013144281044949038], ["== 1 :", 0.013099453701675834], ["tuple", 0.012968855072550346], ["answer", 0.012937738663428944], ["b [ 0", 0.012937381708134094], ["b in range (", 0.0128713306986945], ["b in range", 0.0128713306986945], ["for b in range", 0.0128713306986945], ["= max ( dp", 0.012837157335981304], ["n : #INDENT# return", 0.012818149289793988], ["#NEWLINE# c =", 0.012742668466528667], ["n , b", 0.01269348365629957], ["#NEWLINE# g", 0.012691281125528697], ["[ k ] =", 0.012676987423012046], [", a , b", 0.012653970117011092], ["if max", 0.012636206520376518], ["( n , p", 0.012629940240888904], ["- 1", 0.012550414830575125], ["s [ j -", 0.012524832898620204], ["( k ) :", 0.012482536682416126], ["[ j ] ==", 0.01247059677892476], ["#NEWLINE# w =", 0.012467353258977678], ["- c [", 0.012410486586822003], ["ambidexters", 0.012332894492540079], ["a [ :", 0.012295889147455961], ["\"0\"", 0.012224768159170627], ["y2 =", 0.012199044091470296], [", m =", 0.01217229111049613], ["for x ,", 0.01210778898032359], ["list )", 0.012102330422582732], ["0 : #INDENT# x", 0.012068328810790653], ["= dp", 0.011927555391112666], ["= dp [", 0.011927555391112666], ["#DEDENT# a , b", 0.01190019171413742], [") ) #NEWLINE# return", 0.011767402078898311], ["[ m ]", 0.011698185414948034], ["#NEWLINE# #DEDENT# a ,", 0.011595220442680992], ["1 ) ]", 0.011574499815926353], ["s ) #NEWLINE# if", 0.011571378945540993], ["y ) #NEWLINE#", 0.011524760092973945], ["range ( 2 ,", 0.011480765804474878], ["a , x", 0.011335366540730347], ["+ a [", 0.011334647903027885], ["in range ( a", 0.011305887119827492], ["] ) ]", 0.011278797782733215], ["res .", 0.011268915248279542], ["i #NEWLINE# #DEDENT# #DEDENT#", 0.011172524897636635], [", -1 ) :", 0.011166924753322727], ["-1 ) :", 0.011166924753322727], ["n - i", 0.011004706339848408], ["s2 )", 0.010902731630284867], ["h ) : #INDENT#", 0.010891051451388113], ["x , y in", 0.01086946596287976], [", y in", 0.01086946596287976], ["for x , y", 0.01086946596287976], ["b = b", 0.010795762839514418], ["f in", 0.010741986405218494], [", v )", 0.010648020566758586], ["!= 1", 0.010646831086581918], ["collections import", 0.010645256483901848], ["from collections", 0.010645256483901848], ["from collections import", 0.010645256483901848], ["] = i", 0.010590247255793751], ["0 : #INDENT# ans", 0.01053178260256251], [": #INDENT# m =", 0.010514763663574027], ["10 )", 0.010462951875619011], ["s : #INDENT#", 0.010440804990733344], ["0 ) #NEWLINE#", 0.010434761634596081], ["( 0 ) #NEWLINE#", 0.010401239658579527], ["( x1", 0.010399829968326006], ["n == 0 :", 0.010356040214875791], ["+ k )", 0.010209817437822483], ["\"\" . join", 0.010171466762278248], ["\"\" .", 0.010171466762278248], ["\"\" . join (", 0.010171466762278248], [") ) #NEWLINE# h", 0.010141948874777932], ["j <", 0.01009063779312709], ["0 ] + 1", 0.010072346053259637], ["l [ 0", 0.01007110093441973], ["l [ 0 ]", 0.01007110093441973], ["#NEWLINE# a , b", 0.01006874357906813], ["( 1 , 10", 0.0100125147414278], ["m , x ,", 0.010003859272269787], ["print ( count )", 0.009983796540616034], ["- t", 0.009947797813486845], ["dp [ j", 0.009911845869495454], [": #INDENT# m", 0.009863550792515233], ["0 ] [ i", 0.009789748987039448], ["b : #INDENT# return", 0.009736629920094568], ["w =", 0.009721440560738558], ["combinations", 0.009715316674429672], ["j ] = dp", 0.00964198390463846], ["0 and a [", 0.009627154045251163], ["b [ i ]", 0.009597242967222967], ["> 0 and", 0.009569338882459718], ["= max (", 0.009518991435599809], ["counts", 0.009493628667038994], ["down", 0.00944577002498951], ["edges )", 0.00918547494526325], ["[ ( 1", 0.00917010697132523], ["( 1 , 1", 0.009135066806270272], ["[ i ] ]", 0.00907333186900984], ["i ] ]", 0.00907333186900984], ["i ] - 1", 0.009054017748663743], ["b1 ,", 0.009024804935415293], ["2 != 0 :", 0.00892396236432572], ["a ) #NEWLINE# print", 0.008867244223531658], ["sqrt", 0.008751291466183633], ["( len ( s", 0.008705710695145554], ["[ 1 ,", 0.008700325326147677], [": #INDENT# l ,", 0.008567849949763146], ["#INDENT# l , r", 0.008567849949763146], ["#INDENT# l ,", 0.008567849949763146], ["[ a [", 0.008513534990092386], [", a ,", 0.008413739463502795], ["- 1 ] =", 0.008346949551712765], ["( b [ i", 0.008282439726086381], ["mod ) #NEWLINE#", 0.00821190066196566], ["1 #NEWLINE# break #NEWLINE#", 0.008188620311864807], ["1 #NEWLINE# break", 0.008188620311864807], ["u , v )", 0.008183818727394288], ["j ] !=", 0.00808587527614725], ["reordered", 0.00793057461097021], ["] ) - ord", 0.007883909925832981], [", len ( a", 0.007712503740143156], ["#INDENT# for k", 0.007684146522873768], ["#INDENT# for k in", 0.007684146522873768], ["6 )", 0.007607870147856249], ["x % 2 ==", 0.007498192516280924], ["[ j ] +", 0.007462968127133872], [", y3", 0.007439088038581044], ["range ( n //", 0.007420076106278334], ["** 2 +", 0.00740671159809242], ["return s #NEWLINE#", 0.007405976316747065], ["while (", 0.007386164053359431], ["ay", 0.007339058217978216], ["] = 2", 0.007255002551032126], ["= deque (", 0.0071708377415591155], ["= deque", 0.0071708377415591155], ["r ) ) #NEWLINE#", 0.007166041704248953], ["< len", 0.007151683581342613], ["< len (", 0.007151683581342613], ["t #NEWLINE#", 0.007151448235787531], ["== -1 :", 0.007144076072291199], ["] ) %", 0.007142155860368854], ["1 ) ,", 0.00712123388358773], ["* m #NEWLINE#", 0.006840126086009999], ["l [", 0.006823978413304537], ["arr [ i +", 0.0068077169485299995], ["'b'", 0.006805014761757315], ["4 ) :", 0.0067726009932324496], [") #NEWLINE# x =", 0.006770122531175731], ["= max", 0.006670048139325755], ["s [ i +", 0.006598760080697615], ["2 ) %", 0.006545037303479412], ["m ) ] #NEWLINE#", 0.0064476479177374415], ["append ( ( a", 0.006289215432002985], ["b2 )", 0.006174807272157596], [") ) #NEWLINE# dp", 0.006117140026459636], ["0 for", 0.0061135172689983875], ["] == -1", 0.0060371350063120124], ["] == -1 :", 0.0060371350063120124], ["1 :", 0.006011630710308465], ["t ) )", 0.005826202711670742], ["0 ] #NEWLINE# #DEDENT#", 0.005684293786533902], ["\"impossible\"", 0.0056252185394409845], ["+ 7 )", 0.00556176416206519], ["] + [", 0.005547711071393981], ["- 1 >=", 0.005496754740649544], ["i + 1 :", 0.005462064345529675], ["return s #NEWLINE# #DEDENT#", 0.0054427583622486935], ["v ) #NEWLINE# #DEDENT#", 0.005413901441363772], ["] = max", 0.005286349918188346], ["if 0", 0.0051384576154602825], ["u", 0.00510563040296069], ["+ 1 : #INDENT#", 0.005103688065810867], ["+ 1 ) ]", 0.0050576768158086816], [") >=", 0.005040128995659523], ["w ==", 0.0049513214469837155], [") #NEWLINE# continue #NEWLINE#", 0.004939382540136264], [") #NEWLINE# continue", 0.004939382540136264], ["0 ] [ 1", 0.004911838360800596], ["'1'", 0.004699778115086177], ["[ v ] .", 0.004674054136186608], ["v ] .", 0.004674054136186608], ["= s [", 0.0043544726151724675], [": #INDENT# for k", 0.004348150279368457], ["] = 0 #NEWLINE#", 0.004326602359482907], ["n - 2", 0.004324690858038363], ["j ] == 0", 0.004276566000951148], ["else : #INDENT# i", 0.004144978163510638], ["print ( dp [", 0.004138358313992587], ["( '0'", 0.004136134725043568], [") % k", 0.004132203615633913], [": n", 0.00406547242772844], ["#NEWLINE# return count", 0.004054122968218982], ["#INDENT# if x ==", 0.004026599822343439], ["c #NEWLINE# #DEDENT#", 0.003997578673586034], ["= ( ans", 0.003964824904387869], ["k and", 0.0038906493546694535], ["if x is", 0.003881979563654798], ["] = 2 #NEWLINE#", 0.003846358013869304], ["for k in range", 0.003840716007104249], ["k in range", 0.003840716007104249], ["k in range (", 0.003840716007104249], ["n - k", 0.00383923323738504], [", start", 0.003818826287937754], ["i ] = min", 0.0037699709736625695], ["2 : #INDENT# return", 0.0037653560474920802], [", left", 0.003764590423095492], ["k <", 0.003703338329411593], ["print ( x ,", 0.003679426434197341], ["( ord", 0.003637934290097267], [") #NEWLINE# def", 0.003608646546098733], ["] ] =", 0.0035473756684781723], ["0 and", 0.0035440864481314153], ["'1' : #INDENT#", 0.0035406356747154978], ["i ] + 1", 0.0034850660083034363], ["k + 1 ,", 0.00336855770615181], [", s ) )", 0.0033475941493925146], ["+ 2 ]", 0.0033169492738233854], ["[ j ] !=", 0.003258599936529009], ["( s [ i", 0.0032167037745214847], ["#NEWLINE# if n ==", 0.0030627218381040957], [") #NEWLINE# if k", 0.0030596613493364105], ["#INDENT# if x", 0.0030477411995363823], ["i , i", 0.003040603398391389], ["search", 0.0029566769579603305], [", n ,", 0.0028640110899468014], ["def check", 0.00281698294908457], [", m +", 0.002775977531524273], ["( u ,", 0.0027748179471112763], ["g [ i", 0.002719489556931522], ["[ k ]", 0.0025750673731406337], ["<<", 0.002546439207895573], ["#NEWLINE# d ,", 0.002476062746951604], [": ( x", 0.002410381340085638], ["x : ( x", 0.002410381340085638], ["zeros", 0.0023895206414180853], ["sum ( b", 0.002363189563330907], ["== len", 0.002319170695079063], ["== len (", 0.002319170695079063], ["( s ,", 0.002255855815687718], ["] [ i ]", 0.002230209609735471], ["#INDENT# def", 0.0022247578967325037], ["( a1", 0.0021869427250987964], ["and y2", 0.0021760729920958246], ["j ] = max", 0.0021424709097456617], ["if j ==", 0.0021334905770070906], ["1 ] <=", 0.0021206907297360643], ["[ 1 ] <=", 0.0021206907297360643], [", m + 1", 0.0021110671581858623], ["n , a ,", 0.002092969083714632], ["p [ i", 0.002014704190284687], ["] and", 0.0019340675312224285], ["+= a", 0.0018923615538520096], ["b , x", 0.0017896638547612565], [", b , x", 0.0017896638547612565], ["#INDENT# g =", 0.0017267031411804278], ["a =", 0.0016674181267611245], ["w - 1", 0.0015993791659195567], ["( k +", 0.0015246016972149247], [". readline (", 0.0015160530480999477], [". readline ( )", 0.0015160530480999477], ["= l", 0.0014908947799577332], [", q ,", 0.0014238723009778595], ["( j", 0.0014150039297686633], ["n == 0", 0.0013728053227568945], ["( x ) :", 0.0013700776225938967], ["golorp", 0.0013320790392661902], ["b - 1", 0.0013256114063154563], ["#DEDENT# a ,", 0.0012899585284939998], ["y ) #NEWLINE# #DEDENT#", 0.0012570797788099522], ["for b", 0.001222204135094936], ["or a", 0.0011919964407007212], [", key =", 0.0011644703138386355], [", key", 0.0011644703138386355], [", i + 1", 0.001143760117226996], ["count )", 0.0010910754593475578], [") % mod )", 0.0010757169371333538], ["values ( ) )", 0.0009596326281618046], ["#DEDENT# if x", 0.0009255356571670596], ["// k #NEWLINE#", 0.0009043866852763108], ["while i <", 0.0008679112817743235], ["#DEDENT# k", 0.0008487353215441327], ["in s", 0.0008232529057532066], ["for u ,", 0.0006999812302337036], ["for u , v", 0.0006999812302337036], [": #INDENT# def", 0.0006774638654605667], ["s [ j", 0.0006289928706787438], ["v ) ) #NEWLINE#", 0.000561606895017382], ["q ) : #INDENT#", 0.0005155710874881888], ["== 0 else", 0.0003188666686869295], ["= x", 0.0003071666217854996], ["i ] -", 5.8576991375460094e-05], ["pass", -5.953605616225899e-06], ["for r", -9.578733082974073e-05], ["for r in", -9.578733082974073e-05], ["1 ) #NEWLINE# return", -0.00014565080427275613], ["number )", -0.00015691449792179426], ["in range ( h", -0.0001685697056523865], ["true #NEWLINE# #DEDENT# if", -0.00017118969336617668], [", d =", -0.000178247102587468], ["b : #INDENT#", -0.0002725736036111034], ["= a .", -0.00031739512248496547], ["range ( w )", -0.00032348786900720367], ["a * b )", -0.0003562775636281858], ["p ) #NEWLINE#", -0.0003979118370735257], ["= ( n", -0.0004512946412271557], [") #NEWLINE# g =", -0.0005080870953260969], ["prev", -0.0005287724471287618], ["sum = 0", -0.0005522728053560938], ["[ v ] :", -0.0005658149265540207], [") ] +", -0.000672318036815339], ["#INDENT# print ( 1", -0.0006876311577543005], ["= 1 #NEWLINE# for", -0.0007428575693464427], ["'x'", -0.0007672469859495292], ["return a *", -0.0008757349777026049], ["1 ) -", -0.0008959468992428927], ["#NEWLINE# prev =", -0.0009063130994495554], ["math #NEWLINE# n", -0.0009447811750873991], ["import math #NEWLINE# n", -0.0009447811750873991], ["n #NEWLINE# #DEDENT#", -0.0009676725480955799], ["] >", -0.001145779247339101], ["for i ,", -0.00117304749769059], ["{ }", -0.0013777680828927392], [": #INDENT# return [", -0.0014664887498775402], ["#INDENT# return [", -0.0014664887498775402], ["ceil (", -0.001548832468150108], [": #INDENT# for b", -0.0015738185615455898], ["n * (", -0.0017398260263202332], ["str ( n )", -0.0017732729985735277], ["#DEDENT# return 0", -0.0018038838811532778], ["( count ) #NEWLINE#", -0.0018386337042447952], ["return i", -0.0018443719592313606], ["for t in", -0.001890236677859738], ["stdin . readline (", -0.0020560691163084297], ["( w ,", -0.002086939804129611], ["] % 2", -0.0020939943021735627], ["[ i for", -0.002289462464567631], ["[ i for i", -0.002289462464567631], [": #INDENT# if j", -0.002297916377299683], ["#INDENT# if j", -0.002297916377299683], ["( int ( input", -0.002358476777255206], [") #NEWLINE# if len", -0.002465921212414685], [", 10 )", -0.002539457133638629], ["#NEWLINE# dp =", -0.0025899940187691863], ["#NEWLINE# while n", -0.002598020842177912], [") #NEWLINE# q =", -0.0026226202450307977], ["|", -0.0026697681601695984], ["#DEDENT# ans = 0", -0.0027377693159743553], ["print ( 1 )", -0.0028131841079421156], ["s #NEWLINE#", -0.002823933296293893], ["i ] == 0", -0.002842980464434865], ["-1 ,", -0.002846009017114294], ["taken", -0.002953975017748182], [") % 3", -0.0029593123695450863], ["= dp [ i", -0.002977107278396988], ["( dp [ 0", -0.0030569082644140554], ["j ] #NEWLINE#", -0.003065421760604087], ["] [ :", -0.0031243164382429717], ["#NEWLINE# i += 1", -0.00316180069966872], ["else : #INDENT# dp", -0.003219856178301128], ["#NEWLINE# while j", -0.003307489202897111], [", dp [ 1", -0.0033323482409836373], ["#NEWLINE# a [", -0.0034104141224495788], ["fac [", -0.0034597631788986765], [": #INDENT# if v", -0.0035256082668276042], ["for a , b", -0.0036021777615744136], ["( -1 ,", -0.0036206498191669774], [": 2 ]", -0.003746534244650176], ["str ( i )", -0.003751080593667776], ["edge", -0.0037611312924087873], ["4 ) : #INDENT#", -0.0037744614016583748], ["( number", -0.003820185956046789], ["1 >=", -0.0038580141866808707], ["#DEDENT# res =", -0.0039554447631829776], ["in range ( q", -0.00409991181861399], ["range ( q", -0.00409991181861399], ["10 ** (", -0.00418186666572545], ["return x #NEWLINE#", -0.004182207060809087], ["ord (", -0.004192236632572291], ["] * ( m", -0.004205328105323043], ["k , a ,", -0.004240579272801907], ["#DEDENT# return 0 #NEWLINE#", -0.0042840672561801725], ["'u'", -0.004381680176909411], ["( b ) #NEWLINE#", -0.00445806039530048], ["j + 1 )", -0.004503814105616231], ["u ] . append", -0.004597892134070591], ["( 4 ) :", -0.004872138243637986], [") #NEWLINE# p", -0.004891915918079941], [", 6", -0.004912598887903834], ["range ( 4 )", -0.004957549242173137], ["m , a", -0.004974636835546241], ["letters", -0.004981213943030168], ["in range ( k", -0.005056814441923476], ["#INDENT# solve", -0.0050868928363708215], ["#INDENT# solve (", -0.0050868928363708215], ["] ] +=", -0.005100377127117084], ["= x #NEWLINE#", -0.005139385925834466], ["if i %", -0.005192550518172227], ["1 ] and", -0.005241515942239592], ["y4", -0.0052880780209580685], ["- 1 ]", -0.005311931358022661], ["24", -0.005319932484646695], [") : #INDENT# b", -0.005379893968893412], ["u , v in", -0.005419940694036162], ["= [ 1", -0.005466230228380313], ["k ] =", -0.005468409423612472], ["#NEWLINE# #DEDENT# a =", -0.0054761519186577855], ["m , r", -0.005490015552290627], [", m , r", -0.005490015552290627], ["#NEWLINE# while i <", -0.0055317147545024085], ["* a +", -0.005534486064073837], ["i for", -0.005561020543266682], ["#NEWLINE# #DEDENT# return false", -0.005598526965338914], ["#NEWLINE# if", -0.005704079278281712], ["'2'", -0.005751149642074054], ["items", -0.005848542922764513], ["% mod", -0.005854687984854993], ["+ k", -0.005875725254535336], [", y4", -0.005887189532736328], ["\"bitaryo\"", -0.00597092697621403], ["if u", -0.005984557254219418], ["== -1 : #INDENT#", -0.006003625548898731], ["r <", -0.006104421489844485], ["[ 1 ] ]", -0.006134408285191078], ["#NEWLINE# i = 0", -0.006185133427205203], ["= np", -0.00620629607678763], ["= np .", -0.00620629607678763], ["1 <", -0.006238389614369394], ["#INDENT# x", -0.0063281908787101], ["n >", -0.006398452982748082], [") ] #NEWLINE# print", -0.006408809201861784], ["0 #NEWLINE# #DEDENT# if", -0.006444121833540258], ["( '0' )", -0.006477169937531044], ["- c [ i", -0.0066223968767064045], [", i -", -0.006644695699777669], ["if count", -0.006725852693479322], [", j + 1", -0.006774688090621606], ["] + s [", -0.0067922646027070415], ["< 2 :", -0.006802412037145589], ["c = 0 #NEWLINE#", -0.006874310778331509], ["x : #INDENT#", -0.00691007185371231], ["( k //", -0.007073995985744116], ["[ y ] =", -0.007112358638955527], ["min ( a )", -0.00711726472831783], ["x2 , y2 =", -0.0071792906994359446], ["n - 2 *", -0.007244815465666004], ["#INDENT# if v", -0.007306302509807878], [", p ,", -0.007318818267839609], ["( 4 )", -0.007333248137863524], ["] == t [", -0.007407822077160724], ["== t [", -0.007407822077160724], ["( \"\" . join", -0.007496107381198949], ["( \"\" .", -0.007496107381198949], ["( \"\"", -0.007496107381198949], ["( dp [", -0.007517045239975881], ["- 2 ,", -0.007545035382344091], ["x -=", -0.007614617549344726], ["< a [", -0.007624626788719823], [", target", -0.007643894648449885], [": #INDENT# return s", -0.007647093517081086], ["#INDENT# return s", -0.007647093517081086], ["b + c", -0.007651209235270094], ["] : #INDENT# if", -0.0076540047422898995], ["x4", -0.0077044071365568925], ["b ) +", -0.007709760613167927], ["* ( i", -0.007718849591922322], ["d - 1", -0.00783463329306801], ["golorp [", -0.007882542353987486], ["str ( n", -0.00788677615144074], ["format", -0.007890218408983123], [", 0", -0.007895605038380904], ["range ( n +", -0.008034528753290492], ["comb", -0.008092223503906482], ["< k", -0.008098825922373836], ["( k + 1", -0.00811944498183826], ["edges ) :", -0.008125649932383999], [") > 1", -0.008169534255046056], ["as", -0.00824738858996529], ["= [ i for", -0.00828406594490299], ["zeroes", -0.008303495820665578], ["[ -1 ] ,", -0.008336239823326293], ["r ) :", -0.008407156817426473], ["[ 1 ] >", -0.008418979560314642], ["1 , 10", -0.00843137219688192], ["[ : n", -0.008482191635545552], ["2 ] [", -0.008524668648297807], ["3 and", -0.008667843657333201], ["c = 0", -0.008674313389204904], ["9 ,", -0.008713100090588578], ["if n % 2", -0.00871939757636663], ["#NEWLINE# if l", -0.008734687591919223], ["op", -0.008739544294924071], ["j ] == 1", -0.009046595167381807], [") == 0 :", -0.009047462509601999], ["2 * n", -0.00909774604738094], ["+ b :", -0.009195631927235508], ["+ b : #INDENT#", -0.009195631927235508], ["i for i", -0.009252712136236836], ["i + 2 ]", -0.009263632104437827], ["[ r", -0.009359346190065104], ["k % 2", -0.009511280931825085], ["2 ] ]", -0.009531497024066207], ["print ( dp", -0.009536196668345268], ["j -= 1 #NEWLINE#", -0.00954174582800519], ["j -= 1", -0.00954174582800519], ["j -=", -0.00954174582800519], ["import math", -0.009542004431687501], ["c ,", -0.009650285559290076], ["= d", -0.009672431677666305], ["b ) ) #NEWLINE#", -0.009716329215590961], ["true #NEWLINE# for i", -0.009773149331941795], ["for a ,", -0.009922139346468756], [", x ,", -0.009982525798491553], ["popleft ( )", -0.010141736612879303], ["popleft (", -0.010141736612879303], ["popleft", -0.010141736612879303], ["popleft ( ) #NEWLINE#", -0.010141736612879303], [". popleft", -0.010141736612879303], [". popleft (", -0.010141736612879303], [". popleft ( )", -0.010141736612879303], ["k = 0 #NEWLINE#", -0.010187763914210658], ["#INDENT# if not visited", -0.010272960492684472], ["10 :", -0.010399640088453128], ["c //", -0.010434213090208231], ["= len ( a", -0.010447860620274032], ["] , 0", -0.010534252296796116], ["[ j ] +=", -0.010538816662823837], ["j ] +=", -0.010538816662823837], [", abs", -0.01061212174258798], [", abs (", -0.01061212174258798], ["== (", -0.010643698956744552], ["( d )", -0.010651606751072745], ["2 ) ]", -0.010818889300948126], ["condition", -0.010827392793326795], ["append ( a", -0.01083747926679788], [". append ( a", -0.01083747926679788], [": #INDENT# if x", -0.010888945691196385], ["( len (", -0.010978867660965681], ["y [", -0.011058831831339854], ["k = int (", -0.01114552579053], ["k = int", -0.01114552579053], ["'r'", -0.011207575865358815], ["#NEWLINE# if ans", -0.01124226602530297], ["x <", -0.011306256097656288], ["[ 0 ] ==", -0.01133764586055203], ["0 ] ==", -0.01133764586055203], [", a2", -0.011373347778763393], ["< k :", -0.0113911289112397], ["( n %", -0.011459244118605102], ["= mid", -0.011493867074960053], ["readline (", -0.011625349129053062], ["readline ( )", -0.011625349129053062], ["#DEDENT# t", -0.011712325889438165], ["i = 0 #NEWLINE#", -0.011934666890130195], ["i = 0", -0.011934666890130195], [": #INDENT# return (", -0.011943424789138544], ["#INDENT# return (", -0.011943424789138544], ["x in range (", -0.011989275328715392], ["x in range", -0.011989275328715392], ["\"\"", -0.01213019131246829], [", y2 =", -0.012183862787576038], ["y ] =", -0.012208573606081402], ["edges ) : #INDENT#", -0.012295941061573038], ["min ( dp [", -0.012299887288948076], ["min ( dp", -0.012299887288948076], ["+ s [ i", -0.012307859746268319], ["#DEDENT# print ( len", -0.01235473390156219], ["= min ( dp", -0.012404991594356237], ["0 ] == 0", -0.012423395872415756], [") ) for", -0.012437330370134057], ["for b in", -0.012445350939552412], ["- b [", -0.012562934874202689], ["// n", -0.012589141953457342], ["s [ 0 ]", -0.012618566183654218], ["range ( h", -0.012659541138304807], ["a %", -0.012694622941497109], [">= k : #INDENT#", -0.012723310558624133], [">= k :", -0.012723310558624133], ["( m +", -0.012781807610976099], ["#DEDENT# a =", -0.012879479655163274], ["in a", -0.012882816896307972], [": ] ) #NEWLINE#", -0.012898276691348865], ["1 ) #NEWLINE# if", -0.012928004905265758], ["if p [", -0.013041674873314117], ["3 -", -0.013054980960387973], ["-1 ] ) #NEWLINE#", -0.013237521007114847], ["#INDENT# return x", -0.013348379298533185], ["[ 0 ] <=", -0.013538105053538849], ["0 ] <=", -0.013538105053538849], ["x %", -0.013541353437022117], ["l #NEWLINE#", -0.013582527856132459], ["//= 2", -0.013655467105735297], ["//= 2 #NEWLINE#", -0.013655467105735297], ["< 2", -0.013709791722349526], ["s +", -0.013738997094665268], ["- 1 : #INDENT#", -0.013755875188919043], ["c = list (", -0.013786628143384806], ["c = list", -0.013786628143384806], ["1 ) for", -0.01380927648123372], ["#NEWLINE# #INDENT# if i", -0.01382863254430503], ["x ] [", -0.013890391416588502], ["[ x ] [", -0.013890391416588502], [", x , y", -0.013890491993734592], [") #NEWLINE# s =", -0.013957754315115528], ["set ( ) #NEWLINE#", -0.014165803760502652], ["= set ( )", -0.014165803760502652], ["0 , -1", -0.014170618846240253], ["( q ) :", -0.014188874659411845], [") , max", -0.01423253616857199], ["- i -", -0.014243552506576261], ["if i % 2", -0.014281043190185177], ["2 ] ) #NEWLINE#", -0.014302959618730817], ["[ i ] +=", -0.014439354445183954], ["3 ] )", -0.014487966747742852], [": #INDENT# if c", -0.014630992305555186], ["#INDENT# if c", -0.014630992305555186], ["[ a ]", -0.014694417070376171], ["#NEWLINE# while a", -0.01469592467780432], ["] :", -0.014700412760098952], ["false #NEWLINE# #DEDENT# def", -0.014705407013503329], ["print ( 0", -0.014733177840466518], ["] ) and", -0.014733682918107747], ["0 ] = 1", -0.01475136640713201], ["n , r", -0.014780207885343328], ["count ) #NEWLINE#", -0.01480768778824809], ["range ( q )", -0.014858197117922398], ["[ 0 ] =", -0.01494977259256733], ["and x", -0.014979196197101982], [", n ) #NEWLINE#", -0.015031017793387391], ["[ j", -0.01505217448750562], ["> a", -0.015070742653057965], ["try", -0.01512736031493177], ["d in", -0.015147518554468133], ["n % 2 ==", -0.015187794860203517], ["costs", -0.015191916202676906], ["tuple (", -0.015233218295917705], ["\" \" ) #NEWLINE#", -0.015240083602748726], [": #INDENT# j +=", -0.015400237024108001], ["[ list (", -0.015433243601855618], ["[ list", -0.015433243601855618], ["elif b", -0.015499288420637457], ["x ) ) #NEWLINE#", -0.015526004243939281], ["#NEWLINE# while i", -0.015565127802709088], ["#DEDENT# for j", -0.01576888461571476], ["#DEDENT# for j in", -0.01576888461571476], ["a , b in", -0.015780652264797378], ["n ) #NEWLINE#", -0.015786414139562454], ["elif a [", -0.015842945485129153], ["#NEWLINE# #DEDENT# if s", -0.01587957770335797], ["== k :", -0.015959973819622757], ["q [", -0.015970011932654453], ["= 1 ,", -0.015984569682461768], ["- b", -0.01598909148956656], ["#NEWLINE# b [", -0.016032021008532887], [", m ) #NEWLINE#", -0.016132382698635688], ["] ) +", -0.01613456274731879], ["#NEWLINE# p = [", -0.016166399785228144], ["1 ) for i", -0.016179449451642968], ["[ j ] :", -0.016204888083357384], ["search (", -0.016212310750010648], [". search (", -0.016212310750010648], ["re . search", -0.016212310750010648], ["re . search (", -0.016212310750010648], [". search", -0.016212310750010648], ["and t", -0.016225961524190414], [", ( 0 ,", -0.01625715308482937], [", ( 0", -0.01625715308482937], ["1 , -1", -0.016322014363884262], ["] * m", -0.01649857622787434], ["ax", -0.01652149184962543], ["range ( 3", -0.01657819608311109], ["in range ( 3", -0.01657819608311109], ["n - 1 ]", -0.016618119067955895], [", w =", -0.016754791246297328], ["== 1 or", -0.016900196065176697], [") #NEWLINE# i", -0.016938056788278123], ["( m -", -0.017125920639516727], ["== 1 : #INDENT#", -0.017155646919067718], [") ) #NEWLINE# def", -0.01720352842514954], ["d : #INDENT#", -0.017207014153773025], ["- 1 :", -0.017208286007859074], ["h -", -0.017231091116524787], ["y #NEWLINE#", -0.017231970736691093], [", v ,", -0.017235960482793442], [") , max (", -0.017272732888079456], ["+ s [", -0.017292824442318156], ["for j", -0.01731330217927258], ["0 , -1 )", -0.017412289700257492], [") ] #NEWLINE# dp", -0.017463887803945952], ["] . add", -0.017512823316755577], ["] . add (", -0.017512823316755577], ["while s", -0.017669867043874042], ["- 1 , -1", -0.01775929486132512], ["== n :", -0.017788825314322586], ["] #NEWLINE# count", -0.017807132509482456], ["0 else", -0.01784170136954409], ["= [ list (", -0.01793165359863862], ["= [ list", -0.01793165359863862], [", 0 , -1", -0.018085948509525978], ["#INDENT# if dp", -0.01819711213779571], ["l +", -0.01820744846103058], ["0 , 0 ,", -0.01827038344656236], ["2 + (", -0.01827594071924539], ["0 ] * m", -0.01832349208471464], ["else : #INDENT# a", -0.018443347596015725], ["i <", -0.018501244922403563], ["+ c", -0.018567752693506162], [") ) #NEWLINE# m", -0.018614304953997563], ["= [ false ]", -0.018681279532078463], [") ) #NEWLINE# b", -0.018683007649741394], ["= true ) #NEWLINE#", -0.01869356159915584], ["-1 ) : #INDENT#", -0.01874657197187898], [") #NEWLINE# q", -0.018748754932974235], ["_2", -0.01879049208101823], ["else 0 #NEWLINE#", -0.01880005477021043], ["+ 1 , j", -0.01884765329894232], ["in range ( 4", -0.018884246249302176], ["range ( 4", -0.018884246249302176], ["#NEWLINE# nums", -0.018986915898452757], ["* m", -0.019090077455106935], [", c )", -0.019104077623175474], ["h , w ,", -0.01912877799465205], ["[ false ]", -0.019164848829179394], ["[ false ] *", -0.019164848829179394], ["false ] *", -0.019164848829179394], ["false ]", -0.019164848829179394], ["( ) for", -0.019288825113821018], ["not visited [", -0.019408874968355066], ["not visited", -0.019408874968355066], ["= 2 #NEWLINE#", -0.01945129366645459], ["( p ) #NEWLINE#", -0.01950449049164872], ["] < a", -0.019699075049372707], ["#NEWLINE# dp = [", -0.019724187881292123], ["for i in a", -0.019818086320506672], ["+= 1", -0.01984495468055352], ["one", -0.019859684139920685], ["#NEWLINE# #DEDENT# if n", -0.019866113456007136], ["x [ 0", -0.019870283613107113], ["x [ 0 ]", -0.019870283613107113], ["== b", -0.019934171300462395], ["counts [", -0.020031722416423262], ["= [ -1", -0.020050948769226355], [") #NEWLINE# h =", -0.020068639969187257], [", x +", -0.020126233966543894], ["while n", -0.020148332892887786], [": #INDENT# self .", -0.020173465118524102], [": #INDENT# self", -0.020173465118524102], [", k + 1", -0.020311407601436668], [", k +", -0.020311407601436668], ["+= 1 #NEWLINE#", -0.020445778425539112], ["1 ] + 1", -0.02047012603376581], ["( s1", -0.020511425073513723], ["#DEDENT# if s", -0.020564173417225606], [", i", -0.020619768263177147], ["[ 3 ] )", -0.020645964271727005], ["#NEWLINE# h = list", -0.020676472128104126], ["t ) ) #NEWLINE#", -0.020690089957966416], ["( ) for _", -0.02071750731453293], ["#NEWLINE# a1", -0.020733260489410592], ["n **", -0.020774416403601226], ["1 , k )", -0.02086033648332956], ["def dfs (", -0.020864705600202673], ["def dfs", -0.020864705600202673], ["#DEDENT# elif a [", -0.02090890977885716], ["] == 1", -0.020969827012795074], ["if a [", -0.020994322476071803], ["] %", -0.021081334808469264], ["% mod #NEWLINE#", -0.0210831862196624], ["v ] :", -0.021125202100353877], ["range ( 2 )", -0.02117721229043902], ["0 and a", -0.021178192458499695], [": #INDENT# return x", -0.021259084724557623], [": #INDENT# x", -0.021431400430381206], ["c ) :", -0.02143350948214877], ["#INDENT# w", -0.021453466696593596], [": #INDENT# w", -0.021453466696593596], ["1 ] [ 0", -0.021461637127396974], ["#DEDENT# dp =", -0.021598358137263227], [", t = map", -0.021741968274219915], ["t = map", -0.021741968274219915], ["t = map (", -0.021741968274219915], ["+ 1 ) //", -0.021758368001508082], ["#NEWLINE# add", -0.021864363907048563], ["+= abs (", -0.021903800401936978], ["+= abs", -0.021903800401936978], [". items (", -0.022128473298881884], [". items ( )", -0.022128473298881884], ["items (", -0.022128473298881884], ["items ( )", -0.022128473298881884], [". items", -0.022128473298881884], ["for c in range", -0.022251539010040428], ["c in range (", -0.022251539010040428], ["c in range", -0.022251539010040428], ["< n and", -0.022262977178380897], ["] [ 3", -0.02232376100512404], [", 10 **", -0.022532499379735057], ["[ ( i", -0.0226565224054774], ["if c", -0.022682933831959035], ["( sorted", -0.022705455524264808], ["( sorted (", -0.022705455524264808], ["] < a [", -0.02274704390579385], ["if not visited [", -0.022813578877513806], ["if not visited", -0.022813578877513806], [", b in", -0.022858658668874345], [": #INDENT# if dp", -0.022864138204400915], ["* p", -0.022943550165871098], ["[ n -", -0.02310834565241034], ["[ n - 1", -0.02328079419443395], ["x #NEWLINE#", -0.023379823280684355], ["= x [", -0.023462442525613084], ["b ==", -0.023478707182940494], ["#NEWLINE# if y", -0.023529818550356605], ["if arr [ i", -0.023581023321865995], ["append ( a [", -0.023813097777048795], ["( j + 1", -0.023816094177970787], ["v ] : #INDENT#", -0.023821720099853], ["#DEDENT# t =", -0.023891989836706738], ["print ( ) #NEWLINE#", -0.023951010258425814], ["print ( )", -0.023951010258425814], ["none #NEWLINE# #DEDENT#", -0.024001307609864072], ["s [ 0", -0.024072802634437937], ["c += 1", -0.02409174108828311], ["r ) : #INDENT#", -0.024126047339777926], ["s [ j ]", -0.024215809603502208], ["#NEWLINE# n -=", -0.02430507054324847], ["j += 1", -0.024450247719178853], ["j += 1 #NEWLINE#", -0.024450247719178853], ["#NEWLINE# return res", -0.024571177637505832], [": #INDENT# h", -0.02461180894408743], ["#INDENT# h", -0.02461180894408743], ["[ 4 ]", -0.02462773139379853], ["if dp", -0.024636874340706896], ["in", -0.024657498544785203], ["= [ false", -0.02467958991208507], ["( ) ,", -0.02474465185611092], ["cos (", -0.024825458113839544], ["* math . cos", -0.024825458113839544], ["math . cos (", -0.024825458113839544], [". cos (", -0.024825458113839544], [". cos", -0.024825458113839544], ["math . cos", -0.024825458113839544], ["'0' : #INDENT#", -0.024951880640869097], ["+ 1 -", -0.02496831006510999], ["true ) #NEWLINE#", -0.024999940759727633], ["#NEWLINE# a ,", -0.02505262101494468], ["j ] :", -0.025107011312172425], ["] == t", -0.025191913107497486], ["#NEWLINE# for x", -0.025265544036256065], ["#NEWLINE# #DEDENT# res =", -0.025268246353033656], ["= p [", -0.02535758441275918], ["// k )", -0.02544594686060108], [") == (", -0.02548753961668583], ["- a [", -0.02552784703634953], ["is none", -0.02562774191498056], ["] == 0", -0.025644987246445212], ["1 ) // k", -0.025656352071076548], [", k , m", -0.025696438300134797], ["] = [ ]", -0.025696681834644557], ["* ( m", -0.02586573197517303], ["#NEWLINE# #DEDENT# t", -0.025898030156589192], ["if x %", -0.025900622534886522], ["j in range", -0.0259133923207122], ["j in range (", -0.0259133923207122], ["for j in range", -0.0259133923207122], ["h1", -0.025933485759649624], ["= a *", -0.02597905205794668], ["= \"\" #NEWLINE#", -0.026010870060560323], ["= \"\"", -0.026010870060560323], ["\"\" #NEWLINE#", -0.026010870060560323], ["+ 1 ) ,", -0.026031367480786494], [", t =", -0.026048815480470937], ["( len", -0.026077532156984867], ["true #NEWLINE# #DEDENT# return", -0.026159135263470672], ["[ 0 ] >", -0.026176292660666494], ["0 ] >", -0.026176292660666494], ["#INDENT# if dp [", -0.026244150849062935], ["x #NEWLINE# if", -0.02628663230911666], ["stdin #NEWLINE#", -0.026299824527369613], ["#NEWLINE# i +=", -0.026415467927986606], ["range ( k )", -0.026532031554715986], ["x [ 1 ]", -0.026592026505578074], ["x [ 1", -0.026592026505578074], ["< 0 or", -0.026595896088682545], ["int ( n )", -0.026612230548415158], [") ) %", -0.026641564525239442], ["x == 1", -0.026668111340189905], ["len ( a )", -0.02671107426240689], [", val", -0.026803410471865408], ["3 ] #NEWLINE#", -0.026875806453834236], ["c += 1 #NEWLINE#", -0.026907832852449128], [">= 0 and", -0.026911605545003183], ["2 == 1 :", -0.026926868524156853], [") > 1 :", -0.0270269784957087], ["j ] +", -0.0272413872220484], ["#DEDENT# i", -0.02725790479336649], ["arr ) )", -0.027296645476181904], ["= gcd (", -0.027363820882485384], ["= gcd", -0.027363820882485384], ["#DEDENT# #DEDENT# #DEDENT# for", -0.02736416884009875], ["#NEWLINE# number", -0.02739578379959254], ["print ( i ,", -0.02743113664325909], ["] == '0'", -0.027445341966191677], ["append ( s", -0.02748066908469356], [". append ( s", -0.02748066908469356], ["#INDENT# i", -0.02759537692407902], ["y ) :", -0.027632867751662946], ["print", -0.027640563402010855], [") #NEWLINE# if a", -0.02770158710906113], ["c +", -0.027728763410061516], ["= sum (", -0.027757966623304584], [", a ) #NEWLINE#", -0.027833423920121822], ["j", -0.0278364080060042], ["for x in range", -0.02785618378614922], ["read (", -0.02785649542846809], ["read ( )", -0.02785649542846809], ["#NEWLINE# if i", -0.027894576416724555], ["+ 1 ) for", -0.02792355703889447], ["- k + 1", -0.028088231896687254], ["== n : #INDENT#", -0.02809110180049336], ["q ,", -0.028102429026383845], [", c =", -0.028103864844582948], ["- 1 ] ==", -0.028110776971637278], ["[ 0 , 0", -0.028311860215736076], ["res = [", -0.028326855342660287], [", 2 ) :", -0.028480085476861684], ["cos", -0.028481520292139156], ["a * b", -0.028546530913166338], ["2 == 1", -0.028583307166620837], ["% 2 == 1", -0.028583307166620837], ["* a + b", -0.0286036862164803], ["'b' :", -0.02862530186831156], ["#INDENT# self", -0.028632207695224402], ["#INDENT# self .", -0.028632207695224402], [") **", -0.02864263786312282], [") #NEWLINE# i =", -0.028649002812542734], [") [ :", -0.02865048981078465], ["0 #NEWLINE# while i", -0.028680542816512482], ["i ] = max", -0.028686605260448177], ["k , t", -0.028689439897096235], ["= [ tuple (", -0.028691668755250928], ["= [ tuple", -0.028691668755250928], ["if x1", -0.02873934350531664], ["< m", -0.02877991752267947], ["i ] - a", -0.028814932433520825], [", 8", -0.028865811392227457], ["flag =", -0.028866199187132225], ["#INDENT# if len", -0.028889251900438676], ["#INDENT# if len (", -0.028889251900438676], ["] % 2 ==", -0.028897029275641146], ["r ]", -0.028927088813051127], ["j ) )", -0.028931256910476506], ["i for i in", -0.02895415844991301], ["l - 1", -0.028976495825928927], ["i in a", -0.02919994784565579], ["( n // 2", -0.02926952647444374], ["s : #INDENT# print", -0.02933377210006704], ["num ) #NEWLINE#", -0.029370836604462713], ["1 : ] )", -0.029388324393929393], ["#DEDENT# if n", -0.029493421748598373], ["b in", -0.029508549433374272], ["#DEDENT# print ( count", -0.029509521113427705], ["( counts", -0.029592888862969464], ["#NEWLINE# for l", -0.02961473201687432], ["== t", -0.029703962869799674], ["26 #NEWLINE#", -0.02977644555242766], ["( w )", -0.029824943529162762], ["( h ,", -0.029842816694769896], ["0 <=", -0.029859389406607647], ["if p", -0.029947251081932393], [", 0 ,", -0.030090150195999806], ["#NEWLINE# x2 ,", -0.03013294438099228], ["#NEWLINE# x2 , y2", -0.03013294438099228], ["print ( s", -0.030140468563968445], ["<= 0 :", -0.030175982567543152], ["m +", -0.030240700169520972], ["if i >=", -0.030265936605773272], ["i in a :", -0.03027569824333187], ["if len (", -0.03042274688140794], ["if len", -0.03042274688140794], ["* 3", -0.030431802705110363], ["i ) :", -0.03043192388596465], ["y ) : #INDENT#", -0.030521835286162483], ["0 ] :", -0.03052226891098333], ["if x <", -0.03065886221840273], ["== a [ i", -0.03066725500794048], ["] == a", -0.03069291983693616], ["== a [", -0.03069291983693616], ["] == a [", -0.03069291983693616], ["] == 0 :", -0.030859709226839768], ["#NEWLINE# #NEWLINE#", -0.030863970628175422], ["#NEWLINE# if sum", -0.030911315346521775], ["y1 =", -0.030934620812318854], ["#NEWLINE# for v", -0.03100301361987367], ["1 ] >", -0.03106958480794821], ["n and a", -0.031137151664818032], ["k = 0", -0.031148985257434675], ["- x1", -0.031198910761696817], ["] ) #NEWLINE# for", -0.031207551362684053], ["( s2", -0.03134839717063924], ["( l [", -0.03139038919311234], ["- 1 ] +", -0.031419842101814185], ["] #NEWLINE# dp [", -0.03144662578210217], ["#NEWLINE# a = int", -0.031486391421671034], ["[ tuple", -0.03169082600765368], ["[ tuple (", -0.03169082600765368], ["re .", -0.031845915541237904], ["sum = 0 #NEWLINE#", -0.03203456699125415], ["( a ) #NEWLINE#", -0.03204259136356063], ["in s : #INDENT#", -0.03216170396047175], ["m , a ,", -0.03219049881637655], ["[ 0 ] <", -0.03222055828993766], ["0 ] <", -0.03222055828993766], ["if dp [", -0.03223274341879381], ["( a - b", -0.032237689727532194], ["2 , n +", -0.03224346465196797], ["10 ) :", -0.032286795809757844], ["[ index", -0.0322886968956611], ["1 #NEWLINE# #DEDENT# else", -0.032321114220178436], ["continue #NEWLINE# #DEDENT# if", -0.03233583807111833], ["available", -0.032382866846698166], ["b ) )", -0.03247322229364393], ["( d ) #NEWLINE#", -0.03257269918980658], ["range ( a", -0.032611857887513584], ["<= 0 : #INDENT#", -0.032615570288815086], ["pos -", -0.03264992928223283], ["( x -", -0.0326580578283677], ["return none #NEWLINE#", -0.03271737857040595], ["return none", -0.03271737857040595], ["#INDENT# return a *", -0.032752876592189256], ["if n % i", -0.0327591660242074], ["while a", -0.032872782434975226], ["in a :", -0.03288804036096715], ["== m", -0.03295462733684307], ["#INDENT# if k ==", -0.033018928217068616], ["0 ] =", -0.03305387815039933], ["k , m", -0.0330694964138393], ["b = int", -0.033071181687464396], ["b = int (", -0.033071181687464396], ["[ 1 ] -", -0.033108812959957136], [", 1 :", -0.03312598133026858], ["< y", -0.033158834713877886], ["if x ==", -0.03321721561699043], ["* n #NEWLINE# for", -0.03337656823500684], ["[ 0 ] :", -0.03355575754094018], ["i ] +=", -0.03365794458229664], ["#NEWLINE# print ( max", -0.0338326864155115], ["else : #INDENT# x", -0.03387046549659061], ["- 2 ) :", -0.033913008051552986], ["b , c =", -0.033928640305056657], ["n % i", -0.0339297046422768], [", r =", -0.03393888244841832], ["n - 1 ,", -0.03394823676470868], ["mod )", -0.03398904955242584], ["( m + 1", -0.03400100204426657], ["bfs (", -0.034076283186522296], ["0 ] [ 0", -0.034118100113771706], ["if n >", -0.03419493637589104], ["- i - 1", -0.03419711817080186], ["#NEWLINE# if n", -0.034225440820314465], ["k ] #NEWLINE#", -0.034325439728904165], ["( z", -0.034350128214207874], ["'1' :", -0.034352256874360367], ["0 ] : #INDENT#", -0.03436586712829207], ["#INDENT# x1", -0.03455132343789261], [": #INDENT# x1", -0.03455132343789261], ["<= k :", -0.03455182592836938], ["or not", -0.03459019232662993], [": #INDENT# i", -0.034633269205923536], [") : #INDENT# self", -0.03477619888304835], ["- y )", -0.035052913872423014], ["0 for i in", -0.035053568937196064], ["0 for i", -0.035053568937196064], ["r :", -0.03515145253182748], ["- 2 ]", -0.035218148628164976], ["s ) #NEWLINE# #DEDENT#", -0.035458439347096776], ["4 )", -0.035554058195985894], ["h = list (", -0.035614741329341816], ["h = list", -0.035614741329341816], ["p = [", -0.035634956860101735], ["<= k : #INDENT#", -0.03587833462946722], [") ] for", -0.03600550531752884], ["return none #NEWLINE# #DEDENT#", -0.03603808389916675], ["#NEWLINE# for k in", -0.03611259815750404], ["( i + 1", -0.03612100198153092], ["and b", -0.03612253331831783], ["#INDENT# dp [ j", -0.03631365036840088], ["( a + b", -0.03642197395456105], ["a ) :", -0.03662184308650291], ["x **", -0.036638611828284075], ["#INDENT# if t", -0.036670793929034336], ["f +", -0.03672086108528547], ["if i >", -0.03673842049269077], ["copy ( ) #NEWLINE#", -0.03689754914181687], ["max ( ans ,", -0.036920165828195926], [", 0 , 0", -0.03692903519109709], ["f (", -0.03693945303513863], ["c + 1", -0.0369573641639585], ["( f [", -0.036997213896196486], [", w ,", -0.037110165026817], ["round", -0.03711947377072233], [") #NEWLINE# p =", -0.03720437021302053], ["+ 1 <", -0.037237151955108426], ["range ( h )", -0.03746387254838093], ["x2 - x1", -0.037744212430572154], ["- s", -0.037750601503423124], ["#INDENT# if arr", -0.037762931875519185], ["#INDENT# if arr [", -0.037762931875519185], ["d ) #NEWLINE#", -0.03780592621496522], ["h2", -0.03792129168647014], ["end = ' '", -0.03796370810803912], ["end = ' ' )", -0.03796370810803912], [", end = ' '", -0.03796370810803912], ["'0' )", -0.03798291036547396], ["* 10", -0.03799195258899013], [". stdin .", -0.03809435619358444], ["sys . stdin .", -0.03809435619358444], ["] [ 3 ]", -0.03809645461019893], ["0 , 0 ]", -0.03814123475730681], ["] #NEWLINE# dp", -0.038171819972158044], ["4 : #INDENT#", -0.038196806127402304], ["[ -1 ] +", -0.03831593435878474], [", j ) )", -0.03844299031248362], [", m , a", -0.03846023338939175], ["bfs", -0.03847096398646569], ["while i", -0.03849644183193585], ["ans *", -0.03855924873933433], ["] #NEWLINE# for", -0.03864715193884013], ["#NEWLINE# a [ i", -0.03864775240359752], ["#DEDENT# #DEDENT# elif", -0.038753997904105005], ["append ( ( i", -0.03876749172134597], ["range ( 2", -0.03878179785525506], ["' ' .", -0.03878699319195053], ["' ' . join", -0.03878699319195053], ["' ' . join (", -0.03878699319195053], [">= n : #INDENT#", -0.03879380047819443], [">= n :", -0.03879380047819443], ["#NEWLINE# #DEDENT# ans =", -0.03881452308310012], ["#INDENT# ans = max", -0.03884891113248114], ["] + 1 #NEWLINE#", -0.03885457938418499], ["k == 1 :", -0.038857333307037244], ["k == 1", -0.038857333307037244], [": #INDENT# if t", -0.038931925729251575], ["readline ( ) .", -0.03896966343866474], [", q =", -0.039137792980229784], ["i ) #NEWLINE# #DEDENT#", -0.039221516631055456], ["( v ,", -0.03922668048777762], ["#NEWLINE# for v in", -0.039252395640012955], ["heappush", -0.03927189302118928], ["1 ) #NEWLINE# print", -0.039277662435816055], [") ] =", -0.039313738764871556], [", l )", -0.03947487121692356], ["[ -1 ] )", -0.03951079582663877], [") #NEWLINE# for j", -0.03951951473441145], ["1 ] -=", -0.03956265728521826], ["pi", -0.03963241077328523], ["1 <=", -0.03968730130819914], ["#DEDENT# #DEDENT# #DEDENT# else", -0.03975845711332171], ["in a : #INDENT#", -0.0398556333906429], ["in [", -0.03997167036265206], ["[ f", -0.03997930204857899], ["a -=", -0.040000490707344585], ["( x ) #NEWLINE#", -0.040015363388847376], ["= t", -0.040105925952460326], ["bid", -0.04012014844933816], ["s1 [", -0.04015829163255317], ["#DEDENT# p", -0.04018470007195205], [", 4", -0.04028721618742216], ["if p [ i", -0.0403499360332006], ["-1 ] ,", -0.04043612613131268], ["[ i + 1", -0.0405037321729816], ["m >", -0.04055542792082655], ["j ) ) #NEWLINE#", -0.04057300203446039], ["n and a [", -0.04079865939262494], ["< n and a", -0.04079865939262494], ["% 2 != 0", -0.04114112170239728], ["2 != 0", -0.04114112170239728], ["if any", -0.04116346451412103], ["a - b", -0.041295339831616866], ["] in", -0.04131802281834565], [", s =", -0.041359462176167185], [", 3 )", -0.04137579391083317], ["#INDENT# if p", -0.04145253723552446], [": #INDENT# if p", -0.04145253723552446], [") % mod", -0.0414600338421336], ["fact", -0.041490294828351586], ["a [ i +", -0.04153733406177835], ["i ] %", -0.04161708398334251], ["[ i ] %", -0.04161708398334251], [", q", -0.041619825971543484], ["m , s", -0.04167915857694781], [", m , s", -0.04167915857694781], ["10 ) : #INDENT#", -0.041732467719348486], [": ] #NEWLINE#", -0.041745123709043666], ["( d -", -0.04182952832938453], ["// 2 -", -0.0418303093698135], ["2 !=", -0.04187860927350143], ["% 2 !=", -0.04187860927350143], ["x ]", -0.04192231439886598], ["in zip (", -0.042045940822288234], ["in zip", -0.042045940822288234], ["s ) ) :", -0.04204721335903476], ["j +=", -0.04206871831661912], ["[ 1", -0.04219204549911971], ["( '' .", -0.04224253618571953], ["( '' . join", -0.04224253618571953], ["set ( )", -0.04251509137620043], ["i ] += 1", -0.04265588731429978], ["] , left [", -0.04273895755862507], ["0 ] , left", -0.04273895755862507], [", left [", -0.04273895755862507], ["] , down", -0.04273895755862507], ["] , down [", -0.04273895755862507], ["] , left", -0.04273895755862507], ["i ) : #INDENT#", -0.04282397655329629], ["#NEWLINE# for x in", -0.042937029326547985], ["0 ] #NEWLINE# for", -0.0429451380745246], ["] #NEWLINE# def", -0.04309158600988838], ["k + 1 )", -0.04314544612604225], [", i )", -0.04318512956973287], ["9 )", -0.043304944130895584], ["if v", -0.04340694640763576], ["] + 1 :", -0.04343277420730902], ["[ 0 ,", -0.043475711128420615], ["= s", -0.0435780118269333], ["* k #NEWLINE#", -0.043636773221438475], ["1 , k +", -0.0436550531438002], ["#NEWLINE# if d", -0.04381466651206024], ["#NEWLINE# #DEDENT# i", -0.04391329613533954], [": -1 ] #NEWLINE#", -0.04392277699217467], [": #INDENT# if arr", -0.0439804359461381], ["x #NEWLINE# #DEDENT#", -0.04398213863081905], ["l , r =", -0.04403098222237961], [") ) #NEWLINE# arr", -0.04405311238276778], ["0 ] ,", -0.04413701110027614], ["if k == 1", -0.044185470713539704], ["% 3", -0.04421678912027605], ["[ w ]", -0.04425168601215767], ["#NEWLINE# arr [ 3", -0.044301407421206106], ["( x2", -0.044366965197325046], ["#NEWLINE# f =", -0.04452777244355578], ["y1 )", -0.044635945295009694], ["go", -0.044642438437693395], [", -1 )", -0.04472304515052493], ["p *", -0.044741245041264435], ["return a * b", -0.04478043756213228], ["!= 0 )", -0.04486128916525191], [": #INDENT# if len", -0.04492582015584161], ["x == 0", -0.04499217690107966], ["[ x ]", -0.04501068603157815], ["x ==", -0.045116042127229125], ["< n : #INDENT#", -0.045212726466410225], ["mod #NEWLINE# #DEDENT# #DEDENT#", -0.04523087801802683], ["] = (", -0.045365410604385724], ["( 1 )", -0.04554336633916077], ["k + 1 ]", -0.0455518440412188], ["1 ) // 2", -0.04558216451350438], ["#INDENT# if not", -0.0458955128814935], ["= ' ' ) #NEWLINE#", -0.04590984605767692], ["j #NEWLINE#", -0.04598321547653087], ["n for", -0.04598497208260171], ["#NEWLINE# #DEDENT# if x", -0.04600251470896303], ["#NEWLINE# #DEDENT# #DEDENT# ans", -0.04608461638658358], ["and c", -0.04609611825076858], ["] = b", -0.04612856707994694], ["in range ( 2", -0.046210144171386955], ["append ( v )", -0.04628752472380082], ["append ( v", -0.04628752472380082], [". append ( v", -0.04628752472380082], [", down", -0.046300537355177175], ["challengers", -0.046300537355177175], ["sum (", -0.04630538288427511], ["( n - 2", -0.046367965021059034], ["0 ] )", -0.04637569659637034], [") ) ==", -0.04645863656620799], ["for j in", -0.04651089058322323], ["] ) ==", -0.04669731187824456], ["( q", -0.046714689312994974], ["'*'", -0.046822323082374176], ["i ] -=", -0.04683943747524843], ["[ i ] -=", -0.04683943747524843], ["if m", -0.046847965890078405], ["( ) #NEWLINE# t", -0.04686313500372066], ["( s1 )", -0.046873178773882536], ["s1 )", -0.046873178773882536], ["3 == 0 :", -0.04695000876443028], ["word )", -0.047102146133014715], ["< n :", -0.047105225819811296], ["< 0 :", -0.047140985247649], ["b = list (", -0.04722227204043364], ["b = list", -0.04722227204043364], ["4 ,", -0.0472226523875398], ["] * m #NEWLINE#", -0.04739340527456656], ["print ( ' '", -0.04741523565958698], ["print ( ' ' .", -0.04741523565958698], ["i : #INDENT#", -0.047441958877806875], ["m =", -0.04745479613634389], ["#INDENT# ans = 0", -0.04752951148438032], [") ) % mod", -0.04757813159764622], ["* ( m +", -0.04767257306570593], ["0 ) #NEWLINE# #DEDENT#", -0.04772465192207205], [", len (", -0.04783670232380423], ["[ j -", -0.04788576757282825], ["remainder", -0.047963580295763746], ["2 ] #NEWLINE# arr", -0.047993191372973254], ["for l in", -0.048000999319247964], ["l in", -0.048000999319247964], [") ) #NEWLINE# g", -0.048035803988700276], ["copy ( )", -0.04804076129551373], [". copy ( )", -0.04804076129551373], ["#NEWLINE# f [", -0.048270754667266824], ["if dp [ i", -0.048290920084584334], ["] * 2", -0.04832521237909112], ["w [", -0.048377919780902126], ["] - 1", -0.04842298798016363], ["a + b )", -0.04848529832712666], ["- b )", -0.04849953694562787], ["+ 1 ) )", -0.048701632623761155], ["r : #INDENT#", -0.04873256416066963], ["10 ) #NEWLINE#", -0.0488357451706424], [", h ,", -0.048845349170113427], ["#INDENT# if i ==", -0.04891215216457537], ["- 1 ] #NEWLINE#", -0.0491765519821796], ["import re", -0.049201336899053295], ["import re #NEWLINE#", -0.049201336899053295], ["[ f ]", -0.049483644047627465], [") ] #NEWLINE# #DEDENT#", -0.04948676212835801], ["pop ( )", -0.04958644835101442], [". pop ( )", -0.04958644835101442], ["return gcd", -0.0495998899639969], [") : #INDENT# x", -0.049705257613908774], ["k - 1 -", -0.04986211715172927], ["r -", -0.0498897139608006], ["+ b )", -0.049905076575656585], [", g", -0.049995897531407825], ["- 1 -", -0.050076567497497754], ["= s [ :", -0.05016190791508145], ["#INDENT# i =", -0.05017410728863916], ["collections", -0.050276985345041665], ["5 ,", -0.050311978749291816], ["i %", -0.050422206305396414], ["s1 ,", -0.050434663252997114], ["i - 2", -0.05048513270067151], ["> b", -0.05049917344789087], ["a [ -1 ]", -0.05050304324922327], ["a [ -1", -0.05050304324922327], ["p [ i -", -0.050566722969705165], ["nums [", -0.05064155092541296], ["return ( x", -0.05076971393532876], ["check (", -0.05078362604768225], [") #NEWLINE# h", -0.05083558114711752], ["1 ) #NEWLINE# for", -0.05085138706745469], [": #INDENT# b", -0.05095543117118068], ["] ) - 1", -0.05105688932622128], ["] + b", -0.0510850072804858], ["ans = [ ]", -0.05111259692278903], ["ord ( c )", -0.051197035976175226], ["ord ( c", -0.051197035976175226], ["c ) #NEWLINE# #DEDENT#", -0.05127293343408919], ["print ( a ,", -0.05136196324970212], ["] == 1 :", -0.05140702078066485], ["correct", -0.051676070304518235], ["// 3", -0.0519695939916487], [": -1 ] )", -0.052035533885078936], ["#INDENT# a [", -0.05203996176370542], ["] or", -0.05206674998129432], [") #NEWLINE# if sum", -0.052138074383899065], ["] > 0", -0.052217777722395775], ["[ 0 ] ,", -0.0522632268117015], ["= true #NEWLINE# #DEDENT#", -0.05227008208683471], ["re #NEWLINE#", -0.05231894442511581], ["if ( n", -0.05233426295129862], ["new", -0.05237746755537833], ["( x ,", -0.05243078451804779], [", len", -0.05244067030251679], [", j -", -0.0524711875571175], ["#NEWLINE# k -=", -0.05247718213391348], ["n #NEWLINE#", -0.05248647711220224], ["m for", -0.05252153326389518], ["1 if", -0.052654963893486104], ["'d' : #INDENT#", -0.05280652877271899], ["[ 1 : ]", -0.052843470982148755], ["< 0 : #INDENT#", -0.05285997041286892], ["len ( t", -0.05288415218432552], ["len ( t )", -0.05288415218432552], ["] * n #NEWLINE#", -0.05289585585958672], ["s : #INDENT# if", -0.052924785044794954], ["< b", -0.05294013938029396], ["w ) #NEWLINE#", -0.05294126569275475], ["x2 -", -0.05309373065037814], ["] ) == (", -0.053271815031671964], [": #INDENT# a [", -0.05333774397333208], ["h - 1", -0.0533732927139764], ["= a #NEWLINE#", -0.053386510472041286], [", v in", -0.05339788251963909], ["i ] !=", -0.053406502123459085], ["i % 2", -0.05346330860072835], [") #NEWLINE# if d", -0.053556200148558664], [") : #INDENT# a", -0.053688900364805156], ["= n //", -0.05384373792414992], ["1 ] = 0", -0.05385811410107765], ["y #NEWLINE# #DEDENT#", -0.05385932106847828], [": #INDENT# if not", -0.05390436997624885], ["n ==", -0.0542786888942648], ["] ) *", -0.05441392459564734], ["#INDENT# if k", -0.05444347716433076], [") - 1 ,", -0.0545489564359602], ["name )", -0.05456609090052695], ["#NEWLINE# if not", -0.05457100957335635], ["= i #NEWLINE# #DEDENT#", -0.05457834118490671], ["= false #NEWLINE# #DEDENT#", -0.05459669379147303], ["- 1 ) *", -0.05462675495245859], ["* i + 1", -0.05464653696175072], ["#INDENT# b", -0.054650105114576256], ["2 ] )", -0.05482790093546184], ["1 ] <", -0.05498854227971757], ["] = min", -0.054998376099554075], ["] = min (", -0.054998376099554075], ["= max ( a", -0.05512606643469231], ["7 ) )", -0.0551852860281822], ["1 , 2", -0.05521067291631457], ["( 1 ) #NEWLINE#", -0.055220376365575155], ["import itertools #NEWLINE#", -0.055284002978100016], ["itertools #NEWLINE#", -0.055284002978100016], ["import itertools", -0.055284002978100016], ["[ false", -0.05528918034173927], ["= [ [ ]", -0.0553994454243701], ["input ( ) )", -0.05541730536139082], ["3 :", -0.05542163190471081], ["#DEDENT# print ( min", -0.055428934281442716], ["#NEWLINE# start", -0.05547630380446386], ["c ) : #INDENT#", -0.055497725147741796], ["while len (", -0.055633074025273566], ["while len", -0.055633074025273566], [") ] for i", -0.055892488990174724], ["#INDENT# print ( 0", -0.05589902556581781], ["] [ j +", -0.05597012710968525], ["i -=", -0.055973553363587676], ["false", -0.05606298009789023], ["= sum", -0.056230153808629876], ["a - 1 )", -0.05628896244623455], ["( num ) #NEWLINE#", -0.05639132067494709], ["b1 )", -0.05646632947846586], ["[ : -1 ]", -0.05657092812085844], ["[ : -1", -0.05657092812085844], ["p -", -0.056628234366924435], ["#NEWLINE# b", -0.056818709168680315], ["res =", -0.05697770824570174], ["( left [", -0.05698527674483346], ["( down [", -0.05698527674483346], ["previous", -0.05698913424826649], ["p [", -0.056994492658916665], ["* ( n -", -0.057020837425178696], ["( 2 ,", -0.05722960535585642], ["1 ] +", -0.05724332233152797], [". copy (", -0.057352261392856076], [". copy", -0.057352261392856076], ["copy (", -0.057352261392856076], ["#NEWLINE# res = 0", -0.05740274338788166], [") #NEWLINE# s", -0.057476761921865356], ["0.5", -0.05749017807033427], ["[ i ] !=", -0.057525531909509986], ["n == 2", -0.05767305003800748], ["!= 0 and", -0.05772941557148999], ["== k", -0.057792508415160614], ["#DEDENT# if i", -0.05787599646198665], ["6 ]", -0.058098117462560384], ["t = list (", -0.05819161384353551], ["t = list", -0.05819161384353551], ["9 #NEWLINE#", -0.05821778203837715], ["or n", -0.05837140993447256], ["low", -0.058440732056151655], ["2 * a +", -0.05846184195946921], ["] for j", -0.05852822856977741], ["] for j in", -0.05852822856977741], ["x1 , y1 =", -0.05857744539764656], [", y1 =", -0.05857744539764656], ["= [ [", -0.05861103534570846], ["0 : #INDENT# a", -0.05863717325934224], ["* ( k", -0.0587193653657493], ["( a )", -0.05893564422578706], ["a ) : #INDENT#", -0.05901708745530348], ["** 9 + 7", -0.059023743106917534], ["9 + 7", -0.059023743106917534], ["( arr [", -0.05904922886326028], ["arr [ 3", -0.05906854322827477], ["arr [ 3 ]", -0.05906854322827477], ["s #NEWLINE# #DEDENT#", -0.059093790244059405], ["root", -0.059105243066697934], ["[ 1 ] [", -0.05912148598121362], ["w ]", -0.05912310917878999], ["d , e", -0.059199408963622135], [": #INDENT# i =", -0.05923248209394828], ["if n %", -0.05931339967005466], ["k +=", -0.05947335261532571], ["#DEDENT# res", -0.05960867607903872], [", mod", -0.059636480300825745], ["heapq", -0.05970646486635855], [") % mod #NEWLINE#", -0.0598873985620411], ["i + 1 )", -0.060575490702494815], ["#NEWLINE# e", -0.06059199945262665], ["k ] [", -0.06063007296615514], ["x ] =", -0.06074589575223149], ["[ x ] =", -0.06074589575223149], ["[ 1 ]", -0.06076229390301006], ["( ' ' .", -0.06076234261904512], ["( ' ' . join", -0.06076234261904512], [": ] )", -0.06078879059192779], ["in t", -0.060867795472236266], ["if x [", -0.06095539780601862], ["g =", -0.06104177798758859], [", v", -0.06105417253540202], ["b ) :", -0.061075394183242544], ["== 0", -0.061083590294397076], ["sum ( dp", -0.0610901704752624], ["0 and b", -0.061120246972095824], ["j ] ) #NEWLINE#", -0.06115090381307913], [", 1 ,", -0.06116407206724619], ["] + 1 ,", -0.06120386972366014], [") : #INDENT# c", -0.06125635900871645], ["v ) #NEWLINE#", -0.06126862404738052], ["- k )", -0.061270628610176486], ["+ 1 #NEWLINE# #DEDENT#", -0.06141243589169793], ["* i +", -0.061540584550793025], ["( k -", -0.06161279266591361], ["a : #INDENT# if", -0.061641823004141914], ["( sum (", -0.061731785403295915], ["#NEWLINE# #DEDENT# for j", -0.06175502872629866], ["( name )", -0.06191196570881237], ["= [ i", -0.06192777140349729], ["s1 , s2", -0.06193944729401756], ["%", -0.06197204253444033], ["v ,", -0.062183731248714486], ["( w", -0.06227948639359119], ["#NEWLINE# for k", -0.06232226538812225], ["( ( i ,", -0.06254658423786297], ["* n #NEWLINE#", -0.06256056976959087], ["i - 2 ]", -0.06262091336939754], ["[ i - 2", -0.06262091336939754], ["len ( b )", -0.06264253967120102], ["ans = max", -0.06282310945988719], ["ans = max (", -0.06282310945988719], ["n % i ==", -0.06290000711679687], ["'0' :", -0.06294301728138867], ["0 ] [ j", -0.06294902419192881], ["[ pos ]", -0.06307698816433187], ["0 ] * n", -0.06311357496635453], ["4 ]", -0.06331590927773856], ["\"cslnb\"", -0.06335035691715386], ["#NEWLINE# arr =", -0.06351752319157966], ["( b ,", -0.0635545913897304], ["ratings", -0.06361245884877423], ["#NEWLINE# #DEDENT# if i", -0.06374474084948732], ["* b +", -0.06383473870256685], ["[ v ] =", -0.06384648848282015], ["v ] =", -0.06384648848282015], ["while j", -0.0639057965002889], ["6", -0.06401386136680375], ["b : #INDENT# print", -0.06406962459907259], ["pop ( ) #NEWLINE#", -0.06416199783118867], ["y2 -", -0.06422798151019277], ["[ r ]", -0.06425508045850024], [", dp [ i", -0.064288959850772], ["#DEDENT# #DEDENT# for i", -0.06437414926753636], ["a ) #NEWLINE# #DEDENT#", -0.0643957792685348], ["visited [ i", -0.06440645326439433], ["n = map", -0.06444220221958144], ["n = map (", -0.06444220221958144], [", n = map", -0.06444220221958144], ["#INDENT# arr [", -0.06445319810211218], [": #INDENT# arr [", -0.06445319810211218], ["[ i +", -0.0645159027634327], ["o1", -0.06452031919845425], ["[ 1 ] +", -0.06454590344164014], ["[ c", -0.06455025725894238], ["1000", -0.06462490517951053], ["j ] : #INDENT#", -0.06465000626955068], ["- y", -0.06468493286274611], ["y in", -0.06469999598249807], ["#NEWLINE# continue", -0.06482804209201934], ["h =", -0.06488500186959865], [", 2", -0.06497947776262043], ["c [", -0.06507311543265691], ["( 10", -0.06507866758381022], ["] ,", -0.06517037272269868], ["range ( l", -0.0652401021441512], ["0 ] = 0", -0.0653299873478655], ["* a", -0.06543803710190639], ["true", -0.06546908604933267], ["#NEWLINE# for p", -0.06547086226223485], ["a +", -0.06552458870399909], ["fac", -0.0655338175530737], ["// 2 +", -0.06555558729385397], ["( g", -0.06576783713685115], [") ) ]", -0.06581823725356843], ["( j +", -0.06583858956461741], ["a :", -0.0659368814456737], ["copy", -0.06595310942607456], ["d #NEWLINE# #DEDENT#", -0.06599123158153013], ["#NEWLINE# return", -0.06606227197076546], ["v #NEWLINE#", -0.06607274802377198], ["ca", -0.06611089938134466], ["* t", -0.0662102837127022], ["heappop", -0.06641165648949446], ["0 #NEWLINE#", -0.06648938115846299], ["!=", -0.06657376818741637], ["#NEWLINE# if m", -0.06662232952750183], ["( k ) #NEWLINE#", -0.06666147171491602], ["&", -0.06673737011601351], ["9 +", -0.06678167430931113], ["== '+'", -0.06681309808055241], ["= ( n -", -0.06686046734118024], ["b =", -0.06691859026998173], ["* n )", -0.06696706353980099], ["x ) #NEWLINE#", -0.0671838116775527], ["[ k ] [", -0.06723982954715345], ["bisect", -0.06729334999223203], [", 2 )", -0.06738391384242969], [": #INDENT# f [", -0.06743458233497487], ["#INDENT# f [", -0.06743458233497487], ["<= a +", -0.06745151257243757], ["<= a + b", -0.06745151257243757], ["k //", -0.06745700041780882], ["( m - 1", -0.06749910194618645], ["( pos", -0.06769624648092956], ["#NEWLINE# #DEDENT# if k", -0.0677255951239142], ["n // i", -0.06775739546911852], ["k in", -0.06783297871282859], ["#INDENT# a [ i", -0.06784497643874339], ["] ] #NEWLINE# #DEDENT#", -0.06785521338231444], ["none", -0.06787895133732566], ["2 ] =", -0.06791904561539228], ["+ 2 *", -0.06795754112749344], ["dfs", -0.06797828596098483], ["= max ( ans", -0.06799363937591754], ["+ y", -0.06807984986304931], ["b , h ,", -0.0681226642029631], ["b , h", -0.0681226642029631], [", b , h", -0.0681226642029631], ["a : #INDENT#", -0.06815373809049316], ["- c", -0.06826984160353407], ["8 ,", -0.06835100268777576], ["[ 2 ] #NEWLINE#", -0.0683772695778749], ["< a", -0.06839939060617617], ["w +", -0.06858893023104606], ["print ( n )", -0.06859584721655533], ["= self .", -0.0687303766207995], ["= self", -0.0687303766207995], ["#INDENT# f [ i", -0.06874253900401299], ["#NEWLINE# continue #NEWLINE#", -0.06878775410772263], ["( v ) #NEWLINE#", -0.06884229053890406], ["[ [ [", -0.06887371302981929], ["] > 0 :", -0.06891355617359493], ["7 ) ) #NEWLINE#", -0.0689674870022197], [">= n", -0.06900623019940325], ["#NEWLINE# i", -0.06902180219656813], ["% 2 :", -0.06904339077179107], ["'>'", -0.06907584741626108], ["'<'", -0.06907584741626108], ["= [ (", -0.06908557369816012], ["and s", -0.06922477629506797], ["#NEWLINE# #DEDENT# a", -0.06928830817161376], ["#NEWLINE# #DEDENT# elif n", -0.0693409558065775], ["in range ( b", -0.06934913477572191], ["== 2 :", -0.06945084553331253], ["] #NEWLINE# arr", -0.06948780435115852], ["] ) + 1", -0.06952352665762641], ["^=", -0.06958458031060241], ["* n +", -0.06960793989331185], ["arr =", -0.06988600366673743], ["n % 2", -0.0699363719473178], ["write", -0.06994490468990834], ["in x", -0.07011266849699103], ["ceil", -0.07048488660191148], ["j in", -0.0705818231262507], ["] [ j -", -0.07063430136192081], [") ] )", -0.07067323505807693], ["/ 2", -0.07070040271206172], ["] [ j", -0.07076328699395608], [") #NEWLINE# if (", -0.07087570958772949], ["total =", -0.07088551782592273], ["> 1", -0.07090777574375898], ["2 ] :", -0.07104372992596567], ["] #NEWLINE# #DEDENT# for", -0.07120244484518956], ["left [ i", -0.07123159593104177], ["down [ i", -0.07123159593104177], ["left [ i ]", -0.07123159593104177], ["down [ i ]", -0.07123159593104177], ["n #NEWLINE# for", -0.0713429576483896], ["- ( a", -0.07134352248858182], ["#INDENT# for i in", -0.07139843047803941], ["format (", -0.07141462601926704], ["#NEWLINE# for u", -0.07143634742896028], ["second", -0.07144700023874011], ["if d", -0.07146531151600263], ["#NEWLINE# t = int", -0.07149716528609905], ["] [ 1", -0.07149858966625376], ["[ 0 for", -0.07155297791859343], ["q *", -0.0716485100034221], ["w -", -0.07170406504591686], ["#NEWLINE# if c", -0.07174213384156226], ["1 , k", -0.07198883133200601], ["a2", -0.07201975533345437], ["keys ( )", -0.07211099064554867], ["keys (", -0.07211099064554867], [". keys", -0.07211099064554867], ["keys", -0.07211099064554867], [". keys ( )", -0.07211099064554867], [". keys (", -0.07211099064554867], ["% 2 : #INDENT#", -0.07224331203649603], ["y ]", -0.07226871351303364], ["i >", -0.07231500566909985], ["( c ) #NEWLINE#", -0.07270450283415401], ["if i in", -0.07283512012401631], ["1 : #INDENT# ans", -0.07287099448529565], ["[ m", -0.07299596000536336], [", s2", -0.0730050896383983], ["#DEDENT# c", -0.07304877544457075], ["t [ i ]", -0.0730905358593534], [") - 1 #NEWLINE#", -0.07310798943810516], ["#NEWLINE# #DEDENT# #DEDENT# def", -0.07322839274749385], ["[ (", -0.07332157386157383], ["k - 1", -0.07343353116028574], ["b ]", -0.07356714452390929], ["#NEWLINE# mod", -0.07365967550012613], ["#NEWLINE# mod =", -0.07365967550012613], ["p #NEWLINE# #DEDENT#", -0.07375722619915251], ["( y2", -0.07379966753847295], ["2 * (", -0.07385842483051322], ["y in range (", -0.0738733275517585], ["for y in range", -0.0738733275517585], ["y in range", -0.0738733275517585], ["%= mod", -0.07399255839628198], ["%= mod #NEWLINE#", -0.07399255839628198], ["( 3 )", -0.07404090883153648], ["#INDENT# for i", -0.07404450314362782], ["0 : #INDENT# n", -0.07408190873130525], ["#NEWLINE# b =", -0.07408526022378545], ["( 3", -0.0742337250953858], [". g [", -0.0742763298546285], ["self . g [", -0.0742763298546285], ["1 #NEWLINE# continue #NEWLINE#", -0.07455455867724466], ["1 #NEWLINE# continue", -0.07455455867724466], ["#NEWLINE# h =", -0.0746686196259682], ["#INDENT# g", -0.07467726041958446], [". count (", -0.07468421646115521], [". count", -0.07468421646115521], ["2 * i +", -0.0747285803871887], ["find (", -0.07473688477985631], ["( x [", -0.07478333358766404], ["t +=", -0.07491445556374311], ["* a #NEWLINE#", -0.07498740577770883], ["] [ v", -0.07500640629880688], ["s ]", -0.07501335440269982], ["<= n", -0.07503457704338763], [") : #INDENT# sum", -0.07506222089323754], ["s ) +", -0.0751270359457316], ["#NEWLINE# i =", -0.07516706667561426], ["1 : #INDENT#", -0.07518802891391196], ["] <= w [", -0.07525774000403015], ["r_out [", -0.07525774000403015], ["<= w [", -0.07525774000403015], ["] <= w", -0.07525774000403015], ["g [", -0.07529665447602772], ["[ s ]", -0.07542495116164548], ["( ''", -0.07559949620864818], ["( m ,", -0.07567484391677873], ["j =", -0.07569136484686323], ["== 2 : #INDENT#", -0.07574152291902536], ["w ,", -0.07581603121719817], ["and x2", -0.075876604903066], ["( down", -0.0758818670943758], ["= false #NEWLINE# break", -0.0758991053464552], ["] [ v ]", -0.07606254106813788], ["ans [ i", -0.07611575165755073], [". remove", -0.07612278476113292], ["( dp", -0.07623758697784727], ["k : #INDENT#", -0.07626411335885927], ["false #NEWLINE# for", -0.07630794763982054], ["> n :", -0.07633421075011282], [") + 1 )", -0.07639204979503783], ["#NEWLINE# dfs", -0.07654826499333073], ["#NEWLINE# dfs (", -0.07654826499333073], ["#NEWLINE# #DEDENT# if not", -0.07662153501840714], [") #NEWLINE# m =", -0.07684228533668312], ["** 9 +", -0.07695457371054851], ["10 ** 9 +", -0.07695457371054851], ["answer =", -0.07697078987564461], ["arr [ 1", -0.07752746298711068], ["arr [ 1 ]", -0.07752746298711068], ["r = 0", -0.07754686565492826], [") : #INDENT#", -0.07762587137463105], ["#NEWLINE# if a", -0.07769188823304855], ["( 2 , n", -0.07772993659282416], ["i ] =", -0.07777087733141576], ["if w", -0.07780237145280688], ["x = int", -0.0778052394341615], ["x = int (", -0.0778052394341615], ["sum +=", -0.07783483249707951], [") #NEWLINE# if", -0.07785918822087168], ["#NEWLINE# #DEDENT# #DEDENT# if", -0.07787124593207528], ["] #NEWLINE# #DEDENT# print", -0.07790564168618276], ["[ ] for", -0.07790885143508404], ["2 ] : #INDENT#", -0.0779274289985728], [". add", -0.07804184360631061], ["#NEWLINE# for a", -0.07805094959362219], ["( a +", -0.07805991674221792], ["[ 0 ] #NEWLINE#", -0.07813898591412667], ["a - 1", -0.07816528304943582], ["y2 - y1", -0.07817972033809543], ["<= a", -0.07827560642612931], ["#NEWLINE# #DEDENT# def", -0.0783780850621449], [") #NEWLINE# dp =", -0.07839101895175299], ["[ w", -0.07843650325756339], ["rl <=", -0.07869343133451054], ["[ h", -0.07872250435646805], ["l :", -0.07874986380381623], [") : #INDENT# l", -0.07878634781518817], ["graph .", -0.07891621978193154], ["k += 1 #NEWLINE#", -0.07903003609503831], ["k += 1", -0.07903003609503831], ["h ) #NEWLINE#", -0.07912052850769632], ["i + 1 ]", -0.07925853108501668], ["in range ( l", -0.07956520642470644], ["( n //", -0.0795954283937792], ["( 1 , k", -0.07962574932195178], ["-1 ] )", -0.07969355008742025], ["] and a", -0.07987449934264551], ["] and a [", -0.07987449934264551], [": #INDENT# if k", -0.07991207857481344], ["if f", -0.07995099922431129], [". remove (", -0.07998452175447403], ["remove (", -0.07998452175447403], ["#NEWLINE# print ( ans", -0.08013415814890261], ["] = i #NEWLINE#", -0.08014801820351133], [") #NEWLINE# if x", -0.08031644613022391], ["#NEWLINE# continue #NEWLINE# #DEDENT#", -0.08033509673594025], ["( y2 -", -0.0804449830587977], ["dp )", -0.08045933517408665], ["** 3", -0.08057860312252406], ["[ 2 ] =", -0.08060615050787807], ["#DEDENT# #DEDENT# #DEDENT# #DEDENT#", -0.08064350575239941], [". add (", -0.0807434628034341], ["#NEWLINE# #DEDENT# c", -0.08080391367226848], ["c = [", -0.08081672120804982], ["0 ] ) -", -0.08083806060489357], [", n -", -0.08093142632590591], ["k : #INDENT# print", -0.08097649739322851], [". add ( (", -0.08101059744625404], ["add ( (", -0.08101059744625404], ["k <=", -0.08112219371365477], ["odd ,", -0.08122803268055423], ["i ] [ 2", -0.08124171148784778], ["dfs (", -0.08131406431731632], ["mm", -0.08139115449073035], ["#INDENT# if b", -0.08141275227425826], ["[ y", -0.08143262599573205], [": #INDENT# if b", -0.08156941997302465], ["y -", -0.08164658064532125], ["// i", -0.08165308405983095], ["#INDENT# v", -0.08170601092845015], ["( s ) +", -0.08174768724322001], ["s :", -0.08180960950590528], ["true #NEWLINE#", -0.08185713560444355], ["#DEDENT# #DEDENT# ans =", -0.08199120829093738], ["re", -0.08200627773076614], ["range ( x", -0.08209210635019774], ["in range ( x", -0.08209210635019774], ["1 ] #NEWLINE# for", -0.08209626283990364], [". stdin", -0.08223017977714979], ["sys . stdin", -0.08223017977714979], ["#NEWLINE# l = list", -0.08235591317536124], ["+= 2 #NEWLINE#", -0.0825754676583681], ["k =", -0.08267974700109076], ["[ 1 ] #NEWLINE#", -0.08278433183355505], ["+ 1 #NEWLINE#", -0.08279302845466019], ["[ l ]", -0.08283907994863836], ["<= w", -0.0828682038596906], ["d -", -0.08289961187387743], ["true #NEWLINE# for", -0.08290788402290801], ["= true #NEWLINE# for", -0.08290788402290801], ["'d'", -0.08296222321215217], ["pos ]", -0.08297919407419231], ["= false #NEWLINE# for", -0.08305828274543688], ["append ( [", -0.08323772463289192], [". append ( [", -0.08323772463289192], ["a == b", -0.08328488473204186], ["+ 1 ]", -0.08330366146215468], [") #NEWLINE# arr =", -0.08336770351102961], [") #NEWLINE# #DEDENT# ans", -0.08348311215256511], ["0 ] #NEWLINE#", -0.08353700258927343], ["[ : :", -0.08396614952183763], ["for k in", -0.08411349447800584], ["b , a", -0.08412108356221486], [". stdin . readline", -0.0841656990551248], ["0 #NEWLINE# #DEDENT# else", -0.08418048601200724], ["#DEDENT# s =", -0.08433021485782029], ["= -", -0.08436206282048044], ["m + 1", -0.08444132069263002], ["1 ) ] #NEWLINE#", -0.08446946062975591], ["n //=", -0.08448559153017973], ["r_out", -0.0846649575045339], ["#NEWLINE# f", -0.08468058785812332], ["] #NEWLINE# arr [", -0.08491103089064501], ["+ x", -0.0849357833580364], [": #INDENT# g", -0.08494556668535604], ["main ( ) #NEWLINE#", -0.08495823916445167], ["np .", -0.08496418706497848], [", n //", -0.08497304476352484], ["c +=", -0.08505636288075248], ["g ,", -0.08507166768369111], ["i ] = 1", -0.08508054624009402], ["[ y ]", -0.0851738301542158], ["> 0 ) :", -0.08521059420882715], [") #NEWLINE# b", -0.08521390026376417], ["j = 0", -0.0852936709420457], [") + 1 #NEWLINE#", -0.08530511416510984], [": #INDENT# v", -0.085354809559937], ["] * n", -0.08554512766198108], ["#INDENT# j =", -0.0857160882648573], [", 8 ,", -0.08587214523635765], ["* h", -0.08598220220500714], ["minus", -0.08601569483811804], ["n : #INDENT# print", -0.08617293871516656], ["[ -1 ] [", -0.08622785856052488], ["> 0 )", -0.08626526877284206], ["] ] #NEWLINE#", -0.0862862770289204], [") ] ) #NEWLINE#", -0.08628730397507614], ["false #NEWLINE# break #NEWLINE#", -0.08633764142205694], ["false #NEWLINE# break", -0.08633764142205694], ["[ [ ] for", -0.08642024978638811], ["] ) #NEWLINE# #DEDENT#", -0.08665857266518946], ["-1 ] +", -0.08667776771056308], ["pointlist", -0.0866917551782492], ["sofar", -0.0866917551782492], ["( d ,", -0.08672806637419343], ["] #NEWLINE# #DEDENT# def", -0.08681865167232286], ["] ) ) )", -0.08683380887081552], ["#DEDENT# a", -0.08711059062653663], ["pos =", -0.0871474775797087], ["#INDENT# ans +=", -0.08720769617061333], ["[ [", -0.08733706380539484], ["zip", -0.08745017367426383], ["zip (", -0.08745017367426383], ["1 ] ) )", -0.08746705555367516], ["] ] [", -0.08749285539581522], ["len ( a", -0.08750365757573533], ["% p", -0.08758334921241767], ["pointer", -0.08759815335172773], ["= c", -0.08776857354166229], ["#NEWLINE# s = [", -0.08795575074229398], ["#NEWLINE# x1", -0.08799615521845983], [", x ) )", -0.08802937524696786], ["10 #NEWLINE#", -0.08804903758852269], ["* 6", -0.08815206100127887], ["[ i ] =", -0.0881732257812726], ["1 , n -", -0.08818807981176242], ["1 : #INDENT# print", -0.08823932300985633], [") : print", -0.0882896602265897], ["max ( ans", -0.0883062209181407], ["c )", -0.08844019732785134], ["for u", -0.08846340310850376], ["#DEDENT# if k", -0.08850448968094837], ["min ( l", -0.08850765102165756], ["[ 0 ]", -0.08850787205590614], ["k :", -0.08856237789404682], ["if c ==", -0.08857500820762138], [") > 0", -0.08873437053160084], ["f ]", -0.08880429159410529], ["h , w", -0.08888287493456852], ["* k )", -0.0889057393132559], ["min ( n", -0.08892734148897795], ["cap", -0.08894000479284864], ["- r", -0.08894660762204386], ["1 : #INDENT# if", -0.08917680988786142], ["y ) ) #NEWLINE#", -0.08925748951258487], ["x = x", -0.08927406863313919], ["len ( arr", -0.08930880966100181], ["len ( arr )", -0.08930880966100181], ["#NEWLINE# #DEDENT# res", -0.08931393312263852], ["str ,", -0.08933397062827914], ["map ( str ,", -0.08933397062827914], ["map ( str", -0.08933397062827914], ["( str ,", -0.08933397062827914], [">= 0 : #INDENT#", -0.08940220648218745], [">= 0 :", -0.08940220648218745], ["if ( x", -0.08945154415707751], ["q =", -0.08951736812499045], ["for y", -0.08953671684773154], ["n //", -0.08964598210682666], ["b !=", -0.08981901762380283], ["% mod #NEWLINE# #DEDENT#", -0.08997731732349776], ["] .", -0.09006786913580261], ["[ ob", -0.09015493698848837], ["[ ow", -0.09015493698848837], ["] [ ow", -0.09015493698848837], ["] [ ob", -0.09015493698848837], ["* b ) #NEWLINE#", -0.09026013291832632], ["] , b [", -0.09037664236415649], ["( ) #NEWLINE# b", -0.09041835617324834], ["== b :", -0.09072457055841189], ["ord", -0.09075113320715823], ["else : #INDENT# ans", -0.09087976276212187], ["u in", -0.091008239863908], ["( r", -0.09116825460201458], ["> n : #INDENT#", -0.09118431241383108], ["p ==", -0.09125910098390058], ["#INDENT# return int (", -0.09127471168293357], ["#INDENT# return int", -0.09127471168293357], [": #INDENT# return int", -0.09127471168293357], ["if arr", -0.09137521199301697], ["if arr [", -0.09137521199301697], ["0 ] ) #NEWLINE#", -0.09142244114388902], [") #NEWLINE# t", -0.0914478613287296], ["+ 1 ) #NEWLINE#", -0.09145349763409663], [", 0 )", -0.09147946770155224], ["#NEWLINE# #DEDENT# #DEDENT# for", -0.09153567380945235], [") == 3", -0.09156298358866458], ["( i ) #NEWLINE#", -0.09186926787296504], ["== i", -0.09188965189678162], ["#NEWLINE# p =", -0.09197328692351661], ["#NEWLINE# g =", -0.09205922201910634], ["in b", -0.09209618465263986], ["n ) -", -0.09215177246066329], ["#NEWLINE# if k", -0.09219564465536108], ["xv", -0.09231475389675994], ["'d' :", -0.09239263538902986], ["+ 1 ] #NEWLINE#", -0.09243497321063165], [") #NEWLINE# arr", -0.09248516210550545], ["#INDENT# l =", -0.09251205827262243], [": #INDENT# l =", -0.09251205827262243], ["] - 1 #NEWLINE#", -0.09254917579297847], ["+ b", -0.09255760042895697], ["#NEWLINE# t", -0.09265383821844911], [". pop", -0.09268384921633276], ["pop (", -0.09268384921633276], [". pop (", -0.09268384921633276], ["2 , n", -0.0927783578257025], ["#DEDENT# #DEDENT# def", -0.09296538728027566], ["( name", -0.09299208844016203], ["and s [", -0.09337128282467651], ["6 ,", -0.09343306649935533], ["= s1", -0.0934603188968971], [". join ( map", -0.09351352595346595], ["join ( map", -0.09351352595346595], ["join ( map (", -0.09351352595346595], ["( b ) :", -0.09355787071460525], ["[ pos", -0.09360686871061634], [": #INDENT# k =", -0.09361271618528659], ["state", -0.09372798139573255], [") #NEWLINE# k =", -0.09376315779629442], ["( b ) )", -0.09382294154348186], ["1 ] == 1", -0.09396155520350373], ["b1 [", -0.09407217500503767], ["b2 [", -0.09407217500503767], ["in s :", -0.09409114058475923], ["rest", -0.09412793785736488], ["reverse = true )", -0.0941485024990233], ["= true )", -0.0941485024990233], ["permutations", -0.09423795725631219], [") #NEWLINE# n ,", -0.09430993345261471], ["n ) ] #NEWLINE#", -0.09448422502135523], ["- x", -0.09456250810706575], ["i ] .", -0.09459282333751048], ["[ i ] .", -0.09459282333751048], ["is_prime (", -0.09484575118609018], ["t [ i", -0.09512895186225531], ["true )", -0.09521740106361512], ["pop", -0.09526337162682127], [") // 2", -0.09527898590971029], ["b ) : #INDENT#", -0.09532140786449059], ["- k +", -0.09562498331855777], ["t #NEWLINE# #DEDENT#", -0.09597522914367496], ["== b : #INDENT#", -0.09616758809937725], ["for y in", -0.0962096163327796], ["#NEWLINE# k = int", -0.09625025423987722], ["( k )", -0.09643058479749726], ["'0'", -0.0965682769861117], ["#NEWLINE# x2", -0.09657949695937486], ["+= 2", -0.09660393125648929], ["<= n :", -0.09660646992788383], ["n ) #NEWLINE# #DEDENT#", -0.09700083116777596], ["= f", -0.09701398921679343], ["#NEWLINE# ans = [", -0.09707056885223686], ["b .", -0.09721835340164596], ["-= 1 #NEWLINE# if", -0.09772944654975926], ["] -=", -0.0977646417688092], ["vy", -0.09777125255037601], ["vx", -0.09777125255037601], ["s = [", -0.0978006000856039], [") #NEWLINE# b =", -0.09793997197094288], [", 3", -0.09806696501760197], [">= a [", -0.09808357869814621], ["for k", -0.09809830370021196], ["k -=", -0.09815507853731871], [") > 0 :", -0.09822987760791875], ["b . append (", -0.0982308387832755], ["b . append", -0.0982308387832755], ["- 1 ) //", -0.09832914323357965], ["[ 3 ]", -0.09837649872993699], [", h )", -0.0983834332326613], ["( h", -0.09846037702777809], [": #INDENT# arr", -0.09850919712527367], ["#INDENT# arr", -0.09850919712527367], ["] . append (", -0.09870783056814923], ["] . append", -0.09870783056814923], ["j ] [ 0", -0.09873794117354699], ["] #NEWLINE# if", -0.09880959163016237], ["( abs", -0.09892467723600519], ["print ( answer", -0.09906524097122058], ["str ( x )", -0.09914686428941258], ["= arr [", -0.09917451718970285], [", n =", -0.09918965706617303], ["( i ) )", -0.09919720972683416], ["if b [", -0.09923590545529536], ["[ s", -0.09924078431880158], ["// 2 ) :", -0.0993122986027294], ["xp", -0.09932227055805715], ["#NEWLINE# if n %", -0.09937885500014033], [": #INDENT# for i", -0.09941285158430764], [", i ) )", -0.09950317321743242], ["( self ,", -0.09954339311556931], ["self ,", -0.09954339311556931], ["1 ] [ j", -0.09959849167256223], ["for u in", -0.09975068131959025], ["return int", -0.09981222734214827], ["return int (", -0.09981222734214827], ["h , m", -0.1000349897992111], ["enumerate (", -0.10011771710792484], ["enumerate", -0.10011771710792484], ["k #NEWLINE# if", -0.10013725989199773], ["[ : : -1", -0.10022504693969263], [": : -1 ]", -0.10022504693969263], [": : -1", -0.10022504693969263], ["% i", -0.10035046888816368], ["i ) ]", -0.10035842036585428], ["' ' ) #NEWLINE#", -0.10036472320370791], ["] #NEWLINE# print", -0.10049607087545549], [", mod )", -0.10053352796213434], ["( -", -0.10057741800549622], ["b3", -0.10061995700441602], ["1 ) #NEWLINE# #DEDENT#", -0.10072092739511154], ["2 ] #NEWLINE#", -0.10077018243217126], ["path", -0.10089874507273915], [": #INDENT# ans +=", -0.10091553215024722], [">= k", -0.10095416202397453], ["#DEDENT# elif n", -0.10106978962325124], ["elif n", -0.10106978962325124], ["gcd #NEWLINE#", -0.10113316343198629], ["] [ -1", -0.10122575398954468], ["] [ -1 ]", -0.10122575398954468], ["#DEDENT# #DEDENT# #DEDENT# if", -0.10137270291620493], ["m1", -0.10138534560498967], ["sums", -0.10152978512609524], ["str ( x", -0.10165498280793446], ["'-'", -0.10169037359085085], ["min ( n ,", -0.1017646995203055], ["#INDENT# total", -0.10190595415348365], ["s4", -0.10192155137759375], ["[ -1 ] *", -0.10204042399459441], ["count (", -0.10236324860960895], ["= b [", -0.10260227435073464], ["it [", -0.10262806454353127], ["p in", -0.10268358093350308], [", b [ i", -0.10271588974902897], ["if r", -0.10275513281369511], ["#DEDENT# #DEDENT# ans", -0.1028115266048183], ["1 for", -0.10281665430785203], ["] ) #NEWLINE# if", -0.10286791680773018], ["( dp )", -0.10289774442895713], [", output", -0.10305892392667301], ["2 * i", -0.10308899583096709], ["<= r", -0.10326938434368751], ["( abs (", -0.10327192122058225], [", 7", -0.10328240207535215], ["i ] :", -0.103320743912446], ["arr [ 2 ]", -0.10336995064948092], ["arr [ 2", -0.10336995064948092], ["[ : ]", -0.10338680318424143], ["#DEDENT# ans =", -0.10379206450583432], ["#INDENT# t =", -0.10388172721404144], [": #INDENT# t =", -0.10388172721404144], ["c ) #NEWLINE#", -0.10397897340929575], ["in enumerate", -0.1040064283433055], ["in enumerate (", -0.1040064283433055], ["ob", -0.10402492729440967], ["ow", -0.10402492729440967], ["2 -", -0.10407982796425842], ["** n", -0.10415564429778626], ["1 ]", -0.10430068571884706], ["print ( sum (", -0.10438391242691435], ["if a [ i", -0.10439377200060307], ["dp [ i +", -0.10441465417488993], ["] *", -0.1044221993025822], ["1 : ]", -0.10450685173539834], ["v ) )", -0.10453482242747676], ["int ( a", -0.1045645482997941], ["main ( ) :", -0.10460110771706513], ["def main ( )", -0.10460110771706513], ["= pow", -0.10460822455063248], ["= pow (", -0.10460822455063248], ["item", -0.1046554124615117], ["= [ 0 ]", -0.10466333236194335], ["] !=", -0.10477895570645558], [") : #INDENT# s", -0.10498453510509882], ["print ( sum", -0.10501005572292431], ["i ) #NEWLINE#", -0.10507461499060494], ["7 #NEWLINE#", -0.10515754772701712], ["def main", -0.10526589200404043], ["def main (", -0.10526589200404043], ["-1 ] [", -0.10532594175926713], [": #INDENT# total", -0.10537147180931837], ["] += 1", -0.10541005916568823], ["z =", -0.10572855362496188], ["c in", -0.10577179750374308], ["3 : #INDENT#", -0.10584213616035693], ["[ u", -0.10605529902457711], ["yv", -0.10624014191921312], ["+ 3", -0.10666827156236544], ["#NEWLINE# m =", -0.10670679745100702], ["( 0 )", -0.10677358514257662], ["d ,", -0.10680118459672971], ["7 ,", -0.10685252751532039], ["= 0 #NEWLINE# #DEDENT#", -0.10686381987281009], ["2 ] +", -0.10696793079875838], ["#NEWLINE# for a in", -0.10703173362121468], ["#NEWLINE# n = int", -0.10709714751485497], ["k *", -0.10712914207521125], ["y )", -0.10719679652901729], ["hb", -0.10719740738840303], ["hr", -0.10719740738840303], ["graph ,", -0.1072100529800097], ["1 ] += 1", -0.10721159545440799], ["( map ( str", -0.10721287302110132], ["m - 1", -0.10730794718070313], ["t = [", -0.10737292471773531], ["pow ( 2 ,", -0.10741565269175307], ["pow ( 2", -0.10741565269175307], ["i ] *", -0.107812464075237], ["mod #NEWLINE# #DEDENT#", -0.10783992719336455], ["f [ i ]", -0.10805033391856068], ["a #NEWLINE# #DEDENT#", -0.10824939504237593], ["c ]", -0.10831931190879514], ["= arr", -0.1083193620854928], ["print ( arr", -0.10832370115140874], ["#DEDENT# print ( res", -0.10842884703868351], [", h", -0.10861608833368282], ["1 ) //", -0.10871385578539493], ["( tempi", -0.10913547207919866], [", min (", -0.10914549139538687], ["] : #INDENT#", -0.10919800442217083], ["] [ 1 ]", -0.10930782611021862], ["#NEWLINE# #DEDENT# #DEDENT# else", -0.10938061161955262], [": :", -0.10953774245846695], ["( start", -0.10959971086439545], ["( float", -0.1096285031378432], [") + 1", -0.10964902403674379], ["n #NEWLINE# for i", -0.10972726540331681], [", 0 ) )", -0.10980640838536655], ["] + 1", -0.10990277131920005], ["= j", -0.10992057669288688], ["( int (", -0.11013588674395833], ["] #NEWLINE# a", -0.11016086428178229], [", -", -0.1101868617216539], ["] ]", -0.1103080298485605], ["self . g", -0.1103213108543529], [". g", -0.1103213108543529], ["chr", -0.11036472238059848], ["chr (", -0.11036472238059848], ["or '.xx'", -0.11041501399239323], ["or '.xx' in", -0.11041501399239323], ["or 'xx.' in", -0.11041501399239323], ["or 'x.x'", -0.11041501399239323], ["or 'x.x' in", -0.11041501399239323], ["or 'xx.'", -0.11041501399239323], ["#DEDENT# if len (", -0.11050774559315082], ["#DEDENT# if len", -0.11050774559315082], ["( k", -0.1105482628619838], ["+= d", -0.11056887249043237], ["reverse =", -0.11062085886324849], ["reverse = true", -0.11062085886324849], ["1 ] #NEWLINE# #DEDENT#", -0.11072119669294651], ["elif", -0.11089184942948004], ["] += 1 #NEWLINE#", -0.11093416219520336], ["4 #NEWLINE#", -0.11102363712895745], ["[ [ ]", -0.11112116207986177], ["sum", -0.1111802597051637], ["y1", -0.11140661469207802], ["#NEWLINE# s2", -0.11142579778527478], ["j ] )", -0.1115314627541636], ["[ i ] *", -0.11153329038493565], ["numpy as np", -0.11154154048142323], ["numpy as", -0.11154154048142323], ["import numpy as np", -0.11154154048142323], ["numpy", -0.11154154048142323], ["import numpy", -0.11154154048142323], ["np #NEWLINE#", -0.11154154048142323], ["as np #NEWLINE#", -0.11154154048142323], ["numpy as np #NEWLINE#", -0.11154154048142323], ["as np", -0.11154154048142323], ["import numpy as", -0.11154154048142323], ["s1 =", -0.11189691906186988], ["for a", -0.11190370702970609], ["[ l", -0.11202268442657128], [", xs", -0.11248474132237146], ["( res )", -0.11250266795511565], ["2 ) )", -0.11259718716296455], ["#DEDENT# #DEDENT# for", -0.11266319148980856], ["cntr", -0.11267254833615152], ["cntl", -0.11267254833615152], ["1 ] ==", -0.112745890498049], ["float ,", -0.11279744271785402], ["( float ,", -0.11279744271785402], ["map ( float", -0.11279744271785402], ["map ( float ,", -0.11279744271785402], ["mod #NEWLINE#", -0.11298698195022581], ["( t )", -0.11305847069931639], ["-1 ] *", -0.11321339125988233], ["= r", -0.11337530148135225], [") +", -0.11370704106147123], ["[ 2 ] )", -0.11372536775521122], ["k - 1 ]", -0.11373694186163769], ["wb", -0.11376449994185055], ["#NEWLINE# import sys #NEWLINE#", -0.11382936242035933], ["] ] )", -0.11388543522563202], ["left [", -0.11397055348966692], ["down [", -0.11397055348966692], ["- x )", -0.11403668011875956], ["for p in", -0.11435296359726434], ["range ( b", -0.11435830303472683], ["] , b", -0.11446921117912559], ["#INDENT# b .", -0.11468369530561558], [") #NEWLINE# for", -0.11469511197327253], ["* y", -0.11482065177608083], ["#DEDENT# s", -0.11483270836508044], ["( h )", -0.11486468926666495], ["0 #NEWLINE# if", -0.11492067225573714], ["( n ) ]", -0.11497832295755826], ["j ] [", -0.11503567348601972], ["y ) )", -0.11519317981466283], [": 3", -0.11521993008584504], ["out", -0.11544114165783431], ["j -", -0.11545013898047221], ["n -=", -0.11553632756860714], ["= 0 #NEWLINE# if", -0.11565114638754426], ["#NEWLINE# import math #NEWLINE#", -0.11565769788209648], ["#INDENT# k =", -0.11578630018611505], [") : #INDENT# if", -0.11590409648638435], ["& 1", -0.1159409152063967], ["'' ,", -0.11595144156898647], ["import sys #NEWLINE#", -0.1159526267968537], [") ) + 1", -0.1160561723710596], [", graph , mask", -0.11611498099524822], ["graph , mask", -0.11611498099524822], ["#INDENT# b [", -0.11617041634683893], ["#NEWLINE# #DEDENT# s =", -0.1163548451325165], ["#DEDENT# if not", -0.11643701182424035], ["is_prime", -0.11667262274398782], ["b2", -0.11668844278756955], ["( self", -0.11686545810491457], ["w #NEWLINE#", -0.11723984307295193], ["] #NEWLINE# for x", -0.11734120238424575], ["#NEWLINE# arr [", -0.11736440731665165], ["mod =", -0.11744308923105426], ["m2", -0.11767374761718673], ["[ 4", -0.11794166249437384], ["x ) #NEWLINE# #DEDENT#", -0.11824715931118963], ["[ 2 ] +", -0.11826782485270652], ["== '-'", -0.11834020178032044], ["for c in", -0.11852428582869559], ["add (", -0.118739846401535], ["'x.x'", -0.11890847660719271], ["'xx.'", -0.11890847660719271], ["'.xx' in", -0.11890847660719271], ["'.xx'", -0.11890847660719271], ["'x.x' in", -0.11890847660719271], ["'xx.' in", -0.11890847660719271], ["in d", -0.11915964461422911], [", graph ,", -0.11941189745426467], [", graph", -0.11941189745426467], ["t -", -0.11952262561051592], ["#INDENT# cnt += 1", -0.11955961699206419], ["m", -0.11956681940046161], ["#NEWLINE# answer =", -0.11958034239269578], [", c ) #NEWLINE#", -0.11959066112729218], [", idx", -0.11975790120368901], ["stdin .", -0.11997802302987007], ["from", -0.12008279032367153], [", max (", -0.12011101691239916], ["0 ] ]", -0.12016119366584713], ["( i +", -0.12031574799985281], ["[ j ] [", -0.12042595020265032], ["break #NEWLINE# #DEDENT# #DEDENT#", -0.12048514345617675], ["n ) ]", -0.1206659745694], ["h ,", -0.12068523222547245], ["#DEDENT# if a", -0.1208529263486766], ["+ j", -0.12097343951052966], ["] <=", -0.12109986812742206], [", 2 ,", -0.12111674042554597], ["= list ( map", -0.12113212548653805], ["> 1 :", -0.12123081473115989], ["remaining_time", -0.12128734960907891], ["[ 0 for i", -0.12129450965963877], ["for c", -0.12139664204278859], ["- 1 #NEWLINE# if", -0.12144013680064383], ["i * j", -0.12145803072221713], ["#NEWLINE# ans +=", -0.12152680957001416], ["( answer", -0.12163365442970614], ["#NEWLINE# input = sys", -0.12165533002990234], ["used", -0.1216561550472368], ["[ 1 ] )", -0.1217264774023375], [") : #INDENT# p", -0.12178381343049864], ["// (", -0.12198569790784998], ["( n - 3", -0.12202939656192359], ["p : #INDENT#", -0.12241569777958486], ["= lambda", -0.12242848908097133], ["sol", -0.12264419215570835], ["] = 1 #NEWLINE#", -0.12272960413043159], ["level [", -0.12277207731816447], ["none :", -0.12286643694172637], ["m - 1 )", -0.12294493923134406], ["'+'", -0.1230801546895976], ["] ] ) #NEWLINE#", -0.12321440723884523], ["s [ :", -0.12322932841651735], ["float , input (", -0.12330700173894003], ["float , input", -0.12330700173894003], ["( float , input", -0.12330700173894003], ["= p", -0.12348955201849478], ["1 ] #NEWLINE#", -0.12349540705460692], ["- len", -0.12364332643707532], ["- len (", -0.12364332643707532], ["l -", -0.12387187231563963], ["1 #NEWLINE# ans", -0.1238930497403177], ["] #NEWLINE# b", -0.12398999633239154], ["list ( input", -0.12419338265181439], ["list ( input (", -0.12419338265181439], ["[ -1 ] #NEWLINE#", -0.12435333773970145], ["[ c ]", -0.12473775253344799], [", ans", -0.12487597589045737], ["#NEWLINE# while", -0.12490794327632827], ["60 #NEWLINE#", -0.1250934268709464], ["a , d", -0.12511897354955945], ["#NEWLINE# for i ,", -0.1252302055240238], ["* 10 **", -0.12523437649405184], ["sys #NEWLINE# input =", -0.1252672615200091], ["( [ int (", -0.12580610990478278], ["( [ int", -0.12580610990478278], ["#INDENT# a", -0.12608354693857385], ["#NEWLINE# b = [", -0.12624816749488207], [", (", -0.12637845772764905], [": -1", -0.12642048604066647], ["b = [", -0.12642293245747305], [") #NEWLINE# for i", -0.1264595451710776], [") * (", -0.12652218521819916], ["+ max", -0.12653194296678943], [", b [", -0.126573596461383], ["a *", -0.12670896380313784], ["] [ 0", -0.12693133162805748], ["( c )", -0.12697037694072474], ["c :", -0.1269743521566805], ["[ t ]", -0.12721126663567422], ["and s [ i", -0.12722703455325898], ["sum =", -0.12726260154851562], [") #NEWLINE# m", -0.12738111016548329], ["yp", -0.12748817030305573], ["[ p ]", -0.12791772763285694], ["sys #NEWLINE#", -0.12809131521596415], ["'' #NEWLINE#", -0.12814540545553235], ["and a [ i", -0.12818121295938753], ["#DEDENT# ans +=", -0.12827337485829707], ["2 * a", -0.12838666982924993], ["== 3 :", -0.12843463210443443], [": #INDENT# j =", -0.12844799475903265], ["math", -0.128625409941692], ["= ' '", -0.1288018928742983], ["= ' ' )", -0.1288018928742983], ["] = 1", -0.12896725587280342], ["3 *", -0.1290452264294844], ["add_edge (", -0.12913152835550268], ["add_edge", -0.12913152835550268], ["c ==", -0.1292936348131992], ["- n", -0.12934346458568755], ["i ] : #INDENT#", -0.12942581236918832], ["v =", -0.12947899414523117], ["st", -0.12948201758113043], ["c %", -0.12970168647484048], ["and a [", -0.1297203836278246], ["x for x in", -0.1297698435966393], ["[ idx", -0.1298252166742008], ["] #NEWLINE# ans", -0.12983616122661493], ["print ( res", -0.13009713644160634], ["[ i ] :", -0.13009938916119418], [") ) #NEWLINE# for", -0.13014725546854894], ["r ) #NEWLINE#", -0.13025881881246268], ["( ( i", -0.13040617925681314], ["( ans ) )", -0.13041102197903387], ["#INDENT# cnt +=", -0.1304451609941071], [": #INDENT# cnt +=", -0.1304451609941071], ["made", -0.13070586834891268], ["<= 0", -0.13074847941268788], ["+ i )", -0.13077123541922672], ["b [ j ]", -0.1312447227054244], ["add", -0.13128546871294644], ["( ) #NEWLINE# a", -0.13139657977976568], [": -1 ]", -0.13142141451054162], ["en", -0.1314674229126527], ["u ]", -0.13156030894546877], ["[ u ]", -0.13156030894546877], [", 0 ) #NEWLINE#", -0.13157377612035667], ["e )", -0.13162497005836957], [") #NEWLINE# d =", -0.13164827816541613], ["( res ) #NEWLINE#", -0.13166829541709407], ["== 2", -0.13172712110504892], ["reverse", -0.13214778004161132], ["#NEWLINE# for j", -0.13217603542241538], ["x - 1", -0.13235422441338446], ["( r ) #NEWLINE#", -0.13245040757460294], ["#NEWLINE# import sys", -0.13268941557405647], ["none : #INDENT#", -0.13276448885087258], ["> 2", -0.13282080991955336], ["min ( a ,", -0.1329074934451914], ["ones [", -0.13291520811278423], ["[ 0", -0.1331127824109545], ["#DEDENT# #DEDENT# else :", -0.13313626151201205], ["#DEDENT# #DEDENT# else", -0.13313626151201205], ["m #NEWLINE# #DEDENT#", -0.13315898794624734], ["ans = [", -0.13327016233411212], [") ) #NEWLINE# if", -0.1333665422035208], ["negbig and", -0.13343724223264986], ["== negbig and", -0.13343724223264986], ["#NEWLINE# print ( \" \"", -0.13353746160187238], ["[ 3", -0.13373005857467168], ["] [ 0 ]", -0.13373639189771783], ["\"no\" ) #NEWLINE# return", -0.13392162963251872], ["% m", -0.13440840891803657], ["#INDENT# return a", -0.13466061059592266], [": #INDENT# return a", -0.13466061059592266], ["e [", -0.13475561326766372], ["candidates", -0.13492446819026335], ["#NEWLINE# import math", -0.13497200127875614], [", mask", -0.13499437108102594], [") //", -0.135089906810819], ["#DEDENT# print ( max", -0.13516609591574297], ["( sum", -0.13522627934939999], ["2 ) :", -0.13529216097165553], ["#NEWLINE# s =", -0.13541641897101278], ["5 )", -0.1357943117884453], ["11", -0.13585900832295933], ["3 ,", -0.13589129682229695], ["a ]", -0.13602354170226083], [", xs [ 1", -0.13628676223388497], [", xs [", -0.13628676223388497], ["= ''", -0.13641179278348387], ["#NEWLINE# p", -0.1364135721050773], ["\" \" .", -0.13689109033141664], ["\" \" . join (", -0.13689109033141664], ["\" \" . join", -0.13689109033141664], ["#NEWLINE# r =", -0.13701818487601994], ["x -", -0.13715710043394297], ["== 0 )", -0.1372368148546233], ["3 == 0", -0.137245992039714], ["% 3 ==", -0.137245992039714], ["% 3 == 0", -0.137245992039714], ["= sys . stdin", -0.13744674829620276], ["gcd (", -0.13745343120099074], ["avail", -0.137630648283208], ["mod = 10 **", -0.13784530978657908], ["mod = 10", -0.13784530978657908], ["< x", -0.13786696240360763], ["#INDENT# print ( a", -0.1380115313474835], ["c #NEWLINE#", -0.13801487844135876], ["3 ) :", -0.13813777056137327], ["c : #INDENT#", -0.13816411536894982], [": #INDENT# cnt", -0.1381681479521212], ["+ str", -0.13903034407962817], ["+ str (", -0.13903034407962817], [", min", -0.139048831580124], [">= b", -0.13911599953186052], ["#NEWLINE# for j in", -0.13933139281805765], ["+= arr [", -0.13955723313213], ["+= arr", -0.13955723313213], ["] [ 2", -0.13967477478380136], ["#NEWLINE# ans . append", -0.13975562197436447], [": print", -0.13982679258137773], ["i + 1", -0.13988969575737098], ["p #NEWLINE#", -0.13996826791972494], ["res ) #NEWLINE#", -0.14040443476682088], ["cnt )", -0.14041559779331644], ["] #NEWLINE# s", -0.14055203464058558], [": #INDENT# a", -0.14066627492619538], ["0 ]", -0.14070772768481093], ["== 3 : #INDENT#", -0.14073911670372463], ["if i +", -0.14104301590926915], [") #NEWLINE# n =", -0.1410835027569238], ["2 :", -0.1411391334157664], ["lambda", -0.14122365219296112], ["#NEWLINE# arr = [", -0.14140452195158365], ["] ) :", -0.14148111457484333], ["#NEWLINE# arr", -0.14169321413765285], ["i *", -0.14180530240159228], ["#INDENT# j", -0.14188565765671224], [">= a", -0.1419615085564949], ["ans ) )", -0.14215380266942973], ["x for", -0.1422201458750851], ["b -", -0.14240228640068478], ["[ k - 1", -0.1429957096516177], [") #NEWLINE# l =", -0.14339326054121074], [") #NEWLINE# k", -0.1434193875993824], ["10 *", -0.14354947170623653], ["#NEWLINE# #DEDENT# #DEDENT#", -0.14356842056828412], ["#DEDENT# def", -0.1435996255082789], ["== 0 :", -0.14363786362719028], ["#INDENT# cnt", -0.14377024842072036], ["x =", -0.14378758447700965], ["= 0", -0.1439021227155074], ["2 ) : #INDENT#", -0.14393826961467818], ["extend", -0.14404061406994678], [". add_edge (", -0.14468320905144047], [". add_edge", -0.14468320905144047], ["t ) #NEWLINE#", -0.144862611628089], ["#INDENT# q", -0.14511188266514294], ["#DEDENT# #DEDENT# if", -0.14514609109890386], ["[ 0 ] ]", -0.14566854401391294], ["( ) ) for", -0.14572546634271424], ["input = sys .", -0.14596997091912603], ["input = sys", -0.14596997091912603], ["k + 1", -0.14602496056415287], ["rr", -0.14614494390694815], ["2 +", -0.1462382504893411], [") - 1 )", -0.14633880584718906], ["+ 1", -0.14653796093307853], ["[ j ] )", -0.14669302967701986], ["-1 ] #NEWLINE#", -0.1467063387831346], [", max", -0.14679777198746372], ["#NEWLINE# ans .", -0.14695871115917997], [") #NEWLINE# res =", -0.1470991428437974], ["print ( r", -0.147141242169156], ["for p", -0.14721121699987075], ["#DEDENT# main", -0.14722390059214627], ["b [ j", -0.14729630251896986], ["< 0", -0.14732775050762179], ["3 ]", -0.14743563679106475], ["r_search", -0.14747140096518754], ["] #NEWLINE# print (", -0.1476403985081107], [". extend (", -0.1479090087595524], ["extend (", -0.1479090087595524], [". extend", -0.1479090087595524], ["e =", -0.14814381480783806], ["sys #NEWLINE# input", -0.14845791295118618], ["import sys #NEWLINE# input", -0.14845791295118618], ["'no' ) #NEWLINE# #DEDENT#", -0.14852180036221077], [": print (", -0.14883057259913704], ["b )", -0.14889165671998536], [": #INDENT# q", -0.14894007038986737], ["0 : #INDENT# continue", -0.14934679175273888], ["[ x for", -0.14940965221278474], ["[ x for x", -0.14940965221278474], ["0 ) ) #NEWLINE#", -0.14945140051076497], ["/ (", -0.14945187313738087], ["] ) : #INDENT#", -0.14970721129797349], ["] [ 2 ]", -0.14994208618472366], ["+ 1 #NEWLINE# if", -0.15029102740015504], ["#NEWLINE# if x", -0.15056877742633365], ["point", -0.15108582437718504], ["print ( res )", -0.1511634619520629], ["+ 1 ] ==", -0.15132273372534355], ["#NEWLINE# s = sum", -0.15172917128051214], ["rl", -0.15176590328798473], ["if not", -0.15180178700909694], ["/ 2 )", -0.15184967151261294], ["import gcd #NEWLINE#", -0.1520893592110122], ["( x ) )", -0.1521678767163626], ["[ x", -0.15231945137064576], ["#DEDENT# b", -0.15235514365506633], [") // (", -0.1527353166129748], ["3 ==", -0.15315773157071313], ["i ) ) #NEWLINE#", -0.1531910218229305], ["ans ) #NEWLINE# #DEDENT#", -0.1532286425140898], ["#INDENT# ans . append", -0.1532627330737107], ["#INDENT# ans .", -0.1532627330737107], ["la", -0.1533786600647615], ["arr = [", -0.15373250498426544], ["if a ==", -0.15376463908138083], ["ans = min", -0.1537925706206116], ["= (", -0.15402274433814853], ["if b", -0.15427905527212385], ["#NEWLINE# #DEDENT# s", -0.15430020372235953], ["#NEWLINE# n", -0.15432424172706863], ["#NEWLINE# t =", -0.15446288882062043], ["9 + 7 #NEWLINE#", -0.15460896248859898], ["continue #NEWLINE# #DEDENT# else", -0.15470350703452873], ["( range", -0.15472101266391278], ["( range (", -0.15472101266391278], ["start =", -0.15475321189536614], [") #NEWLINE# cnt =", -0.1548255931231639], ["3 ) : #INDENT#", -0.15502010025173094], ["x for x", -0.15511224628282017], ["-1 ) #NEWLINE# return", -0.1551571658251936], ["x1", -0.15522397836379473], ["w )", -0.15523376746474143], ["( 2 )", -0.15557878008084766], [") : #INDENT# return", -0.1557253507939682], ["1 #NEWLINE# #DEDENT# print", -0.1557665320406378], ["#INDENT# sum", -0.15578155669912833], ["#INDENT# d =", -0.15584099580952165], [": #INDENT# f =", -0.15584431926739484], ["* i", -0.155982836328561], ["** 2 ) #NEWLINE#", -0.15659648639150875], ["break #NEWLINE# #DEDENT# if", -0.15666672669002346], ["y1 -", -0.15667299895288658], ["f [ i", -0.1567414694041485], ["year", -0.15675001345161704], ["#DEDENT# if a [", -0.15678004068211945], ["k #NEWLINE#", -0.15686239671399665], ["if t", -0.15701243175111082], ["% i ==", -0.15748470543881857], ["% i == 0", -0.15748470543881857], ["2 ) ) #NEWLINE#", -0.15792798518033732], ["[ k -", -0.15792991017473756], ["#NEWLINE# #DEDENT# if", -0.15809732808936794], ["#INDENT# print ( i", -0.15837190480519725], ["#NEWLINE# if b", -0.15846819286742292], ["if x", -0.15852122404729746], ["+ 7 #NEWLINE#", -0.1585229693977487], ["( b , a", -0.15859935931161612], ["a [ n", -0.15862224852436482], ["- k", -0.15865958491077806], ["if i ==", -0.15877002563206755], ["import sys", -0.15880614465410195], ["l_search", -0.15881535488558668], ["gcd", -0.1588411479350057], ["if k", -0.15892917076365487], ["for v", -0.15894815286763403], ["a <", -0.15895248306670967], ["xs [ 1 ]", -0.15900122260619914], ["xs [ 1", -0.15900122260619914], ["( ops", -0.1591557948455957], ["#NEWLINE# #DEDENT# #DEDENT# print", -0.1593041008136158], [": #INDENT# sum", -0.15933498682997466], ["#INDENT# break #NEWLINE# #DEDENT#", -0.15999921119271715], ["for v in", -0.16012151900100552], [") #NEWLINE# #DEDENT# #DEDENT#", -0.16015085304809182], ["> k", -0.16024523899532647], [") #NEWLINE# #DEDENT#", -0.1602707381234096], ["( t", -0.16037031606143398], [": 2", -0.16076253554718506], ["- sum (", -0.1607739721559365], ["- sum", -0.1607739721559365], ["start", -0.16078665553130422], ["[ 0 ] +", -0.16096085807157334], ["if ans", -0.1610521148122959], ["for s", -0.16143041444595155], ["t ]", -0.16150295934493616], ["a = [", -0.1619238857189518], [") #NEWLINE# #DEDENT# print", -0.1620056964272479], ["== 3", -0.16211106657586358], ["s = sum (", -0.16235348548045714], ["s = sum", -0.16235348548045714], ["#INDENT# nonlocal", -0.16299154590081816], [": #INDENT# nonlocal", -0.16299154590081816], ["#INDENT# t", -0.16325143565971903], [": #INDENT# t", -0.16325143565971903], ["( b -", -0.16333993062860364], ["#NEWLINE# mod = 10", -0.1633442928752774], ["for a in", -0.1634605559820123], ["ans = min (", -0.16355860120431087], ["#DEDENT# if", -0.1637874166189573], ["<= b", -0.1638139793103848], ["s in", -0.16418267979873927], ["* k", -0.1643038563178775], ["#NEWLINE# res =", -0.1646183915900736], [") #NEWLINE# while", -0.16478351332277], ["#NEWLINE# #DEDENT# for i", -0.1648841354142193], ["colors", -0.16491670181579665], ["l ) #NEWLINE#", -0.1651168560249449], ["( \" \" . join", -0.16523317618710107], ["( \" \" .", -0.16523317618710107], ["import gcd", -0.16535876374964917], ["2 * b", -0.16536316955354857], ["[ t", -0.16562131316478834], ["#INDENT# r =", -0.16570671002211024], [": #INDENT# r =", -0.16570671002211024], ["#NEWLINE# #DEDENT# b", -0.16578927182800615], ["#NEWLINE# #DEDENT# if a", -0.16581317188112152], ["assert", -0.16581402489731673], ["* b", -0.1660071811393134], ["print ( k", -0.16624563579033033], ["``", -0.16647748412813732], [": #INDENT# d =", -0.16648754473069344], ["0 ) )", -0.1666910996654523], ["1 ) * (", -0.16708387968000696], ["#NEWLINE# answer", -0.16714680641374638], ["a in", -0.16724704356663014], ["+ max (", -0.1673743685210539], ["ans = 1", -0.16763533386002075], ["ans = 1 #NEWLINE#", -0.16763533386002075], ["for", -0.16778237770868412], ["pos", -0.1679494954196461], ["i == 0", -0.16811494179838316], ["( ans ,", -0.168246812533493], ["nonlocal", -0.16836987566944922], ["res )", -0.1686410126126898], ["print ( \" \" .", -0.16864430828317953], ["print ( \" \"", -0.16864430828317953], ["s2 =", -0.16868128983302944], ["0 : #INDENT# break", -0.16870487033003875], ["** 2 )", -0.1687355317919335], ["> 1 : #INDENT#", -0.1690162429062995], ["t +", -0.16919355630133806], ["[ len (", -0.16963385501108663], ["[ len", -0.16963385501108663], ["s", -0.17002105760054492], ["= [ 0", -0.17007851121516349], ["12", -0.1701216411177496], ["for s in", -0.1710651721456066], ["v )", -0.17108839591124642], ["j ==", -0.17178408191440903], ["#NEWLINE# print ( a", -0.17191991713394314], ["s -", -0.1720323084509406], [": #INDENT# k", -0.17213469499172876], ["#NEWLINE# #DEDENT# elif", -0.17277441093022977], ["str (", -0.172948777479881], ["#NEWLINE#", -0.1731448719088435], ["% 4", -0.1734600709836991], ["#NEWLINE# n , k", -0.1735773590358847], [", e", -0.1736339305139871], ["prime", -0.1737132053100024], ["l = list (", -0.17380179706360122], ["l = list", -0.17380179706360122], ["= i #NEWLINE#", -0.17398895257398994], ["frontier", -0.17399916071226681], ["z [", -0.1746070034980156], ["m [", -0.17472951582157306], ["* c", -0.17501155027470353], ["0 #NEWLINE# while", -0.17502079021953534], ["lst", -0.175043384456477], ["0 ] +", -0.1755529583342376], ["5 #NEWLINE#", -0.17559856167597807], [") ) ) :", -0.17583643052612696], ["a #NEWLINE#", -0.17641921129668847], [": #INDENT# j", -0.17659507119370965], [") #NEWLINE# t =", -0.17684573079869093], ["need", -0.17726623601640784], ["x2", -0.1774033715600748], ["* b )", -0.17773485852923182], ["== negbig", -0.1779163229768665], ["#NEWLINE# n =", -0.17800253856962323], ["itertools import", -0.17822324288296515], ["from itertools import", -0.17822324288296515], ["from itertools", -0.17822324288296515], ["a +=", -0.1782457355320127], ["- 2", -0.17842884625464317], ["d [ i ]", -0.17879645304259473], ["+ l", -0.17880037335226343], ["states", -0.17887625089615253], ["b1", -0.1796645111174626], ["#INDENT# a =", -0.17974194947921748], ["b and", -0.18017356847369276], ["= 10 ** 9", -0.18043289495730436], ["#NEWLINE# a = [", -0.18044797851849595], ["i == 0 :", -0.18257045153312088], [": #INDENT# f", -0.18270590584826712], ["#INDENT# f", -0.18270590584826712], ["] #NEWLINE# for i", -0.18279768763692092], ["= sys", -0.18296465689227898], ["= sys .", -0.18296465689227898], ["arr [ i", -0.1835430411607294], ["stdin . readline", -0.18371221197849502], ["mi", -0.18385159443806467], ["= n #NEWLINE#", -0.18439986393704366], ["tempi", -0.18469079890325935], ["2 ) #NEWLINE# #DEDENT#", -0.1847158421266024], [") ) #NEWLINE# n", -0.18474602873594673], ["- i", -0.18479845142018975], ["g )", -0.18483008987446176], ["n - 3", -0.18497173884342086], ["#NEWLINE# from math import", -0.18551625137234434], ["#NEWLINE# from math", -0.18551625137234434], ["mp", -0.18558380725668958], [") ,", -0.18589881586604895], ["- y1", -0.18600495869012199], ["s3", -0.18604588079873802], ["i +", -0.18609054966488423], ["b //", -0.18610207864344688], ["#NEWLINE# for c", -0.18614520818004268], ["( a ) :", -0.1863761681721726], [", w )", -0.18637912804591353], ["ans ,", -0.18642280757296334], ["ans = 0", -0.18649822567490862], ["reversed", -0.18653306673909004], ["= min ( a", -0.18654369707371316], ["d #NEWLINE#", -0.18655900087840957], ["( v )", -0.18662798769460032], [") ] #NEWLINE# if", -0.18664454899023503], ["( ) #NEWLINE# print", -0.18670081675241487], ["- l", -0.1871175055295004], ["ones", -0.18715094975356958], ["ans [", -0.18748744120503374], ["% m #NEWLINE#", -0.18766067001118003], ["30", -0.187856463566745], ["[ int ( x", -0.18798676584482452], ["ans = 0 #NEWLINE#", -0.18802447752104542], ["r +=", -0.18804053728418482], ["= max ( 0", -0.18821244503308726], ["p ]", -0.18823779113477104], [": #NEWLINE#", -0.18829770511076893], ["* n", -0.18845816340196292], ["print ( ``", -0.18918365264585402], ["half", -0.18933881229939942], ["* (", -0.1893419004083275], ["a = input (", -0.189395421423986], ["a = input", -0.189395421423986], ["- i )", -0.18946266379208088], ["#NEWLINE# sys", -0.18958160812293365], ["#NEWLINE# sys .", -0.18958160812293365], ["p :", -0.18968016300832677], ["#NEWLINE# #DEDENT# ans", -0.18991212901584031], ["#INDENT# break #NEWLINE#", -0.19017823481405532], ["#INDENT# break", -0.19017823481405532], ["= input (", -0.19023712604797482], ["= input", -0.19023712604797482], ["m #NEWLINE#", -0.1902973298945172], ["= 0 #NEWLINE# while", -0.19035050585431215], ["#INDENT# k", -0.1908763878816948], ["+= int (", -0.19102831979531762], ["+= int", -0.19102831979531762], ["while", -0.19110486092034884], [": #INDENT# a =", -0.1911075801571505], ["( b )", -0.1915006566920013], ["#NEWLINE# for c in", -0.19152913534414825], ["+ n", -0.19228353582020188], ["#NEWLINE# ans = 0", -0.19228848575898902], ["#DEDENT# elif", -0.19255164231780006], ["a >=", -0.19257377496560726], [") : #INDENT# ans", -0.19274598118799863], [") : #INDENT# d", -0.1928677503319552], ["in range ( 0", -0.19302246295071326], [": #INDENT# break", -0.19339334478750803], [": #INDENT# break #NEWLINE#", -0.19339334478750803], ["n :", -0.19341427507723918], ["int (", -0.19391684607108778], ["9", -0.1942298776327314], ["- 1 #NEWLINE#", -0.19442179322836045], ["max", -0.19452020170229706], ["1 ] +=", -0.19464683896862833], ["= input ( )", -0.19539909614805837], ["res [", -0.19583100754529092], ["itertools", -0.1964472092509027], ["t =", -0.1965253276350095], ["#NEWLINE# self", -0.19753013474332556], ["#NEWLINE# self .", -0.19753013474332556], ["%=", -0.19768365218781064], ["#DEDENT# for i", -0.19770442129898105], ["v in", -0.1980015984095186], ["= false #NEWLINE#", -0.19819843580343072], ["int ( s", -0.19836744776049003], ["m -", -0.19840018849848354], ["i", -0.19893070644319572], ["a1", -0.1993411058985512], ["#INDENT# c", -0.19955850155336086], ["#INDENT# if", -0.19963779226834083], ["ch", -0.2000138822606441], ["#INDENT# r", -0.20002228978718692], [": #INDENT# r", -0.20002228978718692], ["l ]", -0.2001502779086283], ["i =", -0.2002543215449686], [": ] ,", -0.2004083479564763], ["#NEWLINE# from", -0.20089726821111045], ["ok", -0.20102809385949028], ["i ==", -0.20103319482398452], ["b *", -0.20148365049259492], ["3 )", -0.20161534392924663], ["// k", -0.20191325840973737], ["== 0 ) :", -0.2019172019475509], ["k %", -0.20258433483182237], ["== 0 : #INDENT#", -0.202636597832577], [": #INDENT# if i", -0.2029200207934808], ["+ [", -0.2029243869936007], ["results", -0.20398320055750352], ["#INDENT# if i", -0.204350465341417], ["- 3", -0.20447307136954038], ["+ 1 ,", -0.20453472378093523], ["if i", -0.2048466174279013], ["( str (", -0.20488034122417367], ["#INDENT# print ( 'no'", -0.2049491316330497], ["t [", -0.2052075889177422], [": #INDENT# c", -0.20560118515774695], ["- 1 ] )", -0.20574030332692683], [": #INDENT# p =", -0.2062351983830028], [") ) +", -0.20680453843150123], ["7 )", -0.20704568329042983], ["( r )", -0.20753413119492123], ["+ list (", -0.2078386552663017], ["+ list", -0.2078386552663017], ["#NEWLINE# input =", -0.20785159747899648], ["b <", -0.20800700749399906], ["s =", -0.20821885738172405], ["+ 7", -0.2082538749838311], ["( res", -0.2082995615483473], ["'' ) #NEWLINE#", -0.2084704720305639], ["exponent", -0.20892269518389223], ["counter #NEWLINE#", -0.20955956998461645], ["stdin . readline #NEWLINE#", -0.20957808120479274], [": #INDENT# l", -0.2096062193500046], ["#INDENT# l", -0.2096062193500046], ["( ``", -0.2097588745974754], ["tempa", -0.20987590784461285], [") ) ,", -0.2099064893108861], ["#NEWLINE# cur", -0.20995666439474828], ["c =", -0.21013429668933462], ["#NEWLINE# #DEDENT# while", -0.21051917397466657], ["31", -0.21073024135039553], ["= false", -0.21092987147200068], [") ) #NEWLINE# l", -0.21100410332695163], ["1 #NEWLINE# if", -0.2110963053803761], ["f =", -0.211134760172981], ["else : #INDENT# if", -0.2112078098573612], ["import counter #NEWLINE#", -0.21152027806348556], ["collections import counter #NEWLINE#", -0.21152027806348556], [", 31", -0.21190146922013256], ["31 ,", -0.21190146922013256], ["d .", -0.21197112583047037], [". readline", -0.21232578298844915], ["cnt += 1 #NEWLINE#", -0.2126927796199794], ["cnt += 1", -0.2126927796199794], ["wr", -0.2129137594367375], ["- 1 ) #NEWLINE#", -0.21307668986410327], ["5", -0.21340962801979577], ["( tmp", -0.21355676617169495], ["2 ,", -0.2136154583626224], [", w", -0.2141613406424107], [") : #INDENT# main", -0.21416808603549065], ["#NEWLINE# break", -0.21501624895720775], ["gcd ( x", -0.21525570142733347], ["gcd ( x ,", -0.21525570142733347], ["#NEWLINE# h", -0.21541697489251635], ["x ) )", -0.21592320651587021], ["** 10", -0.21605981944049216], ["10 ** 10", -0.21605981944049216], ["= k #NEWLINE#", -0.21607695616037562], ["str", -0.2165657232654188], ["#NEWLINE# #DEDENT# #DEDENT# #DEDENT#", -0.21659978173119818], ["> 0 :", -0.21667880896005226], ["#NEWLINE# break #NEWLINE#", -0.21670914498726712], ["#NEWLINE# input", -0.21710053563600745], [") ) #NEWLINE# #DEDENT#", -0.21721065367819697], ["#INDENT# x =", -0.21770870195083644], ["return #NEWLINE# #DEDENT# if", -0.21796162244599573], ["print ( i", -0.21842952550386638], ["int ( s [", -0.2184754659998393], [") #NEWLINE# #INDENT#", -0.21886780055606855], ["( 1 -", -0.21909428498167005], ["math . gcd (", -0.21915181890133698], [". gcd", -0.21915181890133698], ["math . gcd", -0.21915181890133698], [". gcd (", -0.21915181890133698], [") #NEWLINE# cnt", -0.2193128046319806], ["( t ) #NEWLINE#", -0.21937548419108133], ["k ) #NEWLINE# #DEDENT#", -0.21997244352743633], ["2 : #INDENT#", -0.2204229247601421], [") #NEWLINE# r", -0.22071976335998864], ["stdin", -0.22118470816554303], ["k ) #NEWLINE#", -0.22153035309894709], ["final", -0.2216144028463582], ["s2 [", -0.22176959481904224], ["= counter", -0.22203544722825327], ["counter (", -0.22203544722825327], ["= counter (", -0.22203544722825327], ["'yes' ) #NEWLINE# #DEDENT#", -0.222177197735485], ["] = true #NEWLINE#", -0.2223013332707881], ["] = true", -0.2223013332707881], ["( c", -0.2223575772366005], ["( e", -0.22248668200446714], ["print ( 2", -0.22274426976528103], ["#INDENT# print ( 2", -0.22274426976528103], ["done", -0.2233502298369425], ["'' )", -0.22388558911911882], ["> 0 : #INDENT#", -0.2238873538270781], ["from collections import counter", -0.22401069023756498], ["import counter", -0.22401069023756498], ["collections import counter", -0.22401069023756498], ["+ a", -0.2242746412763865], [": #INDENT# x =", -0.2249377538616941], ["xs", -0.22496948264474292], ["#NEWLINE# break #NEWLINE# #DEDENT#", -0.22505533098030134], ["k +", -0.22509222266491577], ["= '' #NEWLINE#", -0.22537280645578214], ["( 2 *", -0.2254939736666946], ["( d [", -0.22558290731655192], ["for i", -0.22621079696454294], ["n -", -0.22644207963979518], ["#NEWLINE# #DEDENT# for", -0.22668042666009208], ["( a //", -0.22679567184021224], ["else", -0.22719864854277325], ["arr [", -0.22733893862162263], ["* 2", -0.22734307249091826], ["cou", -0.2274704599755689], ["( a", -0.22757895017626453], [") #NEWLINE# ans =", -0.22758642552541947], [": #INDENT# nxt", -0.22783738426583416], ["#INDENT# nxt", -0.22783738426583416], ["// 4", -0.2279867851520548], ["3 ) #NEWLINE#", -0.22810370928940174], ["60", -0.22846045687859248], ["a -", -0.22848038139029747], ["for i in", -0.22854646451453933], ["np", -0.2290415185776716], ["- q", -0.229045323521385], ["* j", -0.22927044509907937], [">= 0", -0.22928864352827127], ["#DEDENT# while", -0.2299501140843994], ["#INDENT# c =", -0.23009909618916366], ["from math", -0.23014216980458913], ["from math import", -0.23014216980458913], ["math import", -0.23014216980458913], ["x in input", -0.23034642496383193], ["x in input (", -0.23034642496383193], ["for x in input", -0.23034642496383193], ["] ) )", -0.23054235414703492], ["a //", -0.2308954494959529], ["( v", -0.2312249127121177], ["word", -0.23199832532941575], ["main ( )", -0.23231482891119654], [") #NEWLINE# d", -0.23255959013470043], ["print ( a )", -0.2328219507497467], ["1 #NEWLINE# #DEDENT# for", -0.2330590298184423], ["a ==", -0.23308561880856768], ["#DEDENT# for i in", -0.23325877319057592], [") #NEWLINE# n", -0.23382848248970706], ["readline", -0.23412041626291552], ["/", -0.23606891148320638], ["= i", -0.23624243320252397], ["] ) ) #NEWLINE#", -0.23654725946986155], ["f [", -0.2371694760584291], ["1 -", -0.23731091449771163], ["0 : #INDENT# if", -0.23753741315756163], ["arr [ i ]", -0.23761661071867995], ["#NEWLINE# #DEDENT# elif (", -0.23764020876877767], ["pow (", -0.2377074192318834], ["pow", -0.2377074192318834], ["[ k", -0.2385067323702154], ["mark", -0.23916466885426774], ["main", -0.23935312384549057], ["arr", -0.2397213377734051], ["( cnt", -0.24005822907719224], ["] +=", -0.24016137990674402], ["( list ( map", -0.24081294666023498], ["#DEDENT# #DEDENT# #DEDENT# print", -0.24128624977296068], ["0 :", -0.24129258495885814], ["> 0", -0.24199773439472078], ["score", -0.24218998149407453], [": #INDENT# c =", -0.2427183878056235], ["#DEDENT# elif (", -0.24384268032455733], ["elif (", -0.24384268032455733], ["if ( a", -0.24400684780071216], ["course", -0.24411178551920365], ["mark [", -0.2443858801466939], ["= 0 #NEWLINE#", -0.2449519533925553], ["i in", -0.24496264170032214], ["1 ] )", -0.24505486967775422], ["2 * b )", -0.24519367201038778], [". readline #NEWLINE#", -0.24586645816762512], ["readline #NEWLINE#", -0.24586645816762512], ["main (", -0.2461593394076876], ["r )", -0.2461704527049762], ["( x ) for", -0.24625477036567142], ["''", -0.2467682721332218], [") ] #NEWLINE# for", -0.24681047429637], [": list", -0.2472956016112558], ["i ) )", -0.24784885109960433], ["#NEWLINE# m", -0.24803563843710644], ["min ( a", -0.24823537958932823], ["1 ] [", -0.24888108919041482], ["ops [", -0.2491067470486027], [": 0", -0.24922830771539478], ["#INDENT#", -0.2494867967643722], ["#DEDENT#", -0.2494867967643722], [") #NEWLINE# #DEDENT# else", -0.2495981119521664], [") #NEWLINE# res", -0.2504189035462094], [": #INDENT# p", -0.2512737944834801], [") for x in", -0.2522153444589149], ["l2", -0.2524783762767984], ["l1", -0.2524783762767984], ["k -", -0.25261532950234183], ["( str", -0.25279206097902623], ["x <=", -0.2534885988829733], ["( list", -0.2538253869001394], ["1 ) #NEWLINE#", -0.2539129748334704], ["#INDENT# p =", -0.2544948072931154], ["cur =", -0.2553820059934141], [") for x", -0.2555681027484505], ["#DEDENT# #DEDENT# #DEDENT#", -0.2557453945130197], [") <", -0.25574887849938993], [">", -0.25590587582941143], ["x ) for x", -0.256314242799782], ["x ) for", -0.256314242799782], ["#DEDENT# for", -0.25659948890385925], ["2 ) #NEWLINE#", -0.2566351874337796], [") ) -", -0.25709268268450536], ["xs [", -0.2574305508862273], ["ss", -0.25809469935961815], ["#DEDENT# ans", -0.2581889056107385], ["100", -0.25856332504672497], ["sorted", -0.25924027984193015], ["list ( range (", -0.2600570194435643], ["list ( range", -0.2600570194435643], ["factor", -0.2604587674542555], ["g #NEWLINE#", -0.26106031886851605], ["return list ( map", -0.2616721294914863], ["cnt +=", -0.26243690444996604], ["( max", -0.2625874081365654], ["python3 #NEWLINE#", -0.26264950389494], ["bb [", -0.2629605394782821], ["n : #INDENT#", -0.2632680754907763], ["[ v", -0.26334493975660556], ["sufflen", -0.2634612057001977], ["2 : #INDENT# print", -0.26370513278649327], ["( i", -0.26373538643224664], ["sys .", -0.26531304918891113], ["len (", -0.26591796779387167], ["ans . append (", -0.2659458484890635], ["ans . append", -0.2659458484890635], ["b [", -0.26620475029404805], ["#INDENT# s", -0.2663341968672588], [") #NEWLINE# #DEDENT# def", -0.2673292324843267], ["odd", -0.26755806259467985], ["#NEWLINE# k =", -0.26792880862176194], ["* d", -0.26869155340752837], ["print ( max", -0.26901687897970156], ["2 )", -0.2699189254176047], ["val", -0.27015843739065054], ["mod", -0.27144334657324093], ["mx =", -0.27175442717259335], ["[ :", -0.27178489519652194], ["ans +=", -0.27192412290062473], ["#NEWLINE# s", -0.27222855957542896], [". readline #NEWLINE# n", -0.27232241374930266], ["readline #NEWLINE# n", -0.27232241374930266], ["( l", -0.2733864911219102], ["10 ** 9", -0.27379187075810774], ["** 9", -0.27379187075810774], [": ]", -0.27465892805568554], ["else :", -0.2747418870236424], ["[ v ]", -0.27475549565446966], ["[ p", -0.27590091044609305], ["= list (", -0.27591617628300674], ["= list", -0.27591617628300674], ["2 ]", -0.276335949449465], ["/usr/bin/env python3", -0.27715264520777466], ["/usr/bin/env python3 #NEWLINE#", -0.27715264520777466], ["! /usr/bin/env python3", -0.27715264520777466], ["! /usr/bin/env python3 #NEWLINE#", -0.27715264520777466], ["d [ i", -0.2772447061402606], ["+= (", -0.2779313521238263], ["#NEWLINE# r", -0.27909697435475556], ["stdout", -0.27923893451311177], ["\" \" )", -0.27927972652901945], [": #INDENT# s", -0.27960588714726664], ["//=", -0.2801094567919932], ["int ( x )", -0.28068049650781934], ["z", -0.28068726601995353], ["( ) ) )", -0.2815171197097871], ["! /usr/bin/env", -0.2820271325829999], ["/usr/bin/env", -0.2820271325829999], ["#INDENT# s +=", -0.2823548754713864], [": #INDENT# s +=", -0.2823548754713864], ["- 2 *", -0.2826060528362505], ["python3", -0.2827558288790195], ["#NEWLINE# d =", -0.2828576858873139], ["3", -0.2830502736973672], ["input =", -0.2834678351433254], ["print ( min", -0.2835785330347252], [") #NEWLINE# l", -0.2843128153608521], [": 0 ,", -0.2846971719626973], ["( list (", -0.2847523054770377], ["#DEDENT# #DEDENT#", -0.2850548542628528], ["[ -1 ]", -0.28535962996875114], ["ans .", -0.28566186261769694], ["sm", -0.2857907907306245], ["+ 1 ] [", -0.2863359658942335], ["#INDENT# print ( n", -0.2870893462568409], ["#INDENT# d [", -0.2876894904533025], [": #INDENT# d [", -0.2876894904533025], ["( 2", -0.2877434911788886], ["ct [", -0.2877774909300501], ["( s [", -0.2879632459028547], ["= k", -0.2884579845910791], ["x )", -0.288462832391887], ["< 10", -0.2886224128525347], ["range ( 0 ,", -0.28889822873017995], ["range ( 0", -0.28889822873017995], [": 1", -0.2892412925543763], ["( a -", -0.2894121021019511], ["#INDENT# p", -0.2899377770256898], [") ) - 1", -0.2905654150048586], ["v ]", -0.29116018431612084], ["len", -0.2912991335208165], ["#NEWLINE# #DEDENT# def __starting_point", -0.2914313533253583], ["( b", -0.2916071476255695], [") #NEWLINE# ans", -0.291830945313566], ["! ! ! !", -0.29224621264855555], ["[ a", -0.2924101964509494], ["1", -0.2927461463733113], ["c2", -0.2929239006500103], ["= true #NEWLINE#", -0.29359834763153864], ["sorted (", -0.29414732989988895], ["p =", -0.29611750131166514], ["h )", -0.29828680672955277], ["#NEWLINE# k", -0.29923864064493855], ["#DEDENT# print ( ans", -0.30012451989060657], ["max ( 0 ,", -0.30046506373064275], ["max ( 0", -0.30046506373064275], ["** 2", -0.30076617590030635], ["n %", -0.3009680847755613], ["break", -0.3020414655000376], ["#NEWLINE# #DEDENT#", -0.3048850206141085], ["1 #NEWLINE# #DEDENT# if", -0.3052473605152198], ["+ i", -0.30608459782925557], ["1 #NEWLINE# #DEDENT#", -0.306187417252737], ["-= 1 #NEWLINE# #DEDENT#", -0.30711507898820994], ["@", -0.3083174402186], ["] =", -0.3096925020560809], ["#DEDENT# print ( (", -0.31040485534165196], ["cnt = 0", -0.31045057205113386], ["cnt = 0 #NEWLINE#", -0.31045057205113386], ["c1", -0.31123671713111484], ["#INDENT# print ( 'yes'", -0.3114596458876065], ["self .", -0.3120056390660684], ["! ! !", -0.3121995068053476], ["( l )", -0.3133479088064003], ["print ( 'no'", -0.3134470594853661], ["( 'no' )", -0.3134470594853661], ["print ( 'no' )", -0.3134470594853661], ["( 'no' ) #NEWLINE#", -0.3134470594853661], ["return list", -0.31451772903664643], ["return list (", -0.31451772903664643], ["0 )", -0.31491317956706294], ["print ( n", -0.31565191979393453], ["break #NEWLINE# #DEDENT#", -0.31585496090505494], ["[ 2 ]", -0.3170770111440397], ["outputlist", -0.3172640310891003], ["#NEWLINE# #DEDENT# if (", -0.3172998620912301], ["div", -0.3174489926899758], [") #NEWLINE#", -0.3214359989174963], ["#DEDENT# #DEDENT# print", -0.3215972691561951], ["mas [", -0.3216025793006332], ["( 'no'", -0.32205040402542373], ["#NEWLINE# #DEDENT# else", -0.3224935283838898], ["print (", -0.32304511701937594], ["#NEWLINE# #DEDENT# else :", -0.3249128766160778], ["#DEDENT# def __starting_point (", -0.32492246709196604], ["#NEWLINE# #DEDENT# __starting_point (", -0.32492246709196604], ["#DEDENT# def __starting_point", -0.32492246709196604], ["def __starting_point", -0.32492246709196604], ["def __starting_point (", -0.32492246709196604], ["def __starting_point ( )", -0.32492246709196604], ["#DEDENT# __starting_point", -0.32492246709196604], ["#DEDENT# __starting_point (", -0.32492246709196604], ["#DEDENT# __starting_point ( )", -0.32492246709196604], [") #NEWLINE# #DEDENT# __starting_point", -0.32492246709196604], ["__starting_point ( ) :", -0.32492246709196604], ["__starting_point ( ) #NEWLINE#", -0.32492246709196604], ["#NEWLINE# #DEDENT# __starting_point", -0.32492246709196604], ["#NEWLINE# l =", -0.3258028707358115], ["1 ) *", -0.32615218940914253], ["] +", -0.32643385529599206], ["break #NEWLINE#", -0.32661619203069847], ["'no' ) #NEWLINE#", -0.327223198392973], ["'no' )", -0.327223198392973], ["#INDENT# continue #NEWLINE#", -0.3280230536352209], ["#INDENT# continue", -0.3280230536352209], ["#INDENT# continue #NEWLINE# #DEDENT#", -0.3280230536352209], ["#INDENT# return list (", -0.328709533730109], [": #INDENT# return list", -0.328709533730109], ["#INDENT# return list", -0.328709533730109], [") for i", -0.32989047819979056], [": #INDENT# ans =", -0.33086082442137404], ["! !", -0.33215280096213956], [": #INDENT# if", -0.33238749705106474], [") ) :", -0.33322292103497014], ["( ) :", -0.3333586238818244], ["#NEWLINE# print ( min", -0.3334376755269397], ["negbig", -0.33359310558162464], ["mask", -0.3337224687839717], ["= min", -0.3342231161747708], ["#NEWLINE# cnt = 0", -0.3345568695491568], ["//", -0.3357044274206941], [") : #INDENT# print", -0.3357045625674338], ["= 10", -0.3358967544276052], [": #INDENT# continue", -0.336882055250746], [": #INDENT# continue #NEWLINE#", -0.336882055250746], ["level", -0.3372159894613484], ["'yes' ) #NEWLINE#", -0.3376494396683767], ["print ( 'yes' )", -0.3376494396683767], ["( 'yes' ) #NEWLINE#", -0.3376494396683767], ["( 'yes' )", -0.3376494396683767], ["\" \"", -0.33795761756099485], ["#INDENT# d", -0.33826764842172535], ["- (", -0.33929033553216853], ["= 1 #NEWLINE#", -0.34002221641518], ["1 ] ) #NEWLINE#", -0.3404004924818606], ["lambda :", -0.34050549105317596], ["= lambda :", -0.34050549105317596], ["pref", -0.34070632464745815], ["0 : #INDENT#", -0.3408153112254238], [". split ( \" \"", -0.3414393508051418], ["split ( \" \" )", -0.3414393508051418], ["split ( \" \"", -0.3414393508051418], ["a !=", -0.34187699625372625], ["aa", -0.34374497163246337], ["#INDENT# print", -0.3443728728757054], ["#INDENT# print (", -0.3443728728757054], ["+ 1 ) *", -0.3446048252896905], ["#INDENT# ans =", -0.3458520039922168], ["= sorted (", -0.34609855887555024], ["= sorted", -0.34609855887555024], ["'yes' )", -0.34615388192291563], ["[ -1", -0.3466361628685366], ["'no'", -0.34666663842629003], ["( ) #NEWLINE#", -0.34687596571853413], ["+=", -0.3468908077376031], ["r =", -0.3490032128904363], [": #INDENT# d", -0.3498358513541002], ["twos", -0.3498456074640633], ["print ( 'yes'", -0.35069384164265527], ["( 'yes'", -0.35069384164265527], ["temp", -0.3508349753547739], ["= min (", -0.3508937096812741], ["continue", -0.35250122922254334], ["print ( ans", -0.3533828310984884], [") -", -0.354730871347026], ["= true", -0.3550795915445817], ["l =", -0.3562250269838188], ["( x", -0.3563990129685988], ["[ int ( i", -0.3574059242691848], ["( ) : #INDENT#", -0.35843425938385254], ["( \" \" )", -0.3586674042089409], ["tmp =", -0.36101173922299423], ["( d", -0.3615245066945757], ["and a", -0.3623224695263384], ["#NEWLINE# cnt =", -0.36248944313196996], ["continue #NEWLINE#", -0.3634499602095856], ["#DEDENT# if (", -0.36441486718803706], ["idx", -0.36607771967556724], ["ptr", -0.3665883955715506], ["now", -0.3669723646591675], ["#NEWLINE# res", -0.3677562744900428], ["return #NEWLINE# #DEDENT# #DEDENT#", -0.3688562342595407], ["-1 ]", -0.3688567472560204], ["*=", -0.36905826507174505], ["= 10 **", -0.3691024774040704], ["= m", -0.36920690980717874], ["( map ( int", -0.37077290829710846], ["mas", -0.3710798991930378], ["ops", -0.37218078912088265], ["'yes'", -0.3727759775211862], ["( x )", -0.378039515436096], [") for i in", -0.3787503294661127], ["max (", -0.3790794993246793], ["cnt =", -0.37991220218106436], ["li", -0.3799546876702138], ["#DEDENT# else", -0.38172772361775403], ["' ' ) ) )", -0.38183814898086055], ["#DEDENT# else :", -0.38417301368641316], ["list ( map", -0.38634028828642725], ["list ( map (", -0.38634028828642725], [": #INDENT# print (", -0.3868021986851698], [": #INDENT# print", -0.3868021986851698], ["int ( x", -0.38689974588186815], ["print ( ans )", -0.389097578826293], ["( [", -0.389621283730328], ["i ) for", -0.38969158664772485], ["i ) for i", -0.38969158664772485], [") ) ) )", -0.3909666465131837], ["continue #NEWLINE# #DEDENT#", -0.3919666539861162], ["print ( max (", -0.3923762487975914], ["= 1", -0.3932221286195072], ["( max (", -0.39378050322602465], ["] ) #NEWLINE#", -0.39378252592323193], ["mass", -0.39418383871671375], ["( i )", -0.39513370175400786], ["s +=", -0.39525815175794776], ["( ans ) #NEWLINE#", -0.3961174496161813], ["0 ) :", -0.3964001666399542], ["#NEWLINE# ans =", -0.3971378984193923], ["( min", -0.40067469950737294], ["0 ) : #INDENT#", -0.40098901277273474], ["#NEWLINE# if (", -0.4032618670502793], ["rem", -0.4050169041440696], ["al", -0.40559830020226667], ["#NEWLINE# d", -0.4056218310667485], ["= 1 #NEWLINE# #DEDENT#", -0.40608712581555617], ["' ' ) )", -0.4069174251135874], ["( ' ' ) )", -0.4069174251135874], ["( i ) for", -0.40732789262148056], [") - 1", -0.40780488943849635], ["self", -0.40853923848044976], ["f", -0.40937068734577425], ["inf", -0.4095159300226243], ["for x", -0.4101415743457799], ["0 ,", -0.41345341193337365], ["bb", -0.41423176814477997], [") #NEWLINE# return", -0.4146502609028268], ["counter", -0.421626697079382], [">=", -0.4230114313463398], ["print ( min (", -0.4248701934283287], ["- * -", -0.42490557934574036], ["- *", -0.42490557934574036], ["* -", -0.42490557934574036], ["= n -", -0.42538537513406466], ["#NEWLINE# #DEDENT# print", -0.42598925755116807], ["split ( ) ]", -0.42740771598508076], ["d *", -0.42919995438205527], [") ) #NEWLINE# ans", -0.42922947089816726], ["for x in", -0.42929133937083774], ["t", -0.4308883366424757], ["( \" \"", -0.43154331252433403], ["res", -0.43281102913103575], [": #INDENT# ans", -0.43585559787416767], ["else : #INDENT#", -0.436894462280357], ["#INDENT# ans", -0.4380808728049557], ["( ans )", -0.4381769435879487], ["int ( i", -0.4404850866526987], ["nxt", -0.4408806879141587], [") #NEWLINE# #DEDENT# elif", -0.4417677121073295], ["[ 2", -0.4418598496746524], [":", -0.44255559645856407], ["g", -0.4472990401698174], [") for", -0.44749236016271576], ["x in", -0.44861317117455723], ["red", -0.44997984656518436], ["ct", -0.4516429953812886], [") ) : #INDENT#", -0.4521694042854271], [") *", -0.45252003122141726], ["d =", -0.45400839175968793], ["( map (", -0.4558750568636498], ["( map", -0.4558750568636498], ["ans ) #NEWLINE#", -0.4560184943817892], ["int ( i )", -0.4598775783039152], ["7", -0.4609594722566676], ["sys", -0.4635258371121162], ["#INDENT# print ( (", -0.4693666319671264], ["<", -0.46955356054011044], ["m = list", -0.470634428524573], [", m = list", -0.470634428524573], ["m = list (", -0.470634428524573], ["mn", -0.47152406311763195], ["i in input (", -0.47167478431227644], ["i in input", -0.47167478431227644], ["for i in input", -0.47167478431227644], ["( ) ] #NEWLINE#", -0.4728620764807363], ["] )", -0.47300376661796895], [") )", -0.47385711625207744], ["= [", -0.48095958771678304], ["print ( a", -0.48106919514339114], ["l )", -0.48227613932984353], ["!", -0.48437435404082385], ["#DEDENT# #DEDENT# print (", -0.4850095153829924], ["] [", -0.48520542795786903], ["( 0 ,", -0.48541519392747073], ["4", -0.4871331982886056], ["# # # #", -0.48904785323559924], ["-= 1", -0.49141079993121817], ["-= 1 #NEWLINE#", -0.49141079993121817], ["w", -0.4919084890132176], ["1 #NEWLINE#", -0.4925992301444349], ["#INDENT# if (", -0.49361365363173726], ["ret", -0.49409535947403443], ["10 **", -0.49613023121509686], ["(", -0.4962413127665531], ["h", -0.49636666267337287], ["#NEWLINE# cnt", -0.4968380603920807], [") #NEWLINE# ;", -0.49695242915353094], ["( ' ' )", -0.49743875652240277], ["#DEDENT# else : #INDENT#", -0.49800581355400336], ["( ' '", -0.5007474443175064], ["ans )", -0.50321178592415], ["#NEWLINE# l", -0.5036434135577653], ["split ( ' ' )", -0.504072808465498], [". split ( ' '", -0.504072808465498], ["split ( ' '", -0.504072808465498], ["( 0", -0.5045894146634404], ["( ) ]", -0.5079616393109994], [": #INDENT# if (", -0.5099208666517054], ["# # #", -0.5119754557695134], ["10", -0.5145579735332129], ["# #", -0.5186107384013074], ["ar", -0.522735641252152], ["= [ int (", -0.5246715058046767], ["= [ int", -0.5246715058046767], ["b", -0.5267745319526779], ["#DEDENT# print", -0.5317753902812483], ["( min (", -0.5327497103832125], ["s1", -0.5399162651782883], [")", -0.5439998866940753], ["0", -0.545360361163018], ["] #NEWLINE#", -0.5503685198098786], ["blue", -0.5552740896061428], ["#NEWLINE# ans", -0.5661076186272712], ["' ' )", -0.5668468676439866], ["s2", -0.5684101559020528], ["( (", -0.5716065710979822], ["min", -0.5792032921276877], ["' '", -0.57983769896696], ["**", -0.5832763345761687], ["( ans", -0.5863268133715055], ["q", -0.5870404717071902], ["#NEWLINE# #DEDENT# print (", -0.5875653193946221], ["#", -0.5950762708880384], ["r", -0.6003167720551921], ["x", -0.6003905689139653], ["2 *", -0.6110626996255802], ["k = list (", -0.6120706841023638], ["k = list", -0.6120706841023638], ["#NEWLINE# import", -0.6192899813547575], [", k = list", -0.6228686775999356], ["= n", -0.6255296861758484], ["input ( ) #NEWLINE#", -0.6288051726984538], ["<=", -0.6315348006925582], ["t2", -0.6360021591615338], ["t1", -0.6427463724080971], ["i )", -0.6455314269038539], ["d [", -0.6472838971092726], ["__starting_point ( )", -0.6498449341839321], ["__starting_point", -0.6498449341839321], ["__starting_point (", -0.6498449341839321], ["k", -0.6617679581331665], ["list", -0.6622028981154916], [") ) ) #NEWLINE#", -0.6639071022430905], ["import", -0.6657390661210434], ["[ int", -0.6676499887777303], [") ] #NEWLINE#", -0.6796067500879817], ["c", -0.6807857445442596], ["mx", -0.6826091969465075], ["[ int (", -0.6855222419291991], [") ]", -0.6863804784626992], ["ans =", -0.6965061169953033], ["2", -0.7049252334152086], ["min (", -0.7271721971842461], ["+", -0.7304553702983071], ["-=", -0.7350643895365241], ["list (", -0.7559894977145356], ["in input", -0.7588026061835801], ["in input ( )", -0.7675667315254071], ["in input (", -0.7675667315254071], ["print ( (", -0.768873861552446], [") #NEWLINE# return #NEWLINE#", -0.7746050959440752], ["#NEWLINE# return #NEWLINE#", -0.779433232664969], [": #INDENT#", -0.783182675343754], ["#DEDENT# print (", -0.7918369649224526], ["#NEWLINE# return #NEWLINE# #DEDENT#", -0.7925746312675165], ["e", -0.8321841217505657], ["cur", -0.841186364144722], ["return #NEWLINE# #DEDENT#", -0.8703403601169077], ["return #NEWLINE#", -0.8789359551935706], ["v", -0.906577128793725], [") ) )", -0.923234311598138], [";", -0.9530223331818205], ["#NEWLINE# ;", -0.9530223331818205], ["p", -0.9542746128930335], ["tmp", -0.9653665463550363], ["if (", -0.9930581798576926], ["cnt", -1.0221941475838967], ["l", -1.178317208654151], ["=", -1.188339860201104], ["-", -1.2637447646200872], ["[", -1.3031914823902995], ["]", -1.3262234605110086], ["d", -1.4458201122189958], ["*", -1.5273233165015807], ["ans", -1.7619964088789255]]}