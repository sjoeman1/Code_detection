{"columns": ["feature_names", "importances"], "data": [["the", 0.8290461301803589], ["(", 0.11295738816261292], [":", 0.0579964779317379], ["~ print ( i", 0.0], ["draw at least", 0.0], ["done to the last", 0.0], ["door", 0.0], ["door frame", 0.0], ["door frame divide", 0.0], ["door frame divide the", 0.0], ["dp", 0.0], ["dp )", 0.0], ["dp ) print", 0.0], ["dp ) print (", 0.0], ["draw", 0.0], ["draw at", 0.0], ["draw no", 0.0], ["draw at least one", 0.0], ["done to", 0.0], ["draw no extra", 0.0], ["draw no extra tiles", 0.0], ["dress", 0.0], ["dress eaten", 0.0], ["dress eaten by", 0.0], ["dress eaten by the", 0.0], ["dresses", 0.0], ["dresses in", 0.0], ["dresses in the", 0.0], ["dresses in the end", 0.0], ["dresses print", 0.0], ["done to the", 0.0], ["divisor print the maximum", 0.0], ["done", 0.0], ["dresses print the result", 0.0], ["distance covered by both", 0.0], ["distance from", 0.0], ["distance from the", 0.0], ["distance from the wall", 0.0], ["distance that", 0.0], ["distance that willman", 0.0], ["distance that willman and", 0.0], ["distinct", 0.0], ["distinct integers", 0.0], ["distinct integers the", 0.0], ["distinct integers the frog", 0.0], ["divide", 0.0], ["divide the", 0.0], ["divide the total", 0.0], ["divide the total length", 0.0], ["divisible", 0.0], ["divisible by", 0.0], ["divisible by 5", 0.0], ["divisible by 5 print", 0.0], ["divisor", 0.0], ["divisor of", 0.0], ["divisor of n", 0.0], ["divisor of n that", 0.0], ["divisor print", 0.0], ["divisor print the", 0.0], ["dresses print the", 0.0], ["drive", 0.0], ["distance covered", 0.0], ["each number check if", 0.0], ["each hand find", 0.0], ["each hand find the", 0.0], ["each letter", 0.0], ["each letter calculate", 0.0], ["each letter calculate the", 0.0], ["each manhole", 0.0], ["each manhole calculate", 0.0], ["each manhole calculate the", 0.0], ["each number", 0.0], ["each number calculate", 0.0], ["each number calculate the", 0.0], ["each number check", 0.0], ["each person", 0.0], ["drive and", 0.0], ["each person check", 0.0], ["each person check if", 0.0], ["each plate", 0.0], ["each plate print", 0.0], ["each plate print the", 0.0], ["each ribbon", 0.0], ["each ribbon determine", 0.0], ["each ribbon determine the", 0.0], ["each row", 0.0], ["each row ,", 0.0], ["each row , how", 0.0], ["each row number", 0.0], ["each hand", 0.0], ["each element", 0.0], ["each door frame divide", 0.0], ["each door frame", 0.0], ["drive and the", 0.0], ["drive and the time", 0.0], ["drive those", 0.0], ["drive those kilometers", 0.0], ["drive those kilometers calculate", 0.0], ["due", 0.0], ["due to", 0.0], ["due to lower", 0.0], ["due to lower rated", 0.0], ["e", 0.0], ["e )", 0.0], ["e ) print", 0.0], ["e ) print (", 0.0], ["e ,", 0.0], ["e , p", 0.0], ["e , p )", 0.0], ["e=", 0.0], ["e= ''", 0.0], ["e= '' ,", 0.0], ["e= '' , e", 0.0], ["each", 0.0], ["each bar", 0.0], ["each bar to", 0.0], ["each bar to find", 0.0], ["each door", 0.0], ["distance covered by", 0.0], ["distance between the ball", 0.0], ["distance between the minimum", 0.0], ["deleted print the result", 0.0], ["denied ,", 0.0], ["denied , they", 0.0], ["denied , they skip", 0.0], ["denied employees", 0.0], ["denied employees for", 0.0], ["denied employees for each", 0.0], ["deny", 0.0], ["deny the", 0.0], ["deny the vote", 0.0], ["deny the vote of", 0.0], ["depublicans", 0.0], ["depublicans faction", 0.0], ["depublicans faction ,", 0.0], ["depublicans faction , they", 0.0], ["depublicans faction mark", 0.0], ["depublicans faction mark that", 0.0], ["descending", 0.0], ["descending order", 0.0], ["descending order construct", 0.0], ["descending order construct the", 0.0], ["descending order place", 0.0], ["descending order place the", 0.0], ["desire", 0.0], ["determinant", 0.0], ["determinant is", 0.0], ["denied", 0.0], ["deleted print the", 0.0], ["determinant is 0 ,", 0.0], ["deleted print", 0.0], ["days until", 0.0], ["days until the", 0.0], ["days until the barn", 0.0], ["days update", 0.0], ["days update the", 0.0], ["days update the number", 0.0], ["decimal", 0.0], ["decimal number", 0.0], ["decimal number to", 0.0], ["decimal number to get", 0.0], ["decreasing", 0.0], ["decreasing block", 0.0], ["dedicated", 0.0], ["dedicated to", 0.0], ["dedicated to vlada", 0.0], ["dedicated to vlada s", 0.0], ["def", 0.0], ["def add", 0.0], ["def add (", 0.0], ["def add ( a", 0.0], ["define", 0.0], ["define password", 0.0], ["define password complexity", 0.0], ["define password complexity requirements", 0.0], ["deleted", 0.0], ["determinant is 0", 0.0], ["determinant of", 0.0], ["each side", 0.0], ["digit 7 print the", 0.0], ["digit print the", 0.0], ["digit print the digit", 0.0], ["digits", 0.0], ["digits in", 0.0], ["digits in descending", 0.0], ["digits in descending order", 0.0], ["digits in the", 0.0], ["digits in the year", 0.0], ["digits sort", 0.0], ["digits sort the", 0.0], ["digits sort the digits", 0.0], ["digits to", 0.0], ["digits to be", 0.0], ["digits to be deleted", 0.0], ["direction", 0.0], ["direction of", 0.0], ["direction of streets", 0.0], ["direction of streets check", 0.0], ["directions", 0.0], ["directions are", 0.0], ["directions are valid", 0.0], ["directions are valid ,", 0.0], ["distance", 0.0], ["distance between", 0.0], ["distance between the", 0.0], ["digit print", 0.0], ["digit 7 print", 0.0], ["determinant of the", 0.0], ["digit 7", 0.0], ["determinant of the matrix", 0.0], ["determine", 0.0], ["determine the", 0.0], ["determine the winner", 0.0], ["determine the winner print", 0.0], ["determined", 0.0], ["determined calculate", 0.0], ["determined calculate the", 0.0], ["determined calculate the area", 0.0], ["diagonals", 0.0], ["diagonals if", 0.0], ["diagonals if all", 0.0], ["diagonals if all else", 0.0], ["dictionary", 0.0], ["dictionary to", 0.0], ["dictionary to store", 0.0], ["dictionary to store the", 0.0], ["difference", 0.0], ["difference between", 0.0], ["difference between the", 0.0], ["difference between the pawns", 0.0], ["difference is", 0.0], ["difference is even", 0.0], ["difference is even ,", 0.0], ["digit", 0.0], ["each row number of", 0.0], ["each side track", 0.0], ["days it takes", 0.0], ["exactly k-1 elements less", 0.0], ["every", 0.0], ["every day", 0.0], ["every day calculate", 0.0], ["every day calculate the", 0.0], ["every day print", 0.0], ["every day print the", 0.0], ["everyone", 0.0], ["everyone 's", 0.0], ["everyone 's desire", 0.0], ["exactly", 0.0], ["exactly k-1", 0.0], ["exactly k-1 elements", 0.0], ["exactly one", 0.0], ["each side track whether", 0.0], ["exactly one zero", 0.0], ["exactly one zero in", 0.0], ["examples", 0.0], ["examples print", 0.0], ["examples print the", 0.0], ["examples print the minimum", 0.0], ["exceeding", 0.0], ["exceeding b", 0.0], ["exceeding b remove", 0.0], ["exceeding b remove leading", 0.0], ["exchanges", 0.0], ["exchanges print", 0.0], ["even , polycarp wins", 0.0], ["even , polycarp", 0.0], ["even ,", 0.0], ["even", 0.0], ["enough", 0.0], ["enough grapes", 0.0], ["enough grapes to", 0.0], ["enough grapes to fulfill", 0.0], ["enough to", 0.0], ["enough to the", 0.0], ["enough to the goalpost", 0.0], ["enough to the wall", 0.0], ["enter", 0.0], ["enter ''", 0.0], ["enter '' )", 0.0], ["enter '' ) print", 0.0], ["equal", 0.0], ["equal ,", 0.0], ["equal , they", 0.0], ["equal , they tie", 0.0], ["equal to", 0.0], ["equal to k", 0.0], ["equal to k construct", 0.0], ["equal to n", 0.0], ["equal to n print", 0.0], ["erased", 0.0], ["erased print", 0.0], ["erased print the", 0.0], ["erased print the maximum", 0.0], ["exchanges print the", 0.0], ["exchanges print the minimum", 0.0], ["existing", 0.0], ["f ) print (", 0.0], ["f= ''", 0.0], ["f= '' ,", 0.0], ["f= '' , f", 0.0], ["f= [", 0.0], ["f= [ 0", 0.0], ["f= [ 0 ]", 0.0], ["faction", 0.0], ["faction ,", 0.0], ["faction , they", 0.0], ["faction , they deny", 0.0], ["faction if", 0.0], ["faction if the", 0.0], ["faction if the employee", 0.0], ["faction mark", 0.0], ["faction mark that", 0.0], ["faction mark that the", 0.0], ["factorial", 0.0], ["factorial of", 0.0], ["factorial of n", 0.0], ["factorial of n and", 0.0], ["fails", 0.0], ["fails ,", 0.0], ["fails , it", 0.0], ["fails , it 's", 0.0], ["fair", 0.0], ["f=", 0.0], ["f ) print", 0.0], ["existing copybooks", 0.0], ["f )", 0.0], ["existing copybooks calculate", 0.0], ["existing copybooks calculate the", 0.0], ["exists", 0.0], ["exists check", 0.0], ["exists check if", 0.0], ["exists check if the", 0.0], ["expected", 0.0], ["expected number", 0.0], ["expected number of", 0.0], ["expected number of caught", 0.0], ["expected number of dresses", 0.0], ["expression", 0.0], ["extra", 0.0], ["extra tile", 0.0], ["extra tile otherwise", 0.0], ["extra tile otherwise ,", 0.0], ["extra tiles", 0.0], ["extra tiles get", 0.0], ["extra tiles get the", 0.0], ["extra tiles print", 0.0], ["extra tiles print the", 0.0], ["f", 0.0], ["f (", 0.0], ["f ( i", 0.0], ["f ( i )", 0.0], ["ends in 10 000", 0.0], ["ends in 10", 0.0], ["ends in 1 ends", 0.0], ["element print the", 0.0], ["elements", 0.0], ["elements after", 0.0], ["elements after swapping", 0.0], ["elements after swapping one", 0.0], ["elements are", 0.0], ["elements are stack-sortable", 0.0], ["elements are stack-sortable create", 0.0], ["elements calculate", 0.0], ["elements calculate the", 0.0], ["elements calculate the distance", 0.0], ["elements in", 0.0], ["elements in descending", 0.0], ["elements in descending order", 0.0], ["elements in their", 0.0], ["elements in their original", 0.0], ["elements less", 0.0], ["elements less than", 0.0], ["elements less than right", 0.0], ["elements that", 0.0], ["elements that can", 0.0], ["elements that can be", 0.0], ["else", 0.0], ["else fails", 0.0], ["else fails ,", 0.0], ["else fails , it", 0.0], ["element print the maximum", 0.0], ["element print", 0.0], ["employee 's", 0.0], ["element", 0.0], ["each sofa", 0.0], ["each sofa calculate", 0.0], ["each sofa calculate the", 0.0], ["each species", 0.0], ["each species being", 0.0], ["each species being the", 0.0], ["each type", 0.0], ["each type that", 0.0], ["each type that can", 0.0], ["eat", 0.0], ["eat calculate", 0.0], ["eat calculate the", 0.0], ["eat calculate the total", 0.0], ["eat grains", 0.0], ["eat grains by", 0.0], ["eat grains by sparrows", 0.0], ["eaten", 0.0], ["eaten by", 0.0], ["eaten by the", 0.0], ["eaten by the wardrobe", 0.0], ["edvard", 0.0], ["edvard 's", 0.0], ["edvard 's apartment", 0.0], ["edvard 's apartment calculate", 0.0], ["edvard 's apartment to", 0.0], ["employee", 0.0], ["employee 's faction", 0.0], ["ends in 1", 0.0], ["employees making their statements", 0.0], ["employees will make", 0.0], ["employees will make their", 0.0], ["empty", 0.0], ["empty bring", 0.0], ["empty bring grains", 0.0], ["empty bring grains to", 0.0], ["empty iterate", 0.0], ["empty iterate over", 0.0], ["empty iterate over the", 0.0], ["encode", 0.0], ["encode a", 0.0], ["encode a message", 0.0], ["encode a message of", 0.0], ["end", 0.0], ["end calculate", 0.0], ["end calculate the", 0.0], ["end calculate the winner", 0.0], ["end game", 0.0], ["end game wo", 0.0], ["end game wo n't", 0.0], ["end of", 0.0], ["end of the", 0.0], ["end of the year", 0.0], ["ends", 0.0], ["ends in", 0.0], ["employees will", 0.0], ["employees making their", 0.0], ["employee 's faction if", 0.0], ["employees making", 0.0], ["employee from", 0.0], ["employee from the", 0.0], ["employee from the depublicans", 0.0], ["employee from the remocrats", 0.0], ["employee has", 0.0], ["employee has already", 0.0], ["employee has already made", 0.0], ["employee has made", 0.0], ["employee has made their", 0.0], ["employee is", 0.0], ["employee is from", 0.0], ["employee is from the", 0.0], ["employee votes", 0.0], ["employee votes print", 0.0], ["employee votes print the", 0.0], ["employees", 0.0], ["employees for", 0.0], ["employees for each", 0.0], ["employees for each side", 0.0], ["employees have", 0.0], ["employees have made", 0.0], ["employees have made their", 0.0], ["employees in", 0.0], ["employees in the", 0.0], ["employees in the order", 0.0], ["days it takes for", 0.0], ["days it", 0.0], ["fair nut can", 0.0], ["can split a", 0.0], ["can not", 0.0], ["can not be", 0.0], ["can not be uniquely", 0.0], ["can not pour", 0.0], ["can not pour his", 0.0], ["can reach", 0.0], ["can reach from", 0.0], ["can reach from position", 0.0], ["can spend", 0.0], ["can spend together", 0.0], ["can spend together print", 0.0], ["can split", 0.0], ["can split a node", 0.0], ["can be caught in", 0.0], ["candies", 0.0], ["candies that", 0.0], ["candies that om", 0.0], ["candies that om nom", 0.0], ["candy", 0.0], ["candy cane", 0.0], ["candy cane ,", 0.0], ["candy cane , remove", 0.0], ["candy canes", 0.0], ["candy canes and", 0.0], ["candy canes and snowflakes", 0.0], ["candy canes is", 0.0], ["can get to or", 0.0], ["can get to", 0.0], ["can get", 0.0], ["can encode a message", 0.0], ["can be erased", 0.0], ["can be erased print", 0.0], ["can be gained", 0.0], ["can be gained from", 0.0], ["can be poured", 0.0], ["can be poured from", 0.0], ["can be put", 0.0], ["can be put on", 0.0], ["can be transformed", 0.0], ["can be transformed if", 0.0], ["can be written", 0.0], ["can be written calculate", 0.0], ["can cover", 0.0], ["can cover a", 0.0], ["can cover a greater", 0.0], ["can cover if", 0.0], ["can cover if the", 0.0], ["can drive", 0.0], ["can drive and", 0.0], ["can drive and the", 0.0], ["can eat", 0.0], ["can eat calculate", 0.0], ["can eat calculate the", 0.0], ["can encode", 0.0], ["can encode a", 0.0], ["candy canes is greater", 0.0], ["cane", 0.0], ["cane ,", 0.0], ["center subtract k from", 0.0], ["character of", 0.0], ["character of the", 0.0], ["character of the string", 0.0], ["check", 0.0], ["check columns", 0.0], ["check columns check", 0.0], ["check columns check diagonals", 0.0], ["check diagonals", 0.0], ["check diagonals if", 0.0], ["check diagonals if all", 0.0], ["check if", 0.0], ["check if a", 0.0], ["check if a string", 0.0], ["check if the", 0.0], ["check if the ball", 0.0], ["check if the first", 0.0], ["check if the frame", 0.0], ["check if the game", 0.0], ["check if the grids", 0.0], ["check if the input", 0.0], ["check if the number", 0.0], ["check if the pedestrian", 0.0], ["check if the pixel", 0.0], ["check if the records", 0.0], ["check if the remaining", 0.0], ["character", 0.0], ["center subtract k", 0.0], ["cane , remove", 0.0], ["center subtract", 0.0], ["cane , remove it", 0.0], ["canes", 0.0], ["canes and", 0.0], ["canes and snowflakes", 0.0], ["canes and snowflakes if", 0.0], ["canes is", 0.0], ["canes is greater", 0.0], ["canes is greater than", 0.0], ["car", 0.0], ["car and", 0.0], ["car and walk", 0.0], ["car and walk to", 0.0], ["caught", 0.0], ["caught fishes", 0.0], ["caught fishes print", 0.0], ["caught fishes print the", 0.0], ["caught in", 0.0], ["caught in a", 0.0], ["caught in a given", 0.0], ["cell", 0.0], ["cell number", 0.0], ["cell where", 0.0], ["cell where lara", 0.0], ["cell where lara will", 0.0], ["center", 0.0], ["can be consistent", 0.0], ["can be caught", 0.0], ["check if the round", 0.0], ["calculate the angle of", 0.0], ["ca n't have leading", 0.0], ["calculate", 0.0], ["calculate how", 0.0], ["calculate how many", 0.0], ["calculate how many times", 0.0], ["calculate maximum", 0.0], ["calculate maximum value", 0.0], ["calculate maximum value find", 0.0], ["calculate the", 0.0], ["calculate the abscissa", 0.0], ["calculate the abscissa of", 0.0], ["calculate the angle", 0.0], ["calculate the answer", 0.0], ["can be bought with", 0.0], ["calculate the answer print", 0.0], ["calculate the area", 0.0], ["calculate the area of", 0.0], ["calculate the ball", 0.0], ["calculate the ball 's", 0.0], ["calculate the beauty", 0.0], ["calculate the beauty of", 0.0], ["calculate the binary", 0.0], ["calculate the binary representation", 0.0], ["calculate the determinant", 0.0], ["calculate the determinant of", 0.0], ["calculate the difference", 0.0], ["ca n't have", 0.0], ["ca n't", 0.0], ["ca", 0.0], ["c+b want n-1 splits", 0.0], ["by the length of", 0.0], ["by the wardrobe", 0.0], ["by the wardrobe find", 0.0], ["by type", 0.0], ["by type and", 0.0], ["by type and then", 0.0], ["by x", 0.0], ["by x print", 0.0], ["by x print the", 0.0], ["c", 0.0], ["c )", 0.0], ["c ,", 0.0], ["c , count", 0.0], ["c , count ]", 0.0], ["c+a", 0.0], ["c+a ,", 0.0], ["c+a , c+b", 0.0], ["c+a , c+b want", 0.0], ["c+a+b", 0.0], ["c+a+b new", 0.0], ["c+a+b new nodes", 0.0], ["c+a+b new nodes have", 0.0], ["c+b", 0.0], ["c+b want", 0.0], ["c+b want n-1", 0.0], ["calculate the difference between", 0.0], ["calculate the distance", 0.0], ["calculate the distance between", 0.0], ["calculate the number", 0.0], ["calculate the overlapping", 0.0], ["calculate the overlapping minutes", 0.0], ["calculate the possible", 0.0], ["calculate the possible sizes", 0.0], ["calculate the probability", 0.0], ["calculate the probability of", 0.0], ["calculate the row", 0.0], ["calculate the row and", 0.0], ["calculate the second", 0.0], ["calculate the second progression", 0.0], ["calculate the sum", 0.0], ["calculate the sum of", 0.0], ["calculate the time", 0.0], ["calculate the time it", 0.0], ["calculate the total", 0.0], ["calculate the total cost", 0.0], ["calculate the total length", 0.0], ["calculate the total number", 0.0], ["calculate the winner", 0.0], ["calculate the winner print", 0.0], ["can", 0.0], ["can be", 0.0], ["can be a", 0.0], ["can be a telephone", 0.0], ["can be bought", 0.0], ["calculate the number of", 0.0], ["calculate the multiples of", 0.0], ["calculate the distance from", 0.0], ["calculate the multiples", 0.0], ["calculate the expected", 0.0], ["calculate the expected number", 0.0], ["calculate the factorial", 0.0], ["calculate the factorial of", 0.0], ["calculate the finger", 0.0], ["calculate the finger movements", 0.0], ["calculate the first", 0.0], ["calculate the first progression", 0.0], ["calculate the length", 0.0], ["calculate the length of", 0.0], ["calculate the maximum", 0.0], ["calculate the maximum distance", 0.0], ["calculate the maximum divisor", 0.0], ["calculate the maximum messiness", 0.0], ["calculate the maximum number", 0.0], ["calculate the maximum possible", 0.0], ["calculate the maximum subarray", 0.0], ["calculate the minimum", 0.0], ["calculate the minimum amount", 0.0], ["calculate the minimum cost", 0.0], ["calculate the minimum decimal", 0.0], ["calculate the minimum grapes", 0.0], ["calculate the minimum number", 0.0], ["calculate the minimum operations", 0.0], ["calculate the minimum time", 0.0], ["check if the required", 0.0], ["check if the string", 0.0], ["days", 0.0], ["cost of", 0.0], ["cos^2 ( 0-90", 0.0], ["cos^2 ( 0-90 )", 0.0], ["cost", 0.0], ["cost 0", 0.0], ["cost 0 )", 0.0], ["cost 0 ) can", 0.0], ["cost and", 0.0], ["cost and the", 0.0], ["cost and the value", 0.0], ["cost c+a+b", 0.0], ["cost c+a+b new", 0.0], ["cost c+a+b new nodes", 0.0], ["cost of buying", 0.0], ["coordinates of the", 0.0], ["cost of buying the", 0.0], ["cost of each", 0.0], ["cost of each letter", 0.0], ["cost of the", 0.0], ["cost of the alphabet", 0.0], ["cost u", 0.0], ["cost u ,", 0.0], ["cost u , v", 0.0], ["costs", 0.0], ["costs c+a", 0.0], ["costs c+a ,", 0.0], ["costs c+a , c+b", 0.0], ["cos^2 (", 0.0], ["cos^2", 0.0], ["cos = x/sqrt (", 0.0], ["cos = x/sqrt", 0.0], ["copy", 0.0], ["copy operation", 0.0], ["copy operation ,", 0.0], ["copy operation , the", 0.0], ["copybooks", 0.0], ["copybooks calculate", 0.0], ["copybooks calculate the", 0.0], ["copybooks calculate the minimum", 0.0], ["copybooks print", 0.0], ["copybooks print the", 0.0], ["copybooks print the minimum", 0.0], ["copybooks that", 0.0], ["copybooks that can", 0.0], ["copybooks that can be", 0.0], ["corner", 0.0], ["corner pocket", 0.0], ["corner pocket the", 0.0], ["corner pocket the ball", 0.0], ["cos", 0.0], ["cos ,", 0.0], ["cos , cos^2", 0.0], ["cos , cos^2 (", 0.0], ["cos =", 0.0], ["cos = (", 0.0], ["cos = ( v1", 0.0], ["count", 0.0], ["count ]", 0.0], ["count ] cost", 0.0], ["create a function to", 0.0], ["create a list to", 0.0], ["create a map", 0.0], ["create a map to", 0.0], ["create grids", 0.0], ["create grids check", 0.0], ["create grids check if", 0.0], ["ct", 0.0], ["ct ,", 0.0], ["ct , zeroes", 0.0], ["ct , zeroes [", 0.0], ["curcutlen", 0.0], ["curcutlen )", 0.0], ["curcutlen ) print", 0.0], ["curcutlen ) print (", 0.0], ["data.txt", 0.0], ["data.txt ''", 0.0], ["data.txt '' )", 0.0], ["data.txt '' ) 1", 0.0], ["day", 0.0], ["day calculate", 0.0], ["day calculate the", 0.0], ["day calculate the number", 0.0], ["day print", 0.0], ["day print the", 0.0], ["day print the number", 0.0], ["create a list", 0.0], ["create a function", 0.0], ["count ] cost u", 0.0], ["create a dictionary to", 0.0], ["count the", 0.0], ["count the number", 0.0], ["count the number of", 0.0], ["cover", 0.0], ["cover a", 0.0], ["cover a greater", 0.0], ["cover a greater distance", 0.0], ["cover if", 0.0], ["cover if the", 0.0], ["cover if the distance", 0.0], ["covered", 0.0], ["covered by", 0.0], ["covered by both", 0.0], ["covered by both athletes", 0.0], ["cow", 0.0], ["cow and", 0.0], ["cow and the", 0.0], ["cow and the lines", 0.0], ["cow can", 0.0], ["cow can reach", 0.0], ["create", 0.0], ["create a", 0.0], ["create a 2d", 0.0], ["create a 2d list", 0.0], ["create a dictionary", 0.0], ["coordinates of the cow", 0.0], ["coordinates of", 0.0], ["check if there", 0.0], ["coding : utf-8", 0.0], ["co1 , co2", 0.0], ["co1 , co2 ,", 0.0], ["co2", 0.0], ["co2 ,", 0.0], ["co2 , ct", 0.0], ["co2 , ct ,", 0.0], ["code", 0.0], ["code is", 0.0], ["code is dedicated", 0.0], ["code is dedicated to", 0.0], ["coding", 0.0], ["coding :", 0.0], ["coding : utf-8 -", 0.0], ["coordinates if the determinant", 0.0], ["column", 0.0], ["column of", 0.0], ["column of the", 0.0], ["column of the cell", 0.0], ["columns", 0.0], ["columns check", 0.0], ["columns check diagonals", 0.0], ["columns check diagonals if", 0.0], ["columns print", 0.0], ["columns print the", 0.0], ["columns print the number", 0.0], ["come", 0.0], ["co1 ,", 0.0], ["co1", 0.0], ["close enough to the", 0.0], ["close enough to", 0.0], ["check if there are", 0.0], ["check if there is", 0.0], ["check rows", 0.0], ["check rows check", 0.0], ["check rows check columns", 0.0], ["chk1", 0.0], ["chk1 )", 0.0], ["chk1 ) !", 0.0], ["chk1 ) ! *", 0.0], ["chk1 -", 0.0], ["chk1 - chk_r", 0.0], ["chk1 - chk_r -", 0.0], ["chk_r", 0.0], ["chk_r )", 0.0], ["chk_r ) !", 0.0], ["chk_r ) ! *", 0.0], ["chk_r -", 0.0], ["chk_r - 1", 0.0], ["chk_r - 1 )", 0.0], ["chocolates", 0.0], ["chocolates print", 0.0], ["chocolates print the", 0.0], ["chocolates print the answer", 0.0], ["close", 0.0], ["close enough", 0.0], ["come every", 0.0], ["come every day", 0.0], ["come every day calculate", 0.0], ["construct the maximum", 0.0], ["construct the message", 0.0], ["construct the message if", 0.0], ["contains", 0.0], ["contains the", 0.0], ["contains the digit", 0.0], ["contains the digit 7", 0.0], ["content", 0.0], ["content as", 0.0], ["content as the", 0.0], ["content as the previous", 0.0], ["convert", 0.0], ["convert a", 0.0], ["convert a to", 0.0], ["convert a to a", 0.0], ["convert the", 0.0], ["convert the number", 0.0], ["convert the number to", 0.0], ["convert the year", 0.0], ["convert the year to", 0.0], ["convert time_str", 0.0], ["convert time_str to", 0.0], ["convert time_str to hours", 0.0], ["coordinates", 0.0], ["coordinates if", 0.0], ["coordinates if the", 0.0], ["construct the maximum number", 0.0], ["construct the", 0.0], ["come every day print", 0.0], ["construct", 0.0], ["common", 0.0], ["common multiples", 0.0], ["common multiples count", 0.0], ["common multiples count the", 0.0], ["complexity", 0.0], ["complexity requirements", 0.0], ["complexity requirements print", 0.0], ["complexity requirements print the", 0.0], ["conditions", 0.0], ["conditions print", 0.0], ["conditions print the", 0.0], ["conditions print the number", 0.0], ["consecutive", 0.0], ["consecutive elements", 0.0], ["consecutive elements that", 0.0], ["consecutive elements that can", 0.0], ["consecutive subarray", 0.0], ["consecutive subarray by", 0.0], ["consecutive subarray by x", 0.0], ["consistent", 0.0], ["constant", 0.0], ["constant block", 0.0], ["constant block decreasing", 0.0], ["constant block decreasing block", 0.0], ["constant up", 0.0], ["fair nut", 0.0], ["fair nut can not", 0.0], ["by the coordinates if", 0.0], ["input string is", 0.0], ["input calculate", 0.0], ["input calculate maximum", 0.0], ["input calculate maximum value", 0.0], ["input calculate the", 0.0], ["input calculate the distance", 0.0], ["input check", 0.0], ["input check if", 0.0], ["input check if the", 0.0], ["input create", 0.0], ["input create grids", 0.0], ["input create grids check", 0.0], ["input string", 0.0], ["input string is an", 0.0], ["incidence and", 0.0], ["input ticket", 0.0], ["input ticket number", 0.0], ["input ticket number calculate", 0.0], ["int", 0.0], ["int ,", 0.0], ["int , input", 0.0], ["int , input (", 0.0], ["integers", 0.0], ["integers in", 0.0], ["integers in the", 0.0], ["integers in the intersection", 0.0], ["integers such", 0.0], ["input ( ) .split", 0.0], ["input ( )", 0.0], ["input (", 0.0], ["input", 0.0], ["incidence and reflection calculate", 0.0], ["increasing", 0.0], ["increasing block", 0.0], ["increasing block constant", 0.0], ["increasing block constant block", 0.0], ["increment", 0.0], ["increment the", 0.0], ["increment the number", 0.0], ["increment the number of", 0.0], ["increment the year", 0.0], ["increment the year until", 0.0], ["indefinitely", 0.0], ["index", 0.0], ["index of", 0.0], ["index of the", 0.0], ["index of the maximum", 0.0], ["index of the nearest", 0.0], ["inf", 0.0], ["inf ''", 0.0], ["inf '' print", 0.0], ["inf '' print the", 0.0], ["information", 0.0], ["information about", 0.0], ["information about each", 0.0], ["information about each sofa", 0.0], ["integers such that", 0.0], ["integers such that their", 0.0], ["integers the", 0.0], ["is 8 and the", 0.0], ["is a copy", 0.0], ["is a copy operation", 0.0], ["is a path", 0.0], ["is a path between", 0.0], ["is a path if", 0.0], ["is already", 0.0], ["is already a", 0.0], ["is already a koutsu", 0.0], ["is also", 0.0], ["is also green", 0.0], ["is also green .", 0.0], ["is an", 0.0], ["is an accordion", 0.0], ["is an accordion if", 0.0], ["is asked", 0.0], ["is asked calculate", 0.0], ["is asked calculate how", 0.0], ["is asked calculate the", 0.0], ["is balanced", 0.0], ["is dedicated", 0.0], ["is dedicated to", 0.0], ["is dedicated to vlada", 0.0], ["is denied", 0.0], ["is denied ,", 0.0], ["is denied , they", 0.0], ["is a", 0.0], ["is 8 and", 0.0], ["integers the frog", 0.0], ["is 8", 0.0], ["integers the frog can", 0.0], ["intersection", 0.0], ["intersection print", 0.0], ["intersection print the", 0.0], ["intersection print the number", 0.0], ["interval", 0.0], ["interval [", 0.0], ["interval [ l", 0.0], ["interval [ l ,", 0.0], ["into", 0.0], ["into a", 0.0], ["into a corner", 0.0], ["into a corner pocket", 0.0], ["into a pocket", 0.0], ["into a pocket the", 0.0], ["into two", 0.0], ["into two other", 0.0], ["into two other nodes", 0.0], ["is", 0.0], ["is 0", 0.0], ["is 0 ,", 0.0], ["is 0 , the", 0.0], ["is 11", 0.0], ["is 11 check", 0.0], ["is 11 check if", 0.0], ["incidence and reflection", 0.0], ["incidence", 0.0], ["if the frame", 0.0], ["illegal , min of", 0.0], ["if the string is", 0.0], ["if there", 0.0], ["if there are", 0.0], ["if there are enough", 0.0], ["if there are exactly", 0.0], ["if there is", 0.0], ["if there is a", 0.0], ["if there is already", 0.0], ["if there is no", 0.0], ["illegal", 0.0], ["illegal ,", 0.0], ["illegal , min", 0.0], ["illegal :", 0.0], ["in which employees will", 0.0], ["illegal : pop", 0.0], ["illegal : pop this", 0.0], ["impossible", 0.0], ["impossible calculate", 0.0], ["impossible calculate the", 0.0], ["impossible calculate the number", 0.0], ["impossible get", 0.0], ["impossible get the", 0.0], ["impossible get the input", 0.0], ["impossible to", 0.0], ["impossible to score", 0.0], ["impossible to score calculate", 0.0], ["if the string can", 0.0], ["if the string", 0.0], ["if the round is", 0.0], ["if the round", 0.0], ["if the game", 0.0], ["if the game will", 0.0], ["if the grids", 0.0], ["if the grids are", 0.0], ["if the input", 0.0], ["if the input string", 0.0], ["if the junctions", 0.0], ["if the junctions are", 0.0], ["if the letter", 0.0], ["if the letter is", 0.0], ["if the next", 0.0], ["if the next lucky", 0.0], ["if the number", 0.0], ["if the number of", 0.0], ["if the pedestrian", 0.0], ["if the pedestrian light", 0.0], ["if the pixel", 0.0], ["if the pixel is", 0.0], ["if the records", 0.0], ["if the records can", 0.0], ["if the remaining", 0.0], ["if the remaining string", 0.0], ["if the required", 0.0], ["if the required frame", 0.0], ["if the required number", 0.0], ["in", 0.0], ["in 1", 0.0], ["in 1 ends", 0.0], ["in the end of", 0.0], ["in the interval", 0.0], ["in the interval [", 0.0], ["in the order", 0.0], ["in the order they", 0.0], ["in the same", 0.0], ["in the same year", 0.0], ["in the system", 0.0], ["in the system with", 0.0], ["in the year", 0.0], ["in the year find", 0.0], ["in their", 0.0], ["in their original", 0.0], ["in their original order", 0.0], ["in their original positions", 0.0], ["in tokitsukaze", 0.0], ["in tokitsukaze 's", 0.0], ["in tokitsukaze 's hand", 0.0], ["in total", 0.0], ["in total [", 0.0], ["in total [ c", 0.0], ["in vasya", 0.0], ["in vasya 's", 0.0], ["in vasya 's row", 0.0], ["in which", 0.0], ["in which employees", 0.0], ["in the intersection", 0.0], ["in the end", 0.0], ["in 1 ends in", 0.0], ["in the binary representation", 0.0], ["in 10", 0.0], ["in 10 000", 0.0], ["in 10 000 below", 0.0], ["in a", 0.0], ["in a consecutive", 0.0], ["in a consecutive subarray", 0.0], ["in a given", 0.0], ["in a given position", 0.0], ["in both", 0.0], ["in both groups", 0.0], ["in both groups calculate", 0.0], ["in descending", 0.0], ["in descending order", 0.0], ["in descending order construct", 0.0], ["in descending order place", 0.0], ["in each", 0.0], ["in each row", 0.0], ["in each row ,", 0.0], ["in each row number", 0.0], ["in range", 0.0], ["in range (", 0.0], ["in range ( getint", 0.0], ["in range ( n", 0.0], ["in the", 0.0], ["in the binary", 0.0], ["is divisible", 0.0], ["is divisible by", 0.0], ["is divisible by 5", 0.0], ["k calculate the sum", 0.0], ["k - 1 manholes", 0.0], ["k :", 0.0], ["k : last_level", 0.0], ["k =", 0.0], ["k = 1", 0.0], ["k = 1 while", 0.0], ["k between", 0.0], ["k between a", 0.0], ["k between a and", 0.0], ["k calculate", 0.0], ["k calculate the", 0.0], ["k calculate the number", 0.0], ["k construct", 0.0], ["is equal", 0.0], ["k construct the", 0.0], ["k construct the message", 0.0], ["k elements", 0.0], ["k elements are", 0.0], ["k elements are stack-sortable", 0.0], ["k elements in", 0.0], ["k elements in their", 0.0], ["k from", 0.0], ["k from the", 0.0], ["k from the number", 0.0], ["k in", 0.0], ["k in the", 0.0], ["k - 1", 0.0], ["k -", 0.0], ["k , a )", 0.0], ["k , a", 0.0], ["j=10 *", 0.0], ["j=10 * *", 0.0], ["j=10 * * (", 0.0], ["joy", 0.0], ["joy units", 0.0], ["joy units print", 0.0], ["joy units print the", 0.0], ["jump", 0.0], ["jump )", 0.0], ["junction", 0.0], ["junction and", 0.0], ["junction and any", 0.0], ["junction and any other", 0.0], ["junction iterate", 0.0], ["junction iterate over", 0.0], ["junction iterate over all", 0.0], ["junctions", 0.0], ["junctions are", 0.0], ["junctions are not", 0.0], ["junctions are not the", 0.0], ["junctions if", 0.0], ["junctions if the", 0.0], ["junctions if the junctions", 0.0], ["k", 0.0], ["k ,", 0.0], ["k in the system", 0.0], ["k print", 0.0], ["k print the", 0.0], ["keg", 0.0], ["keg if the", 0.0], ["keg if the fair", 0.0], ["kilometers", 0.0], ["kilometers calculate", 0.0], ["kilometers calculate the", 0.0], ["kilometers calculate the time", 0.0], ["kilometers that", 0.0], ["kilometers that vasiliy", 0.0], ["kilometers that vasiliy can", 0.0], ["koutsu", 0.0], ["koutsu or", 0.0], ["koutsu or shuntsu", 0.0], ["koutsu or shuntsu ,", 0.0], ["koutsu or shuntsu if", 0.0], ["kuro", 0.0], ["kuro 's", 0.0], ["kuro 's ,", 0.0], ["kuro 's , shiro", 0.0], ["kvass", 0.0], ["kvass ,", 0.0], ["kvass , print", 0.0], ["kvass , print -1", 0.0], ["kvass that", 0.0], ["kvass that can", 0.0], ["kvass that can be", 0.0], ["keg if", 0.0], ["katie 's ribbons calculate", 0.0], ["k print the message", 0.0], ["katie 's ribbons", 0.0], ["k while", 0.0], ["k while j", 0.0], ["k while j <", 0.0], ["k-1", 0.0], ["k-1 elements", 0.0], ["k-1 elements less", 0.0], ["k-1 elements less than", 0.0], ["k-1 smaller", 0.0], ["k-1 smaller numbers", 0.0], ["k-1 smaller numbers if", 0.0], ["k-divisible", 0.0], ["k-divisible numbers", 0.0], ["k-th", 0.0], ["k-th digit", 0.0], ["k-th digit print", 0.0], ["k-th digit print the", 0.0], ["k-th manhole", 0.0], ["k-th manhole pick", 0.0], ["k-th manhole pick up", 0.0], ["k==0", 0.0], ["k==0 :", 0.0], ["k==0 : r+=1", 0.0], ["k==0 : r+=1 break", 0.0], ["katie", 0.0], ["katie 's", 0.0], ["j=10", 0.0], ["j+=1 print ( )", 0.0], ["j+=1 print (", 0.0], ["is greater than the", 0.0], ["is green and", 0.0], ["is green and the", 0.0], ["is in", 0.0], ["is in the", 0.0], ["is in the same", 0.0], ["is larger", 0.0], ["is larger than", 0.0], ["is larger than b_rest", 0.0], ["is legal", 0.0], ["is legal print", 0.0], ["is legal print (", 0.0], ["is no", 0.0], ["is no koutsu", 0.0], ["is no koutsu or", 0.0], ["is not", 0.0], ["is not an", 0.0], ["is not an accordion", 0.0], ["is not close", 0.0], ["is not close enough", 0.0], ["is not equal", 0.0], ["is not equal to", 0.0], ["is optimal", 0.0], ["is optimal ,", 0.0], ["is optimal , plus", 0.0], ["is our", 0.0], ["is green", 0.0], ["is greater than", 0.0], ["is our answer for", 0.0], ["is greater", 0.0], ["is equal ,", 0.0], ["is equal , they", 0.0], ["is equal to", 0.0], ["is equal to k", 0.0], ["is even", 0.0], ["is even ,", 0.0], ["is even , polycarp", 0.0], ["is finite", 0.0], ["is finite ,", 0.0], ["is finite , return", 0.0], ["is followed", 0.0], ["is followed by", 0.0], ["is followed by a", 0.0], ["is for", 0.0], ["is for remaining", 0.0], ["is for remaining subproblems", 0.0], ["is found", 0.0], ["is found ,", 0.0], ["is found , print", 0.0], ["is found print", 0.0], ["is found print the", 0.0], ["is from", 0.0], ["is from the", 0.0], ["is from the depublicans", 0.0], ["is from the remocrats", 0.0], ["is our answer", 0.0], ["is rated", 0.0], ["j+=1 print", 0.0], ["it otherwise", 0.0], ["it otherwise , add", 0.0], ["it takes", 0.0], ["it takes for", 0.0], ["it takes for the", 0.0], ["it takes to", 0.0], ["it takes to drive", 0.0], ["it takes to repair", 0.0], ["iterate", 0.0], ["iterate over", 0.0], ["iterate over all", 0.0], ["iterate over all junctions", 0.0], ["iterate over the", 0.0], ["iterate over the days", 0.0], ["iterate over the rows", 0.0], ["j", 0.0], ["j )", 0.0], ["j ) l=len", 0.0], ["j ) l=len (", 0.0], ["j ,", 0.0], ["j , np", 0.0], ["j , np ,", 0.0], ["j <", 0.0], ["j < i", 0.0], ["j < i :", 0.0], ["j+=1", 0.0], ["it otherwise ,", 0.0], ["it is not an", 0.0], ["is rated check", 0.0], ["it is not", 0.0], ["is rated check if", 0.0], ["is the", 0.0], ["is the athlete", 0.0], ["is the athlete who", 0.0], ["is unique", 0.0], ["is unique print", 0.0], ["is unique print the", 0.0], ["is unrated", 0.0], ["is unrated due", 0.0], ["is unrated due to", 0.0], ["is white", 0.0], ["is white and", 0.0], ["is white and not", 0.0], ["it", 0.0], ["it 's", 0.0], ["it 's a", 0.0], ["it 's a draw", 0.0], ["it 's available", 0.0], ["it 's available use", 0.0], ["it 's impossible", 0.0], ["it 's impossible to", 0.0], ["it if", 0.0], ["it if the", 0.0], ["it if the letter", 0.0], ["it is", 0.0], ["if the frame is", 0.0], ["if the first k", 0.0], ["fall", 0.0], ["frame check", 0.0], ["formed", 0.0], ["formed by", 0.0], ["formed by the", 0.0], ["formed by the coordinates", 0.0], ["found", 0.0], ["found ,", 0.0], ["found , print", 0.0], ["found , print no", 0.0], ["found print", 0.0], ["found print the", 0.0], ["found print the number", 0.0], ["frame", 0.0], ["frame check if", 0.0], ["for each door", 0.0], ["frame check if the", 0.0], ["frame divide", 0.0], ["frame divide the", 0.0], ["frame divide the total", 0.0], ["frame exists", 0.0], ["frame exists check", 0.0], ["frame exists check if", 0.0], ["frame is", 0.0], ["frame is optimal", 0.0], ["frog", 0.0], ["frog can", 0.0], ["frog can reach", 0.0], ["for the barn to", 0.0], ["for the barn", 0.0], ["for the", 0.0], ["for remaining subproblems for", 0.0], ["for each hand", 0.0], ["for each hand find", 0.0], ["for each number", 0.0], ["for each number calculate", 0.0], ["for each number check", 0.0], ["for each person", 0.0], ["for each person check", 0.0], ["for each side", 0.0], ["for each side track", 0.0], ["for fully", 0.0], ["for fully solved", 0.0], ["for fully solved for", 0.0], ["for i", 0.0], ["for i from", 0.0], ["for i from 0", 0.0], ["for i in", 0.0], ["for i in range", 0.0], ["for mike", 0.0], ["for mike 's", 0.0], ["for mike 's number", 0.0], ["for partially", 0.0], ["for partially solved", 0.0], ["for partially solved remaining_time", 0.0], ["for remaining", 0.0], ["for remaining subproblems", 0.0], ["frog can reach from", 0.0], ["from", 0.0], ["from 0", 0.0], ["from the remocrats faction", 0.0], ["from the wall to", 0.0], ["fulfill", 0.0], ["fulfill everyone", 0.0], ["fulfill everyone 's", 0.0], ["fulfill everyone 's desire", 0.0], ["fully", 0.0], ["fully solve", 0.0], ["fully solve fully_solved", 0.0], ["fully solve fully_solved problems", 0.0], ["fully solved", 0.0], ["fully solved for", 0.0], ["fully solved for partially", 0.0], ["fully_solved", 0.0], ["fully_solved problems", 0.0], ["fully_solved problems ,", 0.0], ["fully_solved problems , remainder", 0.0], ["function", 0.0], ["function to", 0.0], ["function to check", 0.0], ["function to check if", 0.0], ["function to find", 0.0], ["function to find the", 0.0], ["gained", 0.0], ["gained from", 0.0], ["gained from selling", 0.0], ["from the wall", 0.0], ["from the remocrats", 0.0], ["from 0 to", 0.0], ["from the remaining manholes", 0.0], ["from 0 to m", 0.0], ["from edvard", 0.0], ["from edvard 's", 0.0], ["from edvard 's apartment", 0.0], ["from high", 0.0], ["from high to", 0.0], ["from high to low", 0.0], ["from position", 0.0], ["from position k", 0.0], ["from position k calculate", 0.0], ["from selling", 0.0], ["from selling update", 0.0], ["from selling update the", 0.0], ["from that", 0.0], ["from that same", 0.0], ["from that same part", 0.0], ["from the", 0.0], ["from the depublicans", 0.0], ["from the depublicans faction", 0.0], ["from the first", 0.0], ["from the first k", 0.0], ["from the first keg", 0.0], ["from the number", 0.0], ["from the number of", 0.0], ["from the remaining", 0.0], ["for each door frame", 0.0], ["for each", 0.0], ["if the first character", 0.0], ["find the maximum amount", 0.0], ["find the expected number", 0.0], ["find the index", 0.0], ["find the index of", 0.0], ["find the intersection", 0.0], ["find the intersection print", 0.0], ["find the k-th", 0.0], ["find the k-th digit", 0.0], ["find the lcm", 0.0], ["find the lcm of", 0.0], ["find the length", 0.0], ["find the length of", 0.0], ["find the maximum", 0.0], ["find the maximum length", 0.0], ["for a given parity", 0.0], ["find the maximum number", 0.0], ["find the maximum team", 0.0], ["find the minimum", 0.0], ["find the minimum cost", 0.0], ["find the minimum time", 0.0], ["find the multiple", 0.0], ["find the multiple of", 0.0], ["find the next", 0.0], ["find the next lucky", 0.0], ["find the number", 0.0], ["find the number of", 0.0], ["finger", 0.0], ["find the expected", 0.0], ["find the cost of", 0.0], ["find the cost", 0.0], ["find the common multiples", 0.0], ["fall into", 0.0], ["fall into a", 0.0], ["fall into a corner", 0.0], ["fall into a pocket", 0.0], ["fights", 0.0], ["fights and", 0.0], ["fights and the", 0.0], ["fights and the winner", 0.0], ["fights check", 0.0], ["fights check if", 0.0], ["fights check if the", 0.0], ["file", 0.0], ["file rewrite", 0.0], ["file rewrite the", 0.0], ["file rewrite the file", 0.0], ["file with", 0.0], ["file with the", 0.0], ["file with the same", 0.0], ["files", 0.0], ["files by", 0.0], ["files by type", 0.0], ["files by type and", 0.0], ["find", 0.0], ["find the", 0.0], ["find the common", 0.0], ["finger movements", 0.0], ["finger movements for", 0.0], ["finger movements for each", 0.0], ["first stone", 0.0], ["first stone on the", 0.0], ["fishes", 0.0], ["fishes print", 0.0], ["fishes print the", 0.0], ["fishes print the expected", 0.0], ["fishes that", 0.0], ["fishes that can", 0.0], ["fishes that can be", 0.0], ["floor", 0.0], ["floor of", 0.0], ["floor of edvard", 0.0], ["floor of edvard 's", 0.0], ["floor of natasha", 0.0], ["floor of natasha 's", 0.0], ["followed", 0.0], ["followed by", 0.0], ["followed by a", 0.0], ["followed by a candy", 0.0], ["followed by a snowflake", 0.0], ["for", 0.0], ["for _", 0.0], ["for _ in", 0.0], ["for _ in range", 0.0], ["for a", 0.0], ["for a given", 0.0], ["first stone on", 0.0], ["first spell if it", 0.0], ["finger movements for mike", 0.0], ["first spell if", 0.0], ["finite", 0.0], ["finite ,", 0.0], ["finite , return", 0.0], ["finite , return the", 0.0], ["first", 0.0], ["first character", 0.0], ["first character of", 0.0], ["first character of the", 0.0], ["first floor", 0.0], ["first floor of", 0.0], ["first floor of edvard", 0.0], ["first floor of natasha", 0.0], ["first k", 0.0], ["first k -", 0.0], ["first k - 1", 0.0], ["first k elements", 0.0], ["first k elements are", 0.0], ["first k elements in", 0.0], ["first keg", 0.0], ["first keg if", 0.0], ["first keg if the", 0.0], ["first progression", 0.0], ["first progression calculate", 0.0], ["first progression calculate the", 0.0], ["first spell", 0.0], ["gained from selling update", 0.0], ["game", 0.0], ["game will", 0.0], ["i , right", 0.0], ["how many times the", 0.0], ["i", 0.0], ["i )", 0.0], ["i ) for", 0.0], ["i ) for i", 0.0], ["i ,", 0.0], ["i , ans", 0.0], ["i , ans ,", 0.0], ["i , c", 0.0], ["i , c )", 0.0], ["i , j", 0.0], ["i , j ,", 0.0], ["i , right )", 0.0], ["game will end", 0.0], ["i , x", 0.0], ["i , x )", 0.0], ["i :", 0.0], ["i : x=str", 0.0], ["i : x=str (", 0.0], ["i ]", 0.0], ["i ] !", 0.0], ["i ] ! =", 0.0], ["i ] ,", 0.0], ["i ] , a", 0.0], ["i ] =", 0.0], ["i ] = len", 0.0], ["how many times", 0.0], ["how many numbers are", 0.0], ["how many numbers", 0.0], ["how many", 0.0], ["has to wait iterate", 0.0], ["have", 0.0], ["have leading", 0.0], ["have leading zeros", 0.0], ["have leading zeros .", 0.0], ["have made", 0.0], ["have made their", 0.0], ["have made their statements", 0.0], ["have prefix", 0.0], ["have prefix costs", 0.0], ["have prefix costs c+a", 0.0], ["high", 0.0], ["high to", 0.0], ["high to low", 0.0], ["high to low illegal", 0.0], ["his", 0.0], ["his glass", 0.0], ["his glass by", 0.0], ["his glass by s", 0.0], ["holds", 0.0], ["hours", 0.0], ["hours and", 0.0], ["hours and minutes", 0.0], ["hours and minutes calculate", 0.0], ["how", 0.0], ["i ] print", 0.0], ["i ] print (", 0.0], ["i from", 0.0], ["if it is", 0.0], ["if no", 0.0], ["if no path", 0.0], ["if no path is", 0.0], ["if s", 0.0], ["if s >", 0.0], ["if s > 0", 0.0], ["if sufflens", 0.0], ["if sufflens [", 0.0], ["if sufflens [ i", 0.0], ["if the", 0.0], ["if the ball", 0.0], ["if the ball is", 0.0], ["if the ball will", 0.0], ["if the determinant", 0.0], ["if the determinant is", 0.0], ["if the difference", 0.0], ["if the difference is", 0.0], ["if the distance", 0.0], ["if the distance covered", 0.0], ["if the employee", 0.0], ["if the employee has", 0.0], ["if the employee is", 0.0], ["if the fair", 0.0], ["if the fair nut", 0.0], ["if the first", 0.0], ["if it is not", 0.0], ["if it 's available", 0.0], ["i from 0", 0.0], ["if it 's", 0.0], ["i from 0 to", 0.0], ["i in", 0.0], ["i in range", 0.0], ["i in range (", 0.0], ["i+1", 0.0], ["i+1 ]", 0.0], ["i+1 ] )", 0.0], ["i=10", 0.0], ["i=10 *", 0.0], ["i=10 * *", 0.0], ["i=10 * * n", 0.0], ["idx", 0.0], ["idx done", 0.0], ["idx done to", 0.0], ["idx done to the", 0.0], ["if", 0.0], ["if a", 0.0], ["if a string", 0.0], ["if a string can", 0.0], ["if all", 0.0], ["if all else", 0.0], ["if all else fails", 0.0], ["if all years", 0.0], ["if all years in", 0.0], ["if it", 0.0], ["has to wait", 0.0], ["has to", 0.0], ["has made their statement", 0.0], ["getint (", 0.0], ["getint ( ) )", 0.0], ["given", 0.0], ["given conditions", 0.0], ["given conditions print", 0.0], ["given conditions print the", 0.0], ["given parity", 0.0], ["given parity calculate", 0.0], ["given parity calculate the", 0.0], ["given position", 0.0], ["given position calculate", 0.0], ["given position calculate the", 0.0], ["glass", 0.0], ["glass by", 0.0], ["glass by s", 0.0], ["glass by s liters", 0.0], ["goalpost", 0.0], ["goalpost ,", 0.0], ["goalpost , it", 0.0], ["goalpost , it 's", 0.0], ["goalpost if", 0.0], ["goalpost if the", 0.0], ["goalpost if the ball", 0.0], ["golden", 0.0], ["golden age", 0.0], ["golden age if", 0.0], ["getint ( )", 0.0], ["getint", 0.0], ["golden age print", 0.0], ["get to or from", 0.0], ["game will end game", 0.0], ["game wo", 0.0], ["game wo n't", 0.0], ["game wo n't end", 0.0], ["gcd", 0.0], ["gcd (", 0.0], ["gcd ( k", 0.0], ["gcd ( k ,", 0.0], ["get", 0.0], ["get from", 0.0], ["get from edvard", 0.0], ["get from edvard 's", 0.0], ["get k", 0.0], ["get k in", 0.0], ["get k in the", 0.0], ["get the", 0.0], ["get the employee", 0.0], ["get the employee 's", 0.0], ["get the input", 0.0], ["get the input check", 0.0], ["get the input ticket", 0.0], ["get the tiles", 0.0], ["get the tiles in", 0.0], ["get to", 0.0], ["get to or", 0.0], ["golden age if all", 0.0], ["golden age print the", 0.0], ["has made their", 0.0], ["green .", 0.0], ["green and the", 0.0], ["green and the light", 0.0], ["grids", 0.0], ["grids are", 0.0], ["grids are the", 0.0], ["grids are the same", 0.0], ["grids check", 0.0], ["grids check if", 0.0], ["grids check if the", 0.0], ["groups", 0.0], ["groups calculate", 0.0], ["groups calculate the", 0.0], ["groups calculate the minimum", 0.0], ["hand", 0.0], ["hand calculate", 0.0], ["hand calculate the", 0.0], ["hand calculate the minimum", 0.0], ["hand find", 0.0], ["hand find the", 0.0], ["hand find the maximum", 0.0], ["has", 0.0], ["has already", 0.0], ["has already made", 0.0], ["has already made their", 0.0], ["has made", 0.0], ["green and", 0.0], ["green", 0.0], ["good", 0.0], ["greater than the number", 0.0], ["good subset", 0.0], ["good subset print", 0.0], ["good subset print the", 0.0], ["grains", 0.0], ["grains by", 0.0], ["grains by sparrows", 0.0], ["grains by sparrows increment", 0.0], ["grains that", 0.0], ["grains that are", 0.0], ["grains that are brought", 0.0], ["grains to", 0.0], ["grains to the", 0.0], ["grains to the barn", 0.0], ["grapes", 0.0], ["grapes needed", 0.0], ["grapes needed for", 0.0], ["grapes needed for each", 0.0], ["grapes to", 0.0], ["grapes to fulfill", 0.0], ["grapes to fulfill everyone", 0.0], ["greater", 0.0], ["greater distance", 0.0], ["greater than", 0.0], ["greater than the", 0.0], ["greater than the minimum", 0.0], ["by the length", 0.0], ["by the", 0.0], ["by the coordinates", 0.0], [", the remaining employee", 0.0], [", shiro 's and", 0.0], [", suff", 0.0], [", suff ''", 0.0], [", suff '' )", 0.0], [", t", 0.0], [", t )", 0.0], [", the", 0.0], [", the area", 0.0], [", the area can", 0.0], [", the minimum", 0.0], [", the minimum operations", 0.0], [", the remaining", 0.0], [", the winner", 0.0], [", r )", 0.0], [", the winner is", 0.0], [", then", 0.0], [", then there", 0.0], [", then there is", 0.0], [", then this", 0.0], [", then this is", 0.0], [", they", 0.0], [", they deny", 0.0], [", they deny the", 0.0], [", they skip", 0.0], [", they skip their", 0.0], [", they tie", 0.0], [", shiro 's", 0.0], [", shiro", 0.0], [", sep='\\t ' )", 0.0], [", sep='\\t '", 0.0], [", r ]", 0.0], [", r ] ,", 0.0], [", r ] are", 0.0], [", r ] find", 0.0], [", remainder", 0.0], [", remainder is", 0.0], [", remainder is for", 0.0], [", remove", 0.0], [", remove it", 0.0], [", remove it otherwise", 0.0], [", repeat", 0.0], [", repeat it", 0.0], [", repeat it if", 0.0], [", return", 0.0], [", return ``", 0.0], [", return `` inf", 0.0], [", return impossible", 0.0], [", return impossible calculate", 0.0], [", return impossible get", 0.0], [", return the", 0.0], [", return the number", 0.0], [", return the smallest", 0.0], [", right", 0.0], [", right )", 0.0], [", sep='\\t", 0.0], [", they tie otherwise", 0.0], [", v", 0.0], [", v leaves", 0.0], ["- 1 -", 0.0], ["- 1 =", 0.0], ["- 1 = a/b", 0.0], ["- 1 manholes", 0.0], ["- 1 manholes pick", 0.0], ["- a/b", 0.0], ["- a/b 2", 0.0], ["- a/b 2 +", 0.0], ["- a/b 4", 0.0], ["- a/b 4 +", 0.0], ["- chk1", 0.0], ["- chk1 )", 0.0], ["- chk1 ) !", 0.0], ["- chk1 -", 0.0], ["- chk1 - chk_r", 0.0], ["- chk_r", 0.0], ["- chk_r )", 0.0], ["- chk_r ) !", 0.0], ["- chk_r -", 0.0], ["- chk_r - 1", 0.0], ["- coding", 0.0], ["- coding :", 0.0], ["- coding : utf-8", 0.0], ["- f", 0.0], ["- sufflens", 0.0], ["- sufflens [", 0.0], ["- 1 - chk1", 0.0], ["- 1 ) !", 0.0], [", v2", 0.0], ["- 1 )", 0.0], [", v2 )", 0.0], [", v2 ) /", 0.0], [", val", 0.0], [", val (", 0.0], [", val ( 0-360", 0.0], [", vasiliy", 0.0], [", vasiliy wins", 0.0], [", x", 0.0], [", x )", 0.0], [", x ) print", 0.0], [", x2", 0.0], [", x2 ,", 0.0], [", x2 , y1", 0.0], [", y1", 0.0], [", y1 )", 0.0], [", yhit", 0.0], [", yhit )", 0.0], [", zeroes", 0.0], [", zeroes [", 0.0], [", zeroes [ -1", 0.0], ["-", 0.0], ["- *", 0.0], ["- * -", 0.0], ["- * - coding", 0.0], ["- 1", 0.0], [", r ) i=10", 0.0], [", r", 0.0], [", 911 )", 0.0], [", co2 ,", 0.0], [", bl ) print", 0.0], [", bl ,", 0.0], [", bl , ptr", 0.0], [", c", 0.0], [", c )", 0.0], [", c+b", 0.0], [", c+b want", 0.0], [", c+b want n-1", 0.0], [", co1", 0.0], [", co1 ,", 0.0], [", co1 , co2", 0.0], [", co2", 0.0], [", co2 , ct", 0.0], [", ptr ) sorted", 0.0], [", cos^2", 0.0], [", cos^2 (", 0.0], [", cos^2 ( 0-90", 0.0], [", count", 0.0], [", count ]", 0.0], [", count ] cost", 0.0], [", ct", 0.0], [", ct ,", 0.0], [", ct , zeroes", 0.0], [", draw", 0.0], [", draw at", 0.0], [", draw at least", 0.0], [", bl )", 0.0], [", bl", 0.0], [", b ) :", 0.0], [", b )", 0.0], [", 911=b", 0.0], [", 911=b 9442=a", 0.0], [", 911=b 9442=a ,", 0.0], [", 9411", 0.0], [", 9411 )", 0.0], [", 9411 ) solve3", 0.0], [", 9411=b", 0.0], [", 9411=b print", 0.0], [", 9411=b print (", 0.0], [", a", 0.0], [", a )", 0.0], [", a ) !", 0.0], [", a [", 0.0], [", a [ i", 0.0], [", a [ i+1", 0.0], [", add", 0.0], [", add the", 0.0], [", add the letter", 0.0], [", al", 0.0], [", al ,", 0.0], [", al , bl", 0.0], [", ans", 0.0], [", ans ,", 0.0], [", ans , a", 0.0], [", b", 0.0], [", draw no", 0.0], [", draw no extra", 0.0], [", e", 0.0], [", left , right", 0.0], [", low ,", 0.0], [", low , left", 0.0], [", min", 0.0], [", min of", 0.0], [", min of a_rest", 0.0], [", np", 0.0], [", np ,", 0.0], [", np , co1", 0.0], [", p", 0.0], [", p )", 0.0], [", p ) print", 0.0], [", plus", 0.0], [", plus a", 0.0], [", plus a long", 0.0], [", polycarp", 0.0], [", polycarp wins", 0.0], [", polycarp wins otherwise", 0.0], [", print", 0.0], [", print -1", 0.0], [", print -1 otherwise", 0.0], [", print 0", 0.0], [", print no", 0.0], [", ptr", 0.0], [", ptr )", 0.0], [", ptr ) solve3", 0.0], [", low", 0.0], [", left ,", 0.0], [", e )", 0.0], [", left", 0.0], [", e ) print", 0.0], [", f", 0.0], [", f )", 0.0], [", f ) print", 0.0], [", find", 0.0], [", find the", 0.0], [", find the maximum", 0.0], [", how", 0.0], [", how many", 0.0], [", how many numbers", 0.0], [", increment", 0.0], [", increment the", 0.0], [", increment the year", 0.0], [", input", 0.0], [", input (", 0.0], [", input ( )", 0.0], [", it", 0.0], [", it 's", 0.0], [", it 's a", 0.0], [", it 's impossible", 0.0], [", j", 0.0], [", j ,", 0.0], [", j , np", 0.0], [", jump", 0.0], [", jump )", 0.0], ["- sufflens [ i", 0.0], ["- x", 0.0], ["- x )", 0.0], ["301 ) solve3 (", 0.0], ["2d list to", 0.0], ["2d list to store", 0.0], ["3", 0.0], ["3 -", 0.0], ["3 - a/b", 0.0], ["3 - a/b 4", 0.0], ["3 cos", 0.0], ["3 cos =", 0.0], ["3 cos = x/sqrt", 0.0], ["301", 0.0], ["301 )", 0.0], ["301 ) solve3", 0.0], ["31434123", 0.0], ["- x ) !", 0.0], ["31434123 ,", 0.0], ["31434123 , 13241234", 0.0], ["31434123 , 13241234 )", 0.0], ["3921,10000", 0.0], ["3921,10000 )", 0.0], ["3921,10000 ) solve3", 0.0], ["3921,10000 ) solve3 (", 0.0], ["4", 0.0], ["4 +", 0.0], ["4 + a/b", 0.0], ["4 + a/b -", 0.0], ["4940,5000", 0.0], ["2d list", 0.0], ["2d", 0.0], ["2015 count the number", 0.0], ["2015 count the", 0.0], ["10 000 below 100", 0.0], ["100", 0.0], ["100001", 0.0], ["100001 )", 0.0], ["11", 0.0], ["11 check", 0.0], ["11 check if", 0.0], ["11 check if the", 0.0], ["123", 0.0], ["123 ,", 0.0], ["123 , 301", 0.0], ["123 , 301 )", 0.0], ["13241234", 0.0], ["13241234 )", 0.0], ["13241234 ) solve3", 0.0], ["13241234 ) solve3 (", 0.0], ["168", 0.0], ["168 -", 0.0], ["168 - f", 0.0], ["2", 0.0], ["2 +", 0.0], ["2 + a/b", 0.0], ["2 + a/b -", 0.0], ["2015", 0.0], ["2015 count", 0.0], ["4940,5000 )", 0.0], ["4940,5000 ) solve3", 0.0], ["4940,5000 ) solve3 (", 0.0], ["9411=b", 0.0], ["9411=b print (", 0.0], ["9411=b print ( al", 0.0], ["942", 0.0], ["942 ,", 0.0], ["942 , 911", 0.0], ["942 , 911 )", 0.0], ["942=a", 0.0], ["942=a ,", 0.0], ["942=a , 911=b", 0.0], ["942=a , 911=b 9442=a", 0.0], ["9442", 0.0], ["9442 ,", 0.0], ["9442 , 9411", 0.0], ["9442 , 9411 )", 0.0], ["9442=a", 0.0], ["9442=a ,", 0.0], ["9442=a , 9411=b", 0.0], ["9442=a , 9411=b print", 0.0], ["982400", 0.0], ["982400 =", 0.0], ["982400 = b", 0.0], ["982400 = b 942=a", 0.0], ["9991020", 0.0], ["9991020 ,", 0.0], ["9991020 , 100001", 0.0], ["9411=b print", 0.0], ["9411 ) solve3 (", 0.0], ["499200", 0.0], ["9411 ) solve3", 0.0], ["499200 vs", 0.0], ["499200 vs 982400", 0.0], ["499200 vs 982400 =", 0.0], ["5", 0.0], ["5 print", 0.0], ["5 print the", 0.0], ["5 print the number", 0.0], ["7", 0.0], ["7 print", 0.0], ["7 print the", 0.0], ["7 print the minimum", 0.0], ["8", 0.0], ["8 and", 0.0], ["8 and the", 0.0], ["8 and the length", 0.0], ["911", 0.0], ["911 )", 0.0], ["911 ) solve3", 0.0], ["911 ) solve3 (", 0.0], ["911=b", 0.0], ["911=b 9442=a", 0.0], ["911=b 9442=a ,", 0.0], ["911=b 9442=a , 9411=b", 0.0], ["9411", 0.0], ["9411 )", 0.0], ["10 000 below", 0.0], ["10 000", 0.0], ["10", 0.0], ["/ ( n -", 0.0], ["/ ( x -", 0.0], ["/ |v1||v2|", 0.0], ["/b", 0.0], ["/b 1", 0.0], ["/b 1 -", 0.0], ["/b 1 - a/b", 0.0], ["/usr/bin/env", 0.0], ["/usr/bin/env python3", 0.0], ["/usr/bin/env python3 (", 0.0], ["/usr/bin/env python3 ( l", 0.0], ["0", 0.0], ["0 's", 0.0], ["0 's start", 0.0], ["0 's start with", 0.0], ["0 )", 0.0], ["0 ) can", 0.0], ["0 ) can split", 0.0], ["0 ,", 0.0], ["0 , the", 0.0], ["0 , the area", 0.0], ["0 ]", 0.0], ["0 ] *", 0.0], ["0 ] * k", 0.0], ["0 and", 0.0], ["0 and level", 0.0], ["/ ( x", 0.0], ["/ ( n", 0.0], ["0 and s", 0.0], ["/ (", 0.0], ["- x -", 0.0], ["- x - chk_r", 0.0], ["-1", 0.0], ["-1 ]", 0.0], ["-1 ] ,", 0.0], ["-1 ] , x2", 0.0], ["-1 otherwise", 0.0], ["-1 otherwise ,", 0.0], ["-1 otherwise , find", 0.0], [".", 0.0], [". illegal", 0.0], [". illegal ,", 0.0], [". illegal , min", 0.0], [". then", 0.0], [". then len", 0.0], [". then len (", 0.0], ["...", 0.0], ["... is", 0.0], ["... is optimal", 0.0], ["... is optimal ,", 0.0], [".split", 0.0], [".split (", 0.0], [".split ( )", 0.0], [".split ( ) )", 0.0], ["/", 0.0], ["0 and level <", 0.0], ["0 and s %", 0.0], ["1 while gcd (", 0.0], ["1 ) !", 0.0], ["1 -", 0.0], ["1 - a/b", 0.0], ["1 - a/b 2", 0.0], ["1 - chk1", 0.0], ["1 - chk1 )", 0.0], ["1 01", 0.0], ["1 01 001", 0.0], ["1 01 001 0001", 0.0], ["1 3", 0.0], ["1 3 -", 0.0], ["1 3 - a/b", 0.0], ["1 =", 0.0], ["1 = a/b", 0.0], ["1 = a/b +", 0.0], ["1 ends", 0.0], ["1 ends in", 0.0], ["1 ends in 10", 0.0], ["1 manholes", 0.0], ["1 manholes pick", 0.0], ["1 manholes pick up", 0.0], ["1 print", 0.0], ["1 print (", 0.0], ["1 print ( tmp_mass", 0.0], ["1 while", 0.0], ["1 while gcd", 0.0], ["1 ) ! /", 0.0], ["1 )", 0.0], ["0 to", 0.0], ["1", 0.0], ["0 to m", 0.0], ["0 to m print", 0.0], ["0-360", 0.0], ["0-360 )", 0.0], ["0-360 ) a/b+c", 0.0], ["0-360 ) a/b+c =", 0.0], ["0-90", 0.0], ["0-90 )", 0.0], ["0-90 ) ,", 0.0], ["0-90 ) , val", 0.0], ["000", 0.0], ["000 below", 0.0], ["000 below 100", 0.0], ["0001", 0.0], ["0001 ...", 0.0], ["0001 ... is", 0.0], ["0001 ... is optimal", 0.0], ["001", 0.0], ["001 0001", 0.0], ["001 0001 ...", 0.0], ["001 0001 ... is", 0.0], ["01", 0.0], ["01 001", 0.0], ["01 001 0001", 0.0], ["01 001 0001 ...", 0.0], [", 911 ) solve3", 0.0], [", 911", 0.0], ["l ,", 0.0], ["( a+bc )", 0.0], ["( `` r= ''", 0.0], ["( `` repermute", 0.0], ["( `` repermute ''", 0.0], ["( a", 0.0], ["( a )", 0.0], ["( a ) )", 0.0], ["( a ) -", 0.0], ["( a ) ==", 0.0], ["( a ) print", 0.0], ["( a ,", 0.0], ["( a , b", 0.0], ["( a+bc", 0.0], ["( a+bc ) /b", 0.0], ["( 123 , 301", 0.0], ["( al", 0.0], ["( al ,", 0.0], ["( al , bl", 0.0], ["( ans", 0.0], ["( ans )", 0.0], ["( ans ) print", 0.0], ["( b", 0.0], ["( b )", 0.0], ["( b ) )", 0.0], ["( b ) 499200", 0.0], ["( b ) for", 0.0], ["( b ) print", 0.0], ["( `` r=", 0.0], ["( `` pref ,", 0.0], ["( `` pref", 0.0], ["( `` f= ''", 0.0], ["( 31434123 ,", 0.0], ["( 31434123 , 13241234", 0.0], ["( 3921,10000", 0.0], ["( 3921,10000 )", 0.0], ["( 3921,10000 ) solve3", 0.0], ["( 4940,5000", 0.0], ["( 4940,5000 )", 0.0], ["( 4940,5000 ) solve3", 0.0], ["( 942", 0.0], ["( 942 ,", 0.0], ["( 942 , 911", 0.0], ["( 9442", 0.0], ["( 9442 ,", 0.0], ["( 9442 , 9411", 0.0], ["( 9991020", 0.0], ["( 9991020 ,", 0.0], ["( 9991020 , 100001", 0.0], ["( ``", 0.0], ["( `` data.txt", 0.0], ["( `` data.txt ''", 0.0], ["( `` e=", 0.0], ["( `` e= ''", 0.0], ["( `` enter", 0.0], ["( `` enter ''", 0.0], ["( `` f=", 0.0], ["( curcutlen", 0.0], ["( curcutlen )", 0.0], ["( curcutlen ) print", 0.0], ["( l ,", 0.0], ["( lborder", 0.0], ["( lborder )", 0.0], ["( lborder ) print", 0.0], ["( list", 0.0], ["( list (", 0.0], ["( list ( split", 0.0], ["( map", 0.0], ["( map (", 0.0], ["( map ( int", 0.0], ["( maxpreflen", 0.0], ["( maxpreflen )", 0.0], ["( maxpreflen ) print", 0.0], ["( maxsufflen", 0.0], ["( maxsufflen )", 0.0], ["( mincutlen", 0.0], ["( mincutlen )", 0.0], ["( mincutlen ) print", 0.0], ["( n", 0.0], ["( n )", 0.0], ["( n ) :", 0.0], ["( n ) print", 0.0], ["( n -", 0.0], ["( n - chk1", 0.0], ["( n - x", 0.0], ["( n-1", 0.0], ["( l , r", 0.0], ["( l", 0.0], ["( dp", 0.0], ["( k , a", 0.0], ["( dp )", 0.0], ["( dp ) print", 0.0], ["( e", 0.0], ["( e ,", 0.0], ["( e , p", 0.0], ["( getint", 0.0], ["( getint (", 0.0], ["( getint ( )", 0.0], ["( i", 0.0], ["( i )", 0.0], ["( i ) for", 0.0], ["( i ,", 0.0], ["( i , ans", 0.0], ["( i , c", 0.0], ["( i , j", 0.0], ["( i , right", 0.0], ["( i , x", 0.0], ["( int", 0.0], ["( int ,", 0.0], ["( int , input", 0.0], ["( j", 0.0], ["( j )", 0.0], ["( j ) l=len", 0.0], ["( k", 0.0], ["( k ,", 0.0], ["( 31434123", 0.0], ["( 123 ,", 0.0], [", 301 ) solve3", 0.0], ["'' , f", 0.0], ["' positions if the", 0.0], ["''", 0.0], ["'' )", 0.0], ["'' ) 1", 0.0], ["'' ) 1 01", 0.0], ["'' ) print", 0.0], ["'' ) print (", 0.0], ["'' ,", 0.0], ["'' , al", 0.0], ["'' , al ,", 0.0], ["'' , e", 0.0], ["'' , e )", 0.0], ["'' , f )", 0.0], ["( 123", 0.0], ["'' , r", 0.0], ["'' , r )", 0.0], ["'' print", 0.0], ["'' print the", 0.0], ["'' print the number", 0.0], ["'s", 0.0], ["'s ,", 0.0], ["'s , shiro", 0.0], ["'s , shiro 's", 0.0], ["'s a", 0.0], ["'s a draw", 0.0], ["'s and", 0.0], ["' positions if", 0.0], ["' positions", 0.0], ["' ) print (", 0.0], ["' ) print", 0.0], ["! *", 0.0], ["! * (", 0.0], ["! * ( n", 0.0], ["! /", 0.0], ["! / (", 0.0], ["! / ( n", 0.0], ["! / ( x", 0.0], ["! /usr/bin/env", 0.0], ["! /usr/bin/env python3", 0.0], ["! /usr/bin/env python3 (", 0.0], ["! =", 0.0], ["! = 1", 0.0], ["! = 1 print", 0.0], ["! = math.inf", 0.0], ["! = math.inf :", 0.0], ["#", 0.0], ["# print", 0.0], ["# print (", 0.0], ["# print ( )", 0.0], ["%", 0.0], ["% k==0", 0.0], ["% k==0 :", 0.0], ["% k==0 : r+=1", 0.0], ["'", 0.0], ["' )", 0.0], ["'s and katie", 0.0], ["'s and katie 's", 0.0], ["'s apartment", 0.0], ["'s row print", 0.0], ["'s start", 0.0], ["'s start with", 0.0], ["'s start with the", 0.0], ["'s trajectory", 0.0], ["'s trajectory check", 0.0], ["'s trajectory check if", 0.0], ["( )", 0.0], ["( ) )", 0.0], ["( ) ) )", 0.0], ["( ) ) :", 0.0], ["( ) .split", 0.0], ["( ) .split (", 0.0], ["( ) print", 0.0], ["( ) print (", 0.0], ["( *", 0.0], ["( * preflens", 0.0], ["( * preflens ,", 0.0], ["( * sufflens", 0.0], ["( * sufflens ,", 0.0], ["( 0-360", 0.0], ["( 0-360 )", 0.0], ["( 0-360 ) a/b+c", 0.0], ["( 0-90", 0.0], ["( 0-90 )", 0.0], ["( 0-90 ) ,", 0.0], ["'s row print the", 0.0], ["'s row number of", 0.0], ["'s apartment calculate", 0.0], ["'s row number", 0.0], ["'s apartment calculate the", 0.0], ["'s apartment to", 0.0], ["'s apartment to natasha", 0.0], ["'s available", 0.0], ["'s available use", 0.0], ["'s available use the", 0.0], ["'s desire", 0.0], ["'s faction", 0.0], ["'s faction if", 0.0], ["'s faction if the", 0.0], ["'s hand", 0.0], ["'s hand calculate", 0.0], ["'s hand calculate the", 0.0], ["'s impossible", 0.0], ["'s impossible to", 0.0], ["'s impossible to score", 0.0], ["'s number", 0.0], ["'s number is", 0.0], ["'s number is unique", 0.0], ["'s ribbons", 0.0], ["'s ribbons calculate", 0.0], ["'s ribbons calculate the", 0.0], ["'s row", 0.0], ["'s row add", 0.0], ["'s row add the", 0.0], ["( n-1 )", 0.0], ["( n-1 ) r=0", 0.0], ["( pos", 0.0], [") print ( maxpreflen", 0.0], [") print", 0.0], [") print (", 0.0], [") print ( *", 0.0], [") print ( ``", 0.0], [") print ( a", 0.0], [") print ( al", 0.0], [") print ( b", 0.0], [") print ( curcutlen", 0.0], [") print ( dp", 0.0], [") print ( e", 0.0], [") print ( i", 0.0], [") print ( lborder", 0.0], [") print ( maxsufflen", 0.0], ["( pos )", 0.0], [") print ( mincutlen", 0.0], [") print ( n", 0.0], [") print ( preflen", 0.0], [") print ( preflens", 0.0], [") print ( r", 0.0], [") print ( rborder", 0.0], [") print ( selection", 0.0], [") print ( sufflen", 0.0], [") print ( sufflens", 0.0], [") print ( x", 0.0], [") print ( xhit", 0.0], [") r=0", 0.0], [") premissing.discard ( x", 0.0], [") premissing.discard (", 0.0], [") premissing.discard", 0.0], [") l=len ( x", 0.0], [") a=l while a", 0.0], [") all", 0.0], [") all ptr", 0.0], [") all ptr to", 0.0], [") answer", 0.0], [") answer ca", 0.0], [") answer ca n't", 0.0], [") can", 0.0], [") can split", 0.0], [") can split a", 0.0], [") cos", 0.0], [") cos =", 0.0], [") cos = (", 0.0], [") for", 0.0], [") for i", 0.0], [") for i from", 0.0], [") for i in", 0.0], [") i=10", 0.0], [") i=10 *", 0.0], [") i=10 * *", 0.0], [") if", 0.0], [") if s", 0.0], [") if s >", 0.0], [") l=len", 0.0], [") l=len (", 0.0], [") r=0 f=", 0.0], [") r=0 f= [", 0.0], [") solve3", 0.0], ["* n", 0.0], ["* n j=10 *", 0.0], ["* preflens", 0.0], ["* preflens ,", 0.0], ["* preflens , sep='\\t", 0.0], ["* sufflens", 0.0], ["* sufflens ,", 0.0], ["* sufflens , sep='\\t", 0.0], ["+", 0.0], ["+ 1", 0.0], ["+ 1 3", 0.0], ["+ 1 3 -", 0.0], ["+ 3", 0.0], ["+ 3 cos", 0.0], ["+ 3 cos =", 0.0], ["+ a/b", 0.0], ["+ a/b -", 0.0], ["+ a/b - 1", 0.0], [",", 0.0], [", 100001", 0.0], [", 100001 )", 0.0], [", 13241234", 0.0], [", 13241234 )", 0.0], [", 13241234 ) solve3", 0.0], [", 301", 0.0], [", 301 )", 0.0], ["* n j=10", 0.0], ["* k while j", 0.0], [") solve3 (", 0.0], ["* k while", 0.0], [") solve3 ( 123", 0.0], [") solve3 ( 31434123", 0.0], [") solve3 ( 3921,10000", 0.0], [") solve3 ( 4940,5000", 0.0], [") solve3 ( 942", 0.0], [") solve3 ( 9442", 0.0], [") solve3 ( 9991020", 0.0], [") sorted", 0.0], [") sorted from", 0.0], [") sorted from high", 0.0], ["*", 0.0], ["* (", 0.0], ["* ( n", 0.0], ["* ( n -", 0.0], ["* ( n-1", 0.0], ["* ( n-1 )", 0.0], ["* *", 0.0], ["* * (", 0.0], ["* * ( n-1", 0.0], ["* * n", 0.0], ["* * n j=10", 0.0], ["* -", 0.0], ["* - coding", 0.0], ["* - coding :", 0.0], ["* k", 0.0], [") a=l while", 0.0], [") a=l", 0.0], [") a/b+c = (", 0.0], ["( sufflens", 0.0], ["( sufflens [ sufflen", 0.0], ["( tmp_mass", 0.0], ["( tmp_mass )", 0.0], ["( tmp_mass ) print", 0.0], ["( upp", 0.0], ["( upp ,", 0.0], ["( upp , low", 0.0], ["( v1", 0.0], ["( v1 ,", 0.0], ["( v1 , v2", 0.0], ["( x", 0.0], ["( x )", 0.0], ["( x ) a=l", 0.0], ["( x ) premissing.discard", 0.0], ["( x ,", 0.0], ["( x , t", 0.0], ["( x -", 0.0], ["( x - 1", 0.0], ["( x [", 0.0], ["( x [ a", 0.0], ["( xhit", 0.0], ["( xhit ,", 0.0], ["( xhit , yhit", 0.0], ["( xx+yy", 0.0], ["( xx+yy )", 0.0], ["( sufflens [", 0.0], ["( sufflen ) print", 0.0], [")", 0.0], ["( sufflen )", 0.0], ["( pref", 0.0], ["( pref ,", 0.0], ["( pref , jump", 0.0], ["( prefix", 0.0], ["( prefix cost", 0.0], ["( prefix cost 0", 0.0], ["( preflen", 0.0], ["( preflen )", 0.0], ["( preflen ) print", 0.0], ["( preflens", 0.0], ["( preflens [", 0.0], ["( preflens [ preflen", 0.0], ["( r", 0.0], ["( r )", 0.0], ["( rborder", 0.0], ["( rborder )", 0.0], ["( rborder ) print", 0.0], ["( selection", 0.0], ["( selection )", 0.0], ["( selection ) all", 0.0], ["( split", 0.0], ["( split (", 0.0], ["( split ( a", 0.0], ["( split ( b", 0.0], ["( sufflen", 0.0], ["( xx+yy ) cos", 0.0], [") !", 0.0], [") a/b+c =", 0.0], [") .split ( )", 0.0], [") / |v1||v2|", 0.0], [") /b", 0.0], [") /b 1", 0.0], [") /b 1 -", 0.0], [") 1", 0.0], [") 1 01", 0.0], [") 1 01 001", 0.0], [") 499200", 0.0], [") 499200 vs", 0.0], [") 499200 vs 982400", 0.0], [") :", 0.0], [") : if", 0.0], [") : if sufflens", 0.0], [") : k", 0.0], [") : k =", 0.0], [") =", 0.0], [") = map", 0.0], [") = map (", 0.0], [") ==", 0.0], [") == len", 0.0], [") == len (", 0.0], [") [", 0.0], [") [ :", 0.0], [") [ : :-1", 0.0], [") a/b+c", 0.0], [") /", 0.0], [") .split (", 0.0], [") ! *", 0.0], [") .split", 0.0], [") ! * (", 0.0], [") ! /", 0.0], [") ! / (", 0.0], [") ! =", 0.0], [") ! = 1", 0.0], [") #", 0.0], [") # print", 0.0], [") # print (", 0.0], [") )", 0.0], [") ) )", 0.0], [") ) ) =", 0.0], [") ) ) [", 0.0], [") ) :", 0.0], [") ) =", 0.0], [") ) = map", 0.0], [") ) [", 0.0], [") ) [ :", 0.0], [") ) answer", 0.0], [") ) answer ca", 0.0], [") ,", 0.0], [") , val", 0.0], [") , val (", 0.0], [") -", 0.0], [") - sufflens", 0.0], [") - sufflens [", 0.0], ["9991020 , 100001 )", 0.0], [": :-1", 0.0], [": :-1 ]", 0.0], ["are unlucky , print", 0.0], ["are not the same", 0.0], ["are reduced", 0.0], ["are reduced by", 0.0], ["are reduced by 1", 0.0], ["are stack-sortable", 0.0], ["are stack-sortable create", 0.0], ["are stack-sortable create a", 0.0], ["are the", 0.0], ["are the same", 0.0], ["are the same print", 0.0], ["are unlucky", 0.0], ["are unlucky ,", 0.0], ["are valid", 0.0], ["any junction and", 0.0], ["are valid ,", 0.0], ["are valid , then", 0.0], ["area", 0.0], ["area can", 0.0], ["area can not", 0.0], ["area can not be", 0.0], ["area of", 0.0], ["area of the", 0.0], ["area of the rectangle", 0.0], ["area of the region", 0.0], ["array", 0.0], ["array after", 0.0], ["are not the", 0.0], ["are not", 0.0], ["are exactly k-1 elements", 0.0], ["are exactly k-1", 0.0], ["any other", 0.0], ["any other junction", 0.0], ["any other junction iterate", 0.0], ["apartment", 0.0], ["apartment calculate", 0.0], ["apartment calculate the", 0.0], ["apartment calculate the number", 0.0], ["apartment calculate the total", 0.0], ["apartment to", 0.0], ["apartment to natasha", 0.0], ["apartment to natasha 's", 0.0], ["are", 0.0], ["are <", 0.0], ["are < x", 0.0], ["are < x we", 0.0], ["are at", 0.0], ["are at least", 0.0], ["are at least k-1", 0.0], ["are brought", 0.0], ["are brought every", 0.0], ["are brought every day", 0.0], ["are enough", 0.0], ["are enough grapes", 0.0], ["are enough grapes to", 0.0], ["are exactly", 0.0], ["array after multiplying", 0.0], ["array after multiplying all", 0.0], ["as", 0.0], ["available", 0.0], ["available budget find", 0.0], ["available budget find the", 0.0], ["available use", 0.0], ["available use the", 0.0], ["available use the second", 0.0], ["b", 0.0], ["b )", 0.0], ["b ) )", 0.0], ["b ) ) answer", 0.0], ["b ) 499200", 0.0], ["b ) 499200 vs", 0.0], ["b ) :", 0.0], ["b ) : k", 0.0], ["b ) for", 0.0], ["b ) for i", 0.0], ["b ) print", 0.0], ["b ) print (", 0.0], ["b 942=a", 0.0], ["b 942=a ,", 0.0], ["b 942=a , 911=b", 0.0], ["b find", 0.0], ["b find the", 0.0], ["b find the common", 0.0], ["b print", 0.0], ["b print the", 0.0], ["available budget", 0.0], ["athletes is equal ,", 0.0], ["as the", 0.0], ["athletes is equal", 0.0], ["as the previous", 0.0], ["as the previous file", 0.0], ["asked", 0.0], ["asked calculate", 0.0], ["asked calculate how", 0.0], ["asked calculate how many", 0.0], ["asked calculate the", 0.0], ["asked calculate the minimum", 0.0], ["asked sergei", 0.0], ["asked sergei print", 0.0], ["asked sergei print the", 0.0], ["at", 0.0], ["at least", 0.0], ["at least k-1", 0.0], ["at least k-1 smaller", 0.0], ["at least one", 0.0], ["at least one extra", 0.0], ["at time", 0.0], ["at time t", 0.0], ["athlete", 0.0], ["athlete who", 0.0], ["athlete who can", 0.0], ["athlete who can cover", 0.0], ["athletes", 0.0], ["athletes is", 0.0], ["any junction and any", 0.0], ["any junction", 0.0], [": :-1 ] bl", 0.0], ["and maximum elements after", 0.0], ["and find the number", 0.0], ["and katie", 0.0], ["and katie 's", 0.0], ["and katie 's ribbons", 0.0], ["and l_2-r_2", 0.0], ["and l_2-r_2 subtract", 0.0], ["and l_2-r_2 subtract the", 0.0], ["and level", 0.0], ["and level <", 0.0], ["and level < k", 0.0], ["and maximum", 0.0], ["and maximum elements", 0.0], ["and maximum elements calculate", 0.0], ["any", 0.0], ["and minutes", 0.0], ["and minutes calculate", 0.0], ["and minutes calculate the", 0.0], ["and not", 0.0], ["and not on", 0.0], ["and not on the", 0.0], ["and reflection", 0.0], ["and reflection calculate", 0.0], ["and reflection calculate the", 0.0], ["and repeat", 0.0], ["and repeat check", 0.0], ["and repeat check if", 0.0], ["and find the", 0.0], ["and find", 0.0], ["and column of the", 0.0], ["and column of", 0.0], ["an", 0.0], ["an accordion", 0.0], ["an accordion ,", 0.0], ["an accordion , print", 0.0], ["an accordion if", 0.0], ["an accordion if it", 0.0], ["an employee", 0.0], ["an employee from", 0.0], ["an employee from the", 0.0], ["an employee has", 0.0], ["an employee has already", 0.0], ["and", 0.0], ["and any", 0.0], ["and any other", 0.0], ["and any other junction", 0.0], ["and b", 0.0], ["and b find", 0.0], ["and b find the", 0.0], ["and b print", 0.0], ["and b print the", 0.0], ["and b+k", 0.0], ["and bolt", 0.0], ["and bolt can", 0.0], ["and bolt can cover", 0.0], ["and column", 0.0], ["and repeat is", 0.0], ["and repeat is equal", 0.0], ["and s", 0.0], ["and then", 0.0], ["and then by name", 0.0], ["and walk", 0.0], ["and walk to", 0.0], ["and walk to the", 0.0], ["angle", 0.0], ["angle of", 0.0], ["angle of incidence", 0.0], ["angle of incidence and", 0.0], ["ans", 0.0], ["ans )", 0.0], ["ans ) print", 0.0], ["ans ) print (", 0.0], ["ans ,", 0.0], ["ans , a", 0.0], ["ans , a [", 0.0], ["answer", 0.0], ["answer ca", 0.0], ["answer ca n't", 0.0], ["answer ca n't have", 0.0], ["answer for", 0.0], ["answer for _", 0.0], ["answer for _ in", 0.0], ["answer print", 0.0], ["answer print the", 0.0], ["answer print the answer", 0.0], ["and then by", 0.0], ["and the winner", 0.0], ["and s %", 0.0], ["and the wall if", 0.0], ["and s % k==0", 0.0], ["and seat", 0.0], ["and seat number", 0.0], ["and seat number number", 0.0], ["and snowflakes", 0.0], ["and snowflakes if", 0.0], ["and snowflakes if the", 0.0], ["and the", 0.0], ["and the directions", 0.0], ["and the directions are", 0.0], ["and the length", 0.0], ["and the length of", 0.0], ["and the light", 0.0], ["and the light of", 0.0], ["and the lines", 0.0], ["and the lines calculate", 0.0], ["and the new", 0.0], ["and the new array", 0.0], ["and the operation", 0.0], ["and the operation numbers", 0.0], ["and the time", 0.0], ["and the time it", 0.0], ["and the value", 0.0], ["and the value of", 0.0], ["and the wall", 0.0], ["b print the number", 0.0], ["b remove", 0.0], ["b remove leading", 0.0], ["border of the", 0.0], ["block", 0.0], ["block constant", 0.0], ["block constant block", 0.0], ["block constant block decreasing", 0.0], ["block decreasing", 0.0], ["block decreasing block", 0.0], ["bolt", 0.0], ["bolt can", 0.0], ["bolt can cover", 0.0], ["bolt can cover if", 0.0], ["border", 0.0], ["border of", 0.0], ["border of the frame", 0.0], ["b remove leading zeroes", 0.0], ["both", 0.0], ["both athletes", 0.0], ["both athletes is", 0.0], ["both athletes is equal", 0.0], ["both groups", 0.0], ["both groups calculate", 0.0], ["both groups calculate the", 0.0], ["bottles", 0.0], ["bottles of", 0.0], ["bottles of each", 0.0], ["bottles of each type", 0.0], ["bought", 0.0], ["bl = list (", 0.0], ["bl = list", 0.0], ["bl =", 0.0], ["bl , ptr )", 0.0], ["between a and", 0.0], ["between a and b", 0.0], ["between any", 0.0], ["between any junction", 0.0], ["between any junction and", 0.0], ["between l_1-r_1", 0.0], ["between l_1-r_1 and", 0.0], ["between l_1-r_1 and l_2-r_2", 0.0], ["between the", 0.0], ["between the ball", 0.0], ["between the ball and", 0.0], ["between the minimum", 0.0], ["between the minimum and", 0.0], ["between the pawns", 0.0], ["between the pawns '", 0.0], ["binary", 0.0], ["binary representation", 0.0], ["binary representation of", 0.0], ["binary representation of the", 0.0], ["bl", 0.0], ["bl )", 0.0], ["bl ) print", 0.0], ["bl ) print (", 0.0], ["bl ,", 0.0], ["bl , ptr", 0.0], ["bought with", 0.0], ["bought with the", 0.0], ["bought with the available", 0.0], ["buy the required number", 0.0], ["buying the", 0.0], ["buying the necessary", 0.0], ["buying the necessary amount", 0.0], ["by", 0.0], ["by 1", 0.0], ["by 5", 0.0], ["by 5 print", 0.0], ["by 5 print the", 0.0], ["by a", 0.0], ["by a candy", 0.0], ["by a candy cane", 0.0], ["by a snowflake", 0.0], ["by a snowflake ,", 0.0], ["by both", 0.0], ["by both athletes", 0.0], ["by both athletes is", 0.0], ["by name", 0.0], ["by name calculate", 0.0], ["by name calculate the", 0.0], ["by s", 0.0], ["by s liters", 0.0], ["by s liters of", 0.0], ["by sparrows", 0.0], ["by sparrows increment", 0.0], ["by sparrows increment the", 0.0], ["buying", 0.0], ["buy the required", 0.0], ["bought with the existing", 0.0], ["buy the", 0.0], ["bourles", 0.0], ["bourles that", 0.0], ["bourles that can", 0.0], ["bourles that can be", 0.0], ["bourles to", 0.0], ["bourles to the", 0.0], ["bourles to the maximum", 0.0], ["break", 0.0], ["break j+=1", 0.0], ["break j+=1 print", 0.0], ["break j+=1 print (", 0.0], ["bring", 0.0], ["bring grains", 0.0], ["bring grains to", 0.0], ["bring grains to the", 0.0], ["brought", 0.0], ["brought every", 0.0], ["brought every day", 0.0], ["brought every day calculate", 0.0], ["budget", 0.0], ["budget find", 0.0], ["budget find the", 0.0], ["budget find the cost", 0.0], ["button", 0.0], ["buy", 0.0], ["between a", 0.0], ["between", 0.0], ["better place print the", 0.0], ["bar to find", 0.0], ["barn", 0.0], ["barn becomes", 0.0], ["barn becomes empty", 0.0], ["barn becomes empty bring", 0.0], ["barn eat", 0.0], ["barn eat grains", 0.0], ["barn eat grains by", 0.0], ["barn to", 0.0], ["barn to become", 0.0], ["barn to become empty", 0.0], ["bars", 0.0], ["bars after", 0.0], ["bars after the", 0.0], ["bars after the process", 0.0], ["bars needed", 0.0], ["bars needed print", 0.0], ["bars needed print the", 0.0], ["base", 0.0], ["base n", 0.0], ["be", 0.0], ["be a", 0.0], ["be a telephone", 0.0], ["be a telephone number", 0.0], ["be bought", 0.0], ["be bought with", 0.0], ["bar to find the", 0.0], ["bar to", 0.0], ["be caught", 0.0], ["bar", 0.0], ["b+k", 0.0], ["b_rest", 0.0], ["b_rest print", 0.0], ["b_rest print (", 0.0], ["b_rest print ( ``", 0.0], ["back", 0.0], ["back is", 0.0], ["back is legal", 0.0], ["back is legal print", 0.0], ["balanced", 0.0], ["ball", 0.0], ["ball 's", 0.0], ["ball 's trajectory", 0.0], ["ball 's trajectory check", 0.0], ["ball and", 0.0], ["ball and the", 0.0], ["ball and the wall", 0.0], ["ball is", 0.0], ["ball is not", 0.0], ["ball is not close", 0.0], ["ball will", 0.0], ["ball will fall", 0.0], ["ball will fall into", 0.0], ["ball will move", 0.0], ["ball will move indefinitely", 0.0], ["be bought with the", 0.0], ["be caught in", 0.0], ["better place print", 0.0], ["be written calculate the", 0.0], ["beauty of", 0.0], ["beauty of each", 0.0], ["beauty of each ribbon", 0.0], ["beauty of the", 0.0], ["beauty of the array", 0.0], ["become", 0.0], ["become empty", 0.0], ["become empty iterate", 0.0], ["become empty iterate over", 0.0], ["becomes", 0.0], ["becomes empty", 0.0], ["becomes empty bring", 0.0], ["becomes empty bring grains", 0.0], ["before", 0.0], ["before vasya", 0.0], ["before vasya 's", 0.0], ["before vasya 's row", 0.0], ["being", 0.0], ["being the", 0.0], ["being the only", 0.0], ["being the only survivor", 0.0], ["below", 0.0], ["below 100", 0.0], ["better", 0.0], ["better place", 0.0], ["beauty", 0.0], ["be written calculate", 0.0], ["be caught in a", 0.0], ["be written", 0.0], ["be consistent", 0.0], ["be deleted", 0.0], ["be deleted print", 0.0], ["be deleted print the", 0.0], ["be erased", 0.0], ["be erased print", 0.0], ["be erased print the", 0.0], ["be gained", 0.0], ["be gained from", 0.0], ["be gained from selling", 0.0], ["be poured", 0.0], ["be poured from", 0.0], ["be poured from the", 0.0], ["be print", 0.0], ["be print the", 0.0], ["be print the cell", 0.0], ["be put", 0.0], ["be put on", 0.0], ["be put on each", 0.0], ["be transformed", 0.0], ["be transformed if", 0.0], ["be transformed if the", 0.0], ["be uniquely", 0.0], ["be uniquely determined", 0.0], ["be uniquely determined calculate", 0.0], ["amount of rubles to", 0.0], ["amount of rubles", 0.0], ["amount of lemonade print", 0.0], ["] = len (", 0.0], ["] *", 0.0], ["] * k", 0.0], ["] * k while", 0.0], ["] ,", 0.0], ["] , a", 0.0], ["] , a [", 0.0], ["] , return", 0.0], ["] , return the", 0.0], ["] , x2", 0.0], ["] , x2 ,", 0.0], ["] =", 0.0], ["] = len", 0.0], ["] are", 0.0], ["a and", 0.0], ["] are unlucky", 0.0], ["] are unlucky ,", 0.0], ["] bl", 0.0], ["] bl =", 0.0], ["] bl = list", 0.0], ["] cost", 0.0], ["] cost u", 0.0], ["] cost u ,", 0.0], ["] find", 0.0], ["] find the", 0.0], ["] find the maximum", 0.0], ["] print", 0.0], ["] ) print (", 0.0], ["] ) print", 0.0], ["] ) if s", 0.0], ["] ) if", 0.0], ["[ i", 0.0], ["[ i ]", 0.0], ["[ i ] !", 0.0], ["[ i ] ,", 0.0], ["[ i ] =", 0.0], ["[ i ] print", 0.0], ["[ i+1", 0.0], ["[ i+1 ]", 0.0], ["[ i+1 ] )", 0.0], ["[ l", 0.0], ["[ l ,", 0.0], ["[ l , r", 0.0], ["[ preflen", 0.0], ["[ preflen ]", 0.0], ["[ preflen ] )", 0.0], ["[ sufflen", 0.0], ["[ sufflen ]", 0.0], ["[ sufflen ] )", 0.0], ["]", 0.0], ["] !", 0.0], ["] ! =", 0.0], ["] ! = math.inf", 0.0], ["] )", 0.0], ["] ) #", 0.0], ["] ) # print", 0.0], ["] print (", 0.0], ["] print ( *", 0.0], ["_", 0.0], ["a", 0.0], ["a ) !", 0.0], ["a ) ! =", 0.0], ["a ) )", 0.0], ["a ) ) )", 0.0], ["a ) -", 0.0], ["a ) - sufflens", 0.0], ["a ) ==", 0.0], ["a ) == len", 0.0], ["a ) print", 0.0], ["a ) print (", 0.0], ["a ,", 0.0], ["a , b", 0.0], ["a , b )", 0.0], ["a 2d", 0.0], ["a 2d list", 0.0], ["a 2d list to", 0.0], ["a :", 0.0], ["a : a-=1", 0.0], ["a : a-=1 s=int", 0.0], ["a : l", 0.0], ["a : l ]", 0.0], ["a [", 0.0], ["a [ i", 0.0], ["a [ i ]", 0.0], ["a [ i+1", 0.0], ["a )", 0.0], ["`` repermute '' ,", 0.0], ["_ in", 0.0], ["`` repermute ''", 0.0], ["_ in range", 0.0], ["_ in range (", 0.0], ["``", 0.0], ["`` data.txt", 0.0], ["`` data.txt ''", 0.0], ["`` data.txt '' )", 0.0], ["`` e=", 0.0], ["`` e= ''", 0.0], ["`` e= '' ,", 0.0], ["`` enter", 0.0], ["`` enter ''", 0.0], ["`` enter '' )", 0.0], ["`` f=", 0.0], ["`` f= ''", 0.0], ["`` f= '' ,", 0.0], ["`` inf", 0.0], ["`` inf ''", 0.0], ["`` inf '' print", 0.0], ["`` pref", 0.0], ["`` pref ,", 0.0], ["`` pref , suff", 0.0], ["`` r=", 0.0], ["`` r= ''", 0.0], ["`` r= '' ,", 0.0], ["`` repermute", 0.0], ["[ c , count", 0.0], ["[ c ,", 0.0], ["[ c", 0.0], [": utf-8 - *", 0.0], [": x=str (", 0.0], [": x=str ( j", 0.0], [":-1", 0.0], [":-1 ]", 0.0], [":-1 ] bl", 0.0], [":-1 ] bl =", 0.0], ["<", 0.0], ["< =", 0.0], ["< = >", 0.0], ["< = > a2", 0.0], ["< i", 0.0], ["< i :", 0.0], ["< i : x=str", 0.0], ["< k", 0.0], ["< k :", 0.0], ["< k : last_level", 0.0], ["< x", 0.0], ["< x we", 0.0], ["< x we want", 0.0], ["=", 0.0], ["= (", 0.0], ["= ( a+bc", 0.0], ["= ( a+bc )", 0.0], ["= ( v1", 0.0], ["= ( v1 ,", 0.0], [": x=str", 0.0], [": utf-8 -", 0.0], ["= 1 print", 0.0], [": utf-8", 0.0], [": a-=1", 0.0], [": a-=1 s=int", 0.0], [": a-=1 s=int (", 0.0], [": cos", 0.0], [": cos ,", 0.0], [": cos , cos^2", 0.0], [": if", 0.0], [": if sufflens", 0.0], [": if sufflens [", 0.0], [": k", 0.0], [": k =", 0.0], [": k = 1", 0.0], [": l", 0.0], [": l ]", 0.0], [": l ] )", 0.0], [": last_level", 0.0], [": pop", 0.0], [": pop this", 0.0], [": pop this idx", 0.0], [": r+=1", 0.0], [": r+=1 break", 0.0], [": r+=1 break j+=1", 0.0], [": sufflens", 0.0], [": sufflens [", 0.0], [": sufflens [ i", 0.0], ["= 1", 0.0], ["= 1 print (", 0.0], ["[ a : l", 0.0], ["= x/sqrt", 0.0], ["= x/sqrt ( xx+yy", 0.0], ["==", 0.0], ["== len", 0.0], ["== len (", 0.0], ["== len ( b", 0.0], [">", 0.0], ["> 0", 0.0], ["> 0 and", 0.0], ["> 0 and level", 0.0], ["> 0 and s", 0.0], ["> a2", 0.0], ["> a2 :", 0.0], ["> a2 : cos", 0.0], ["[", 0.0], ["[ -1", 0.0], ["[ -1 ]", 0.0], ["[ -1 ] ,", 0.0], ["[ 0", 0.0], ["[ 0 ]", 0.0], ["[ 0 ] *", 0.0], ["[ :", 0.0], ["[ : :-1", 0.0], ["[ : :-1 ]", 0.0], ["[ a", 0.0], ["[ a :", 0.0], ["= x/sqrt (", 0.0], ["= sorted ( list", 0.0], ["= 1 while", 0.0], ["= sorted (", 0.0], ["= 1 while gcd", 0.0], ["= >", 0.0], ["= > a2", 0.0], ["= > a2 :", 0.0], ["= a/b", 0.0], ["= a/b +", 0.0], ["= a/b + 1", 0.0], ["= a/b + 3", 0.0], ["= b", 0.0], ["= b 942=a", 0.0], ["= b 942=a ,", 0.0], ["= len", 0.0], ["= len (", 0.0], ["= len ( a", 0.0], ["= list", 0.0], ["= list (", 0.0], ["= list ( map", 0.0], ["= list ( split", 0.0], ["= map", 0.0], ["= map (", 0.0], ["= map ( int", 0.0], ["= math.inf", 0.0], ["= math.inf :", 0.0], ["= math.inf : sufflens", 0.0], ["= sorted", 0.0], ["a [ i+1 ]", 0.0], ["a and b", 0.0], ["amount of lemonade", 0.0], ["added cost", 0.0], ["accordion print the", 0.0], ["accordion print the maximum", 0.0], ["add", 0.0], ["add (", 0.0], ["add ( a", 0.0], ["add ( a ,", 0.0], ["add the", 0.0], ["add the letter", 0.0], ["add the letter to", 0.0], ["add the time", 0.0], ["add the time to", 0.0], ["added", 0.0], ["added cost c+a+b", 0.0], ["a and b find", 0.0], ["added cost c+a+b new", 0.0], ["after", 0.0], ["after multiplying", 0.0], ["after multiplying all", 0.0], ["after multiplying all values", 0.0], ["after swapping", 0.0], ["after swapping one", 0.0], ["after swapping one element", 0.0], ["after the", 0.0], ["after the process", 0.0], ["after the process print", 0.0], ["age", 0.0], ["accordion print", 0.0], ["accordion if it is", 0.0], ["accordion if it", 0.0], ["accordion if", 0.0], ["a2 : cos ,", 0.0], ["a=l", 0.0], ["a=l while", 0.0], ["a=l while a", 0.0], ["a=l while a :", 0.0], ["a_rest", 0.0], ["a_rest is", 0.0], ["a_rest is larger", 0.0], ["a_rest is larger than", 0.0], ["about", 0.0], ["about each", 0.0], ["about each sofa", 0.0], ["about each sofa calculate", 0.0], ["abscissa", 0.0], ["abscissa of", 0.0], ["abscissa of the", 0.0], ["abscissa of the point", 0.0], ["academic", 0.0], ["academic performance", 0.0], ["academic performance in", 0.0], ["academic performance in both", 0.0], ["accordion", 0.0], ["accordion ,", 0.0], ["accordion , print", 0.0], ["accordion , print -1", 0.0], ["age if", 0.0], ["age if all", 0.0], ["age if all years", 0.0], ["all stones", 0.0], ["all stones from the", 0.0], ["all values", 0.0], ["all values in", 0.0], ["all values in a", 0.0], ["all years", 0.0], ["all years in", 0.0], ["all years in the", 0.0], ["alphabet", 0.0], ["alphabet print", 0.0], ["alphabet print the", 0.0], ["alphabet print the total", 0.0], ["already", 0.0], ["already a", 0.0], ["already a koutsu", 0.0], ["already a koutsu or", 0.0], ["already made", 0.0], ["already made their", 0.0], ["already made their statement", 0.0], ["also", 0.0], ["also green", 0.0], ["also green .", 0.0], ["amount", 0.0], ["amount of", 0.0], ["amount of kvass", 0.0], ["amount of kvass that", 0.0], ["all stones from", 0.0], ["all ptr to the", 0.0], ["age print", 0.0], ["all ptr to", 0.0], ["age print the", 0.0], ["age print the maximum", 0.0], ["aiming", 0.0], ["aiming print", 0.0], ["aiming print the", 0.0], ["aiming print the abscissa", 0.0], ["al", 0.0], ["al ,", 0.0], ["al , bl", 0.0], ["al , bl )", 0.0], ["al , bl ,", 0.0], ["al =", 0.0], ["al = sorted", 0.0], ["al = sorted (", 0.0], ["all", 0.0], ["all else", 0.0], ["all else fails", 0.0], ["all else fails ,", 0.0], ["all employees", 0.0], ["all employees have", 0.0], ["all employees have made", 0.0], ["all junctions", 0.0], ["all junctions if", 0.0], ["all junctions if the", 0.0], ["all ptr", 0.0], ["a2 : cos", 0.0], ["a2 :", 0.0], ["a2", 0.0], ["a given position calculate", 0.0], ["a good subset", 0.0], ["a good subset print", 0.0], ["a greater", 0.0], ["a greater distance", 0.0], ["a koutsu", 0.0], ["a koutsu or", 0.0], ["a koutsu or shuntsu", 0.0], ["a list", 0.0], ["a list of", 0.0], ["a list of digits", 0.0], ["a list to", 0.0], ["a list to store", 0.0], ["a long", 0.0], ["a long series", 0.0], ["a long series of", 0.0], ["a map", 0.0], ["a map to", 0.0], ["a map to store", 0.0], ["a message", 0.0], ["a message of", 0.0], ["a message of length", 0.0], ["a node", 0.0], ["a node into", 0.0], ["a node into two", 0.0], ["a particular", 0.0], ["a good", 0.0], ["a given position", 0.0], ["a particular pupil is", 0.0], ["a given parity calculate", 0.0], ["a and b print", 0.0], ["a better", 0.0], ["a better place", 0.0], ["a better place print", 0.0], ["a candy", 0.0], ["a candy cane", 0.0], ["a candy cane ,", 0.0], ["a consecutive", 0.0], ["a consecutive subarray", 0.0], ["a consecutive subarray by", 0.0], ["a copy", 0.0], ["a copy operation", 0.0], ["a copy operation ,", 0.0], ["a corner", 0.0], ["a corner pocket", 0.0], ["a corner pocket the", 0.0], ["a dictionary", 0.0], ["a dictionary to", 0.0], ["a dictionary to store", 0.0], ["a draw", 0.0], ["a function", 0.0], ["a function to", 0.0], ["a function to find", 0.0], ["a given", 0.0], ["a given parity", 0.0], ["a particular pupil", 0.0], ["a path", 0.0], ["a1 < = >", 0.0], ["a+k and b+k", 0.0], ["a-=1 s=int", 0.0], ["a-=1 s=int (", 0.0], ["a-=1 s=int ( x", 0.0], ["a/b", 0.0], ["a/b +", 0.0], ["a/b + 1", 0.0], ["a/b + 1 3", 0.0], ["a/b + 3", 0.0], ["a/b + 3 cos", 0.0], ["a/b -", 0.0], ["a/b - 1", 0.0], ["a/b - 1 =", 0.0], ["a/b 2", 0.0], ["a/b 2 +", 0.0], ["a/b 2 + a/b", 0.0], ["a/b 4", 0.0], ["a/b 4 +", 0.0], ["a/b 4 + a/b", 0.0], ["a/b+c", 0.0], ["a/b+c =", 0.0], ["a/b+c = (", 0.0], ["a/b+c = ( a+bc", 0.0], ["a1", 0.0], ["a1 <", 0.0], ["a1 < =", 0.0], ["a-=1", 0.0], ["a+k and", 0.0], ["a path between", 0.0], ["a+k", 0.0], ["a path between any", 0.0], ["a path if", 0.0], ["a path if no", 0.0], ["a pocket", 0.0], ["a pocket the", 0.0], ["a pocket the ball", 0.0], ["a snowflake", 0.0], ["a snowflake ,", 0.0], ["a snowflake , repeat", 0.0], ["a string", 0.0], ["a string can", 0.0], ["a string can encode", 0.0], ["a string count", 0.0], ["a string count the", 0.0], ["a string find", 0.0], ["a string find the", 0.0], ["a telephone", 0.0], ["a telephone number", 0.0], ["a to", 0.0], ["a to a", 0.0], ["a to a list", 0.0], ["a+bc", 0.0], ["a+bc )", 0.0], ["a+bc ) /b", 0.0], ["a+bc ) /b 1", 0.0], ["l", 0.0], ["l , r", 0.0], ["~ print (", 0.0], ["the binary representation", 0.0], ["the barn eat", 0.0], ["the barn eat grains", 0.0], ["the barn to", 0.0], ["the barn to become", 0.0], ["the bars", 0.0], ["the bars after", 0.0], ["the bars after the", 0.0], ["the beauty", 0.0], ["the beauty of", 0.0], ["the beauty of each", 0.0], ["the beauty of the", 0.0], ["the binary", 0.0], ["the binary representation of", 0.0], ["the answer print the", 0.0], ["the border", 0.0], ["the border of", 0.0], ["the border of the", 0.0], ["the car", 0.0], ["the car and", 0.0], ["the car and walk", 0.0], ["the cell", 0.0], ["the cell number", 0.0], ["the cell where", 0.0], ["the cell where lara", 0.0], ["the center", 0.0], ["the center subtract", 0.0], ["the barn becomes empty", 0.0], ["the barn becomes", 0.0], ["the barn", 0.0], ["the ball will move", 0.0], ["the area can", 0.0], ["the area can not", 0.0], ["the area of", 0.0], ["the area of the", 0.0], ["the array", 0.0], ["the array after", 0.0], ["the array after multiplying", 0.0], ["the athlete", 0.0], ["the athlete who", 0.0], ["the athlete who can", 0.0], ["the available", 0.0], ["the available budget", 0.0], ["the available budget find", 0.0], ["the back", 0.0], ["the back is", 0.0], ["the back is legal", 0.0], ["the ball", 0.0], ["the ball 's", 0.0], ["the ball 's trajectory", 0.0], ["the ball and", 0.0], ["the ball and the", 0.0], ["the ball is", 0.0], ["the ball is not", 0.0], ["the ball will", 0.0], ["the ball will fall", 0.0], ["the center subtract k", 0.0], ["the common", 0.0], ["the common multiples", 0.0], ["the determinant of the", 0.0], ["the difference between", 0.0], ["the difference between the", 0.0], ["the difference is", 0.0], ["the difference is even", 0.0], ["the digit", 0.0], ["the digit 7", 0.0], ["the digit 7 print", 0.0], ["the digits", 0.0], ["the digits in", 0.0], ["the digits in descending", 0.0], ["the direction", 0.0], ["the direction of", 0.0], ["the direction of streets", 0.0], ["the directions", 0.0], ["the directions are", 0.0], ["the directions are valid", 0.0], ["the distance", 0.0], ["the distance between", 0.0], ["the distance between the", 0.0], ["the distance covered", 0.0], ["the distance covered by", 0.0], ["the distance from", 0.0], ["the distance from the", 0.0], ["the dress", 0.0], ["the dress eaten", 0.0], ["the difference", 0.0], ["the determinant of", 0.0], ["the common multiples count", 0.0], ["the determinant is 0", 0.0], ["the coordinates", 0.0], ["the coordinates if", 0.0], ["the coordinates if the", 0.0], ["the coordinates of", 0.0], ["the coordinates of the", 0.0], ["the cost", 0.0], ["the cost of", 0.0], ["the cost of buying", 0.0], ["the cow", 0.0], ["the cow and", 0.0], ["the cow and the", 0.0], ["the cow can", 0.0], ["the cow can reach", 0.0], ["the days", 0.0], ["the days until", 0.0], ["the days until the", 0.0], ["the denied", 0.0], ["the denied employees", 0.0], ["the denied employees for", 0.0], ["the depublicans", 0.0], ["the depublicans faction", 0.0], ["the depublicans faction ,", 0.0], ["the depublicans faction mark", 0.0], ["the determinant", 0.0], ["the determinant is", 0.0], ["the area", 0.0], ["the answer print", 0.0], ["takes for", 0.0], ["than right", 0.0], ["terms is finite", 0.0], ["terms is finite ,", 0.0], ["terms otherwise", 0.0], ["terms otherwise ,", 0.0], ["terms otherwise , return", 0.0], ["terms that", 0.0], ["terms that can", 0.0], ["terms that can be", 0.0], ["than", 0.0], ["than b_rest", 0.0], ["than b_rest print", 0.0], ["than b_rest print (", 0.0], ["than right ,", 0.0], ["the answer", 0.0], ["than right , then", 0.0], ["than the", 0.0], ["than the minimum", 0.0], ["than the minimum number", 0.0], ["than the number", 0.0], ["than the number of", 0.0], ["that", 0.0], ["that are", 0.0], ["that are brought", 0.0], ["that are brought every", 0.0], ["that can", 0.0], ["that can be", 0.0], ["terms is", 0.0], ["terms if the number", 0.0], ["terms if the", 0.0], ["terms if", 0.0], ["takes for the barn", 0.0], ["takes to", 0.0], ["takes to drive", 0.0], ["takes to drive those", 0.0], ["takes to repair", 0.0], ["takes to repair the", 0.0], ["taking", 0.0], ["taking a", 0.0], ["taking a better", 0.0], ["taking a better place", 0.0], ["target", 0.0], ["target floor", 0.0], ["target floor of", 0.0], ["target floor of natasha", 0.0], ["teacher", 0.0], ["teacher asked", 0.0], ["teacher asked sergei", 0.0], ["teacher asked sergei print", 0.0], ["team", 0.0], ["team size", 0.0], ["team size print", 0.0], ["team size print the", 0.0], ["telephone", 0.0], ["telephone number", 0.0], ["terms", 0.0], ["that can be bought", 0.0], ["that can be caught", 0.0], ["that can be erased", 0.0], ["that same", 0.0], ["that same part is", 0.0], ["that the", 0.0], ["that the employee", 0.0], ["that the employee has", 0.0], ["that their", 0.0], ["that their sum", 0.0], ["that their sum is", 0.0], ["that there", 0.0], ["that there are", 0.0], ["that there are at", 0.0], ["that vasiliy", 0.0], ["that vasiliy can", 0.0], ["that vasiliy can drive", 0.0], ["that willman", 0.0], ["that willman and", 0.0], ["that willman and bolt", 0.0], ["the abscissa", 0.0], ["the abscissa of", 0.0], ["the abscissa of the", 0.0], ["the alphabet", 0.0], ["the alphabet print", 0.0], ["the alphabet print the", 0.0], ["the angle", 0.0], ["the angle of", 0.0], ["the angle of incidence", 0.0], ["that same part", 0.0], ["that om nom can", 0.0], ["that can be gained", 0.0], ["that om nom", 0.0], ["that can be poured", 0.0], ["that can be put", 0.0], ["that can be transformed", 0.0], ["that can be written", 0.0], ["that can get", 0.0], ["that can get to", 0.0], ["that come", 0.0], ["that come every", 0.0], ["that come every day", 0.0], ["that contains", 0.0], ["that contains the", 0.0], ["that contains the digit", 0.0], ["that is", 0.0], ["that is not", 0.0], ["that is not equal", 0.0], ["that meet", 0.0], ["that meet the", 0.0], ["that meet the given", 0.0], ["that meets", 0.0], ["that meets the", 0.0], ["that meets the given", 0.0], ["that minimizes", 0.0], ["that minimizes the", 0.0], ["that minimizes the cost", 0.0], ["that om", 0.0], ["the dress eaten by", 0.0], ["the employee", 0.0], ["the employee 's", 0.0], ["the message if", 0.0], ["the maximum number of", 0.0], ["the maximum number print", 0.0], ["the maximum possible", 0.0], ["the maximum possible divisor", 0.0], ["the maximum possible weight", 0.0], ["the maximum subarray", 0.0], ["the maximum subarray sum", 0.0], ["the maximum team", 0.0], ["the maximum team size", 0.0], ["the maximum value", 0.0], ["the maximum value print", 0.0], ["the message", 0.0], ["the message if the", 0.0], ["the employee 's faction", 0.0], ["the message otherwise", 0.0], ["the message otherwise ,", 0.0], ["the message return", 0.0], ["the message return the", 0.0], ["the minimum", 0.0], ["the minimum amount", 0.0], ["the minimum amount of", 0.0], ["the minimum and", 0.0], ["the minimum and maximum", 0.0], ["the minimum cost", 0.0], ["the minimum cost and", 0.0], ["the minimum cost of", 0.0], ["the maximum number not", 0.0], ["the maximum number", 0.0], ["the maximum messiness subtract", 0.0], ["the maximum messiness", 0.0], ["the letter is followed", 0.0], ["the letter to", 0.0], ["the letter to the", 0.0], ["the light", 0.0], ["the light of", 0.0], ["the light of the", 0.0], ["the lines", 0.0], ["the lines calculate", 0.0], ["the lines calculate the", 0.0], ["the longest", 0.0], ["the longest non-palindrome", 0.0], ["the longest non-palindrome substring", 0.0], ["the matrix", 0.0], ["the matrix formed", 0.0], ["the matrix formed by", 0.0], ["the maximum", 0.0], ["the maximum amount", 0.0], ["the maximum amount of", 0.0], ["the maximum distance", 0.0], ["the maximum distance between", 0.0], ["the maximum distance that", 0.0], ["the maximum divisor", 0.0], ["the maximum divisor of", 0.0], ["the maximum length", 0.0], ["the maximum length of", 0.0], ["the minimum decimal", 0.0], ["the minimum decimal number", 0.0], ["the minimum grapes", 0.0], ["the next lucky year", 0.0], ["the null node", 0.0], ["the null node (", 0.0], ["the number", 0.0], ["the number of", 0.0], ["the number of bars", 0.0], ["the number of bottles", 0.0], ["the number of bourles", 0.0], ["the number of candy", 0.0], ["the number of columns", 0.0], ["the number of copybooks", 0.0], ["the number of days", 0.0], ["the number of digits", 0.0], ["the number of distinct", 0.0], ["the number of dresses", 0.0], ["the number of examples", 0.0], ["the number of fights", 0.0], ["the number of finger", 0.0], ["the number of grains", 0.0], ["the number of integers", 0.0], ["the number of k-divisible", 0.0], ["the number of kilometers", 0.0], ["the number of letters", 0.0], ["the number of minutes", 0.0], ["the number of moves", 0.0], ["the number of multiples", 0.0], ["the null", 0.0], ["the next lucky", 0.0], ["the minimum grapes needed", 0.0], ["the next", 0.0], ["the minimum number", 0.0], ["the minimum number of", 0.0], ["the minimum operations", 0.0], ["the minimum operations are", 0.0], ["the minimum operations to", 0.0], ["the minimum time", 0.0], ["the minimum time print", 0.0], ["the minimum time to", 0.0], ["the minutes", 0.0], ["the minutes spent", 0.0], ["the minutes spent on", 0.0], ["the multiple", 0.0], ["the multiple of", 0.0], ["the multiple of x", 0.0], ["the multiples", 0.0], ["the multiples of", 0.0], ["the multiples of a", 0.0], ["the nearest", 0.0], ["the nearest zero", 0.0], ["the nearest zero to", 0.0], ["the necessary", 0.0], ["the necessary amount", 0.0], ["the necessary amount of", 0.0], ["the new", 0.0], ["the new array", 0.0], ["the letter is", 0.0], ["the letter", 0.0], ["the length of the", 0.0], ["the file with", 0.0], ["the finger", 0.0], ["the finger movements", 0.0], ["the finger movements for", 0.0], ["the first", 0.0], ["the first character", 0.0], ["the first character of", 0.0], ["the first floor", 0.0], ["the first floor of", 0.0], ["the first k", 0.0], ["the first k -", 0.0], ["the first k elements", 0.0], ["the first keg", 0.0], ["the first keg if", 0.0], ["the first progression", 0.0], ["the first progression calculate", 0.0], ["the first spell", 0.0], ["the first spell if", 0.0], ["the first stone", 0.0], ["the first stone on", 0.0], ["the frame", 0.0], ["the frame check", 0.0], ["the frame check if", 0.0], ["the frame is", 0.0], ["the frame is optimal", 0.0], ["the frog", 0.0], ["the file with the", 0.0], ["the file", 0.0], ["the frog can reach", 0.0], ["the fair nut can", 0.0], ["the employee has", 0.0], ["the employee has already", 0.0], ["the employee has made", 0.0], ["the employee is", 0.0], ["the employee is from", 0.0], ["the employees", 0.0], ["the employees in", 0.0], ["the employees in the", 0.0], ["the employees making", 0.0], ["the employees making their", 0.0], ["the end", 0.0], ["the end of", 0.0], ["the end of the", 0.0], ["the existing", 0.0], ["the existing copybooks", 0.0], ["the existing copybooks calculate", 0.0], ["the expected", 0.0], ["the expected number", 0.0], ["the expected number of", 0.0], ["the expression", 0.0], ["the factorial", 0.0], ["the factorial of", 0.0], ["the factorial of n", 0.0], ["the fair", 0.0], ["the fair nut", 0.0], ["the frog can", 0.0], ["the game", 0.0], ["the length of each", 0.0], ["the input ticket", 0.0], ["the intersection", 0.0], ["the intersection print", 0.0], ["the intersection print the", 0.0], ["the interval", 0.0], ["the interval [", 0.0], ["the interval [ l", 0.0], ["the junctions", 0.0], ["the junctions are", 0.0], ["the junctions are not", 0.0], ["the k-th", 0.0], ["the k-th digit", 0.0], ["the k-th digit print", 0.0], ["the k-th manhole", 0.0], ["the k-th manhole pick", 0.0], ["the lane", 0.0], ["the lane that", 0.0], ["the lane that can", 0.0], ["the last", 0.0], ["the last one", 0.0], ["the last one .", 0.0], ["the lcm", 0.0], ["the lcm of", 0.0], ["the lcm of a+k", 0.0], ["the length", 0.0], ["the length of", 0.0], ["the input ticket number", 0.0], ["the input string is", 0.0], ["the game will", 0.0], ["the input string", 0.0], ["the game will end", 0.0], ["the given", 0.0], ["the given conditions", 0.0], ["the given conditions print", 0.0], ["the goalpost", 0.0], ["the goalpost ,", 0.0], ["the goalpost , it", 0.0], ["the goalpost if", 0.0], ["the goalpost if the", 0.0], ["the golden", 0.0], ["the golden age", 0.0], ["the golden age if", 0.0], ["the golden age print", 0.0], ["the grids", 0.0], ["the grids are", 0.0], ["the grids are the", 0.0], ["the index", 0.0], ["the index of", 0.0], ["the index of the", 0.0], ["the information", 0.0], ["the information about", 0.0], ["the information about each", 0.0], ["the input", 0.0], ["the input check", 0.0], ["the input check if", 0.0], ["takes for the", 0.0], ["takes", 0.0], ["the number of operations", 0.0], ["snowflake", 0.0], ["smallest", 0.0], ["smallest n", 0.0], ["smallest n which", 0.0], ["smallest n which p", 0.0], ["smallest smallest", 0.0], ["smallest smallest such", 0.0], ["smallest smallest such that", 0.0], ["smallest such", 0.0], ["smallest such that", 0.0], ["smallest such that there", 0.0], ["snooze", 0.0], ["snooze button", 0.0], ["snowflake ,", 0.0], ["shuntsu", 0.0], ["snowflake , repeat", 0.0], ["snowflake , repeat it", 0.0], ["snowflakes", 0.0], ["snowflakes if", 0.0], ["snowflakes if the", 0.0], ["snowflakes if the number", 0.0], ["sofa", 0.0], ["sofa calculate", 0.0], ["sofa calculate the", 0.0], ["sofa calculate the number", 0.0], ["sofa that", 0.0], ["sofa that meets", 0.0], ["smaller numbers if there", 0.0], ["smaller numbers if", 0.0], ["smaller numbers", 0.0], ["smaller", 0.0], ["shuntsu , draw", 0.0], ["shuntsu , draw at", 0.0], ["shuntsu if", 0.0], ["shuntsu if there", 0.0], ["shuntsu if there is", 0.0], ["side", 0.0], ["side track", 0.0], ["side track whether", 0.0], ["side track whether an", 0.0], ["size", 0.0], ["size print", 0.0], ["size print the", 0.0], ["size print the team", 0.0], ["sizes", 0.0], ["sizes of", 0.0], ["sizes of the", 0.0], ["sizes of the bars", 0.0], ["skip", 0.0], ["skip their", 0.0], ["skip their turn", 0.0], ["skip their turn get", 0.0], ["sleep", 0.0], ["sleep print", 0.0], ["sleep print the", 0.0], ["sleep print the minimum", 0.0], ["sofa that meets the", 0.0], ["sofas", 0.0], ["sofas that", 0.0], ["solved remaining_time > 0", 0.0], ["sort files", 0.0], ["sort files by", 0.0], ["sort files by type", 0.0], ["sort the", 0.0], ["sort the digits", 0.0], ["sort the digits in", 0.0], ["sort the remaining", 0.0], ["sort the remaining elements", 0.0], ["sorted", 0.0], ["sorted (", 0.0], ["sorted ( list", 0.0], ["sorted ( list (", 0.0], ["sorted from", 0.0], ["sorted from high", 0.0], ["sorted from high to", 0.0], ["sparrows", 0.0], ["sparrows increment", 0.0], ["sparrows increment the", 0.0], ["sparrows increment the number", 0.0], ["sparrows that", 0.0], ["sparrows that come", 0.0], ["sparrows that come every", 0.0], ["species", 0.0], ["species being", 0.0], ["species being the", 0.0], ["sort", 0.0], ["solved remaining_time >", 0.0], ["sofas that meet", 0.0], ["solved remaining_time", 0.0], ["sofas that meet the", 0.0], ["solve", 0.0], ["solve fully_solved", 0.0], ["solve fully_solved problems", 0.0], ["solve fully_solved problems ,", 0.0], ["solve3", 0.0], ["solve3 (", 0.0], ["solve3 ( 123", 0.0], ["solve3 ( 123 ,", 0.0], ["solve3 ( 31434123", 0.0], ["solve3 ( 31434123 ,", 0.0], ["solve3 ( 3921,10000", 0.0], ["solve3 ( 3921,10000 )", 0.0], ["solve3 ( 4940,5000", 0.0], ["solve3 ( 4940,5000 )", 0.0], ["solve3 ( 942", 0.0], ["solve3 ( 942 ,", 0.0], ["solve3 ( 9442", 0.0], ["solve3 ( 9442 ,", 0.0], ["solve3 ( 9991020", 0.0], ["solve3 ( 9991020 ,", 0.0], ["solved", 0.0], ["solved for", 0.0], ["solved for partially", 0.0], ["solved for partially solved", 0.0], ["shuntsu ,", 0.0], ["shortest possible accordion print", 0.0], ["t that minimizes the", 0.0], ["same content as the", 0.0], ["s=int (", 0.0], ["s=int ( x", 0.0], ["s=int ( x [", 0.0], ["same", 0.0], ["same academic", 0.0], ["same academic performance", 0.0], ["same academic performance in", 0.0], ["same and", 0.0], ["same and the", 0.0], ["same and the directions", 0.0], ["same content", 0.0], ["same content as", 0.0], ["same part", 0.0], ["shortest possible accordion", 0.0], ["same part is", 0.0], ["same part is also", 0.0], ["same print", 0.0], ["same print the", 0.0], ["same print the answer", 0.0], ["same year", 0.0], ["same year ,", 0.0], ["same year , increment", 0.0], ["score", 0.0], ["score calculate", 0.0], ["score calculate the", 0.0], ["score calculate the abscissa", 0.0], ["s=int", 0.0], ["s liters of kvass", 0.0], ["s liters of", 0.0], ["s liters", 0.0], ["rows", 0.0], ["rows and", 0.0], ["rows and seat", 0.0], ["rows and seat number", 0.0], ["rows check", 0.0], ["rows check columns", 0.0], ["rows check columns check", 0.0], ["rows served", 0.0], ["rows served before", 0.0], ["rows served before vasya", 0.0], ["rows to", 0.0], ["rows to find", 0.0], ["rows to find the", 0.0], ["rubles", 0.0], ["rubles to", 0.0], ["rubles to buy", 0.0], ["rubles to buy the", 0.0], ["s", 0.0], ["s %", 0.0], ["s % k==0", 0.0], ["s % k==0 :", 0.0], ["s .", 0.0], ["s >", 0.0], ["s > 0", 0.0], ["s > 0 and", 0.0], ["score calculate the angle", 0.0], ["script", 0.0], ["script file", 0.0], ["sep='\\t", 0.0], ["sep='\\t ' )", 0.0], ["sep='\\t ' ) print", 0.0], ["sergei", 0.0], ["sergei print", 0.0], ["sergei print the", 0.0], ["sergei print the results", 0.0], ["series", 0.0], ["series of", 0.0], ["series of 0", 0.0], ["series of 0 's", 0.0], ["serve", 0.0], ["serve passengers", 0.0], ["serve passengers in", 0.0], ["serve passengers in each", 0.0], ["serve passengers in vasya", 0.0], ["served", 0.0], ["served before", 0.0], ["served before vasya", 0.0], ["served before vasya 's", 0.0], ["shiro", 0.0], ["shiro 's", 0.0], ["shiro 's and", 0.0], ["shiro 's and katie", 0.0], ["shortest", 0.0], ["shortest possible", 0.0], ["sep='\\t '", 0.0], ["selling update the number", 0.0], ["script file rewrite", 0.0], ["selling update the", 0.0], ["script file rewrite the", 0.0], ["seat", 0.0], ["seat number", 0.0], ["seat number number", 0.0], ["seat number number of", 0.0], ["second", 0.0], ["second progression", 0.0], ["second progression find", 0.0], ["second progression find the", 0.0], ["second spell", 0.0], ["second spell if", 0.0], ["second spell if it", 0.0], ["seconds", 0.0], ["seconds to", 0.0], ["seconds to serve", 0.0], ["seconds to serve passengers", 0.0], ["seconds vasya", 0.0], ["seconds vasya has", 0.0], ["seconds vasya has to", 0.0], ["selection", 0.0], ["selection )", 0.0], ["selection ) all", 0.0], ["selection ) all ptr", 0.0], ["selling", 0.0], ["selling update", 0.0], ["species being the only", 0.0], ["spectators", 0.0], ["spectators at", 0.0], ["substring find the length", 0.0], ["subarray sum calculate the", 0.0], ["subproblems", 0.0], ["subproblems for", 0.0], ["subproblems for fully", 0.0], ["subproblems for fully solved", 0.0], ["subset", 0.0], ["subset print", 0.0], ["subset print the", 0.0], ["subset print the maximum", 0.0], ["substring", 0.0], ["substring find", 0.0], ["substring find the", 0.0], ["substring print", 0.0], ["spectators at time", 0.0], ["substring print the", 0.0], ["substring print the length", 0.0], ["subtract", 0.0], ["subtract k", 0.0], ["subtract k from", 0.0], ["subtract k from the", 0.0], ["subtract the", 0.0], ["subtract the dress", 0.0], ["subtract the dress eaten", 0.0], ["subtract the minutes", 0.0], ["subtract the minutes spent", 0.0], ["subtract the number", 0.0], ["subarray sum calculate", 0.0], ["subarray sum", 0.0], ["subarray by x print", 0.0], ["subarray by x", 0.0], ["string can encode", 0.0], ["string can encode a", 0.0], ["string count", 0.0], ["string count the", 0.0], ["string count the number", 0.0], ["string find", 0.0], ["string find the", 0.0], ["string find the k-th", 0.0], ["string if", 0.0], ["string if there", 0.0], ["string if there is", 0.0], ["string is", 0.0], ["string is 11", 0.0], ["string is 11 check", 0.0], ["string is 8", 0.0], ["string is 8 and", 0.0], ["string is an", 0.0], ["string is an accordion", 0.0], ["string is balanced", 0.0], ["students", 0.0], ["students with", 0.0], ["students with the", 0.0], ["students with the same", 0.0], ["subarray", 0.0], ["subarray by", 0.0], ["subtract the number of", 0.0], ["such", 0.0], ["such that", 0.0], ["sum is", 0.0], ["sum is divisible by", 0.0], ["sum of", 0.0], ["sum of f", 0.0], ["sum of f (", 0.0], ["survivor", 0.0], ["survivor print", 0.0], ["survivor print the", 0.0], ["survivor print the probabilities", 0.0], ["swapping", 0.0], ["swapping one", 0.0], ["swapping one element", 0.0], ["swapping one element print", 0.0], ["swaps", 0.0], ["sys.stdin=open", 0.0], ["sys.stdin=open (", 0.0], ["sys.stdin=open ( ``", 0.0], ["sys.stdin=open ( `` data.txt", 0.0], ["system", 0.0], ["system with", 0.0], ["system with base", 0.0], ["system with base n", 0.0], ["t", 0.0], ["t )", 0.0], ["t that", 0.0], ["t that minimizes", 0.0], ["sum is divisible", 0.0], ["sum calculate the beauty", 0.0], ["such that their", 0.0], ["sum calculate the", 0.0], ["such that their sum", 0.0], ["such that there", 0.0], ["such that there are", 0.0], ["suff", 0.0], ["suff ''", 0.0], ["suff '' )", 0.0], ["suff '' ) print", 0.0], ["sufflen", 0.0], ["sufflen )", 0.0], ["sufflen ) print", 0.0], ["sufflen ) print (", 0.0], ["sufflen ]", 0.0], ["sufflen ] )", 0.0], ["sufflen ] ) #", 0.0], ["sufflens", 0.0], ["sufflens ,", 0.0], ["sufflens , sep='\\t", 0.0], ["sufflens , sep='\\t '", 0.0], ["sufflens [", 0.0], ["sufflens [ i", 0.0], ["sufflens [ i ]", 0.0], ["sufflens [ sufflen", 0.0], ["sufflens [ sufflen ]", 0.0], ["sum", 0.0], ["sum calculate", 0.0], ["string can be a", 0.0], ["string can be", 0.0], ["string can", 0.0], ["split a node", 0.0], ["splits", 0.0], ["splits in", 0.0], ["splits in total", 0.0], ["splits in total [", 0.0], ["stack-sortable", 0.0], ["stack-sortable create", 0.0], ["stack-sortable create a", 0.0], ["stack-sortable create a map", 0.0], ["standing", 0.0], ["standing spectators", 0.0], ["standing spectators at", 0.0], ["standing spectators at time", 0.0], ["start", 0.0], ["start with", 0.0], ["start with the", 0.0], ["start with the null", 0.0], ["statement", 0.0], ["statement once", 0.0], ["statement once all", 0.0], ["statement once all employees", 0.0], ["statement or", 0.0], ["statement or is", 0.0], ["statement or is denied", 0.0], ["statement store", 0.0], ["statement store the", 0.0], ["split a node into", 0.0], ["split a", 0.0], ["statements", 0.0], ["split ( b )", 0.0], ["spectators at time t", 0.0], ["spell", 0.0], ["spell if", 0.0], ["spell if it", 0.0], ["spell if it 's", 0.0], ["spend", 0.0], ["spend together", 0.0], ["spend together print", 0.0], ["spend together print the", 0.0], ["spent", 0.0], ["spent on", 0.0], ["spent on printing", 0.0], ["spent on printing calculate", 0.0], ["spheres", 0.0], ["spheres is", 0.0], ["spheres is greater", 0.0], ["spheres is greater than", 0.0], ["spheres that", 0.0], ["spheres that can", 0.0], ["spheres that can be", 0.0], ["split", 0.0], ["split (", 0.0], ["split ( a", 0.0], ["split ( a )", 0.0], ["split ( b", 0.0], ["statement store the order", 0.0], ["statements ,", 0.0], ["string", 0.0], ["stones from the first", 0.0], ["stones on", 0.0], ["stones on each", 0.0], ["stones on each manhole", 0.0], ["store", 0.0], ["store the", 0.0], ["store the denied", 0.0], ["store the denied employees", 0.0], ["store the direction", 0.0], ["store the direction of", 0.0], ["store the finger", 0.0], ["store the finger movements", 0.0], ["store the information", 0.0], ["store the information about", 0.0], ["store the number", 0.0], ["store the number of", 0.0], ["store the order", 0.0], ["store the order in", 0.0], ["store the outcome", 0.0], ["store the outcome of", 0.0], ["store the positions", 0.0], ["store the positions of", 0.0], ["streets", 0.0], ["streets check", 0.0], ["streets check if", 0.0], ["streets check if there", 0.0], ["stones from the remaining", 0.0], ["stones from the", 0.0], ["statements , the", 0.0], ["stones from", 0.0], ["statements , the remaining", 0.0], ["statements if", 0.0], ["statements if the", 0.0], ["statements if the employee", 0.0], ["statements loop", 0.0], ["statements loop over", 0.0], ["statements loop over the", 0.0], ["statements store", 0.0], ["statements store the", 0.0], ["statements store the outcome", 0.0], ["steps", 0.0], ["steps print", 0.0], ["steps print the", 0.0], ["steps print the total", 0.0], ["steps to", 0.0], ["steps to get", 0.0], ["steps to get from", 0.0], ["steps to the", 0.0], ["steps to the first", 0.0], ["steps to the target", 0.0], ["stone", 0.0], ["stone on", 0.0], ["stone on the", 0.0], ["stone on the k-th", 0.0], ["stones", 0.0], ["the number of non-zero", 0.0], ["the number of painted", 0.0], ["row print the", 0.0], ["valid paths", 0.0], ["v2", 0.0], ["v2 )", 0.0], ["v2 ) /", 0.0], ["v2 ) / |v1||v2|", 0.0], ["val", 0.0], ["val (", 0.0], ["val ( 0-360", 0.0], ["val ( 0-360 )", 0.0], ["valid", 0.0], ["valid ,", 0.0], ["valid , then", 0.0], ["valid , then there", 0.0], ["valid paths for", 0.0], ["until the next lucky", 0.0], ["valid paths for a", 0.0], ["value", 0.0], ["value find", 0.0], ["value find the", 0.0], ["value find the index", 0.0], ["value of", 0.0], ["value of t", 0.0], ["value of t that", 0.0], ["value print", 0.0], ["value print the", 0.0], ["value print the expression", 0.0], ["values", 0.0], ["v1 , v2 )", 0.0], ["v1 , v2", 0.0], ["v1 ,", 0.0], ["v1", 0.0], ["until the wake-up time", 0.0], ["up", 0.0], ["up all", 0.0], ["up all stones", 0.0], ["up all stones from", 0.0], ["update", 0.0], ["update the", 0.0], ["update the number", 0.0], ["update the number of", 0.0], ["upp", 0.0], ["upp ,", 0.0], ["upp , low", 0.0], ["upp , low ,", 0.0], ["use", 0.0], ["use the", 0.0], ["use the first", 0.0], ["use the first spell", 0.0], ["use the second", 0.0], ["use the second spell", 0.0], ["utf-8", 0.0], ["utf-8 -", 0.0], ["utf-8 - *", 0.0], ["utf-8 - * -", 0.0], ["v", 0.0], ["v leaves", 0.0], ["values in", 0.0], ["values in a", 0.0], ["values in a consecutive", 0.0], ["vs", 0.0], ["vs 982400 =", 0.0], ["vs 982400 = b", 0.0], ["wait", 0.0], ["wait iterate", 0.0], ["wait iterate over", 0.0], ["wait iterate over the", 0.0], ["waiting", 0.0], ["waiting time", 0.0], ["wake-up", 0.0], ["wake-up time", 0.0], ["wake-up time find", 0.0], ["wake-up time find the", 0.0], ["walk", 0.0], ["walk to", 0.0], ["walk to the", 0.0], ["walk to the post", 0.0], ["wall", 0.0], ["wall ,", 0.0], ["wall , it", 0.0], ["wall , it 's", 0.0], ["wall if", 0.0], ["wall if the", 0.0], ["wall if the ball", 0.0], ["wall to", 0.0], ["wall to the", 0.0], ["vs 982400", 0.0], ["votes print the outcome", 0.0], ["vasiliy", 0.0], ["votes print the", 0.0], ["vasiliy can", 0.0], ["vasiliy can drive", 0.0], ["vasiliy can drive and", 0.0], ["vasiliy wins", 0.0], ["vasya", 0.0], ["vasya 's", 0.0], ["vasya 's row", 0.0], ["vasya 's row add", 0.0], ["vasya 's row number", 0.0], ["vasya 's row print", 0.0], ["vasya has", 0.0], ["vasya has to", 0.0], ["vasya has to wait", 0.0], ["vlada", 0.0], ["vlada s", 0.0], ["vlada s .", 0.0], ["vote", 0.0], ["vote loop", 0.0], ["vote loop over", 0.0], ["vote loop over the", 0.0], ["vote of", 0.0], ["vote of an", 0.0], ["vote of an employee", 0.0], ["votes", 0.0], ["votes print", 0.0], ["until the wake-up", 0.0], ["until the next", 0.0], ["to the goalpost if", 0.0], ["total number of joy", 0.0], ["total [", 0.0], ["total [ c", 0.0], ["total [ c ,", 0.0], ["total cost", 0.0], ["total cost of", 0.0], ["total cost of the", 0.0], ["total length", 0.0], ["total length of", 0.0], ["total length of wood", 0.0], ["total number", 0.0], ["total number of", 0.0], ["total number of chocolates", 0.0], ["total number of minutes", 0.0], ["until the barn becomes", 0.0], ["total number of steps", 0.0], ["track", 0.0], ["track whether", 0.0], ["track whether an", 0.0], ["track whether an employee", 0.0], ["trailing", 0.0], ["trailing zeros", 0.0], ["trailing zeros print", 0.0], ["trailing zeros print the", 0.0], ["trajectory", 0.0], ["trajectory check", 0.0], ["trajectory check if", 0.0], ["total", 0.0], ["tokitsukaze 's hand calculate", 0.0], ["tokitsukaze 's hand", 0.0], ["tokitsukaze 's", 0.0], ["to the last one", 0.0], ["to the maximum", 0.0], ["to the maximum number", 0.0], ["to the message", 0.0], ["to the message return", 0.0], ["to the post", 0.0], ["to the post office", 0.0], ["to the target", 0.0], ["to the target floor", 0.0], ["to the wall", 0.0], ["to the wall ,", 0.0], ["to type", 0.0], ["to type the", 0.0], ["to type the string", 0.0], ["to vlada", 0.0], ["to vlada s", 0.0], ["to vlada s .", 0.0], ["to wait", 0.0], ["to wait iterate", 0.0], ["to wait iterate over", 0.0], ["together", 0.0], ["together print", 0.0], ["together print the", 0.0], ["together print the result", 0.0], ["tokitsukaze", 0.0], ["trajectory check if the", 0.0], ["transformed", 0.0], ["transformed if", 0.0], ["u", 0.0], ["u , v", 0.0], ["u , v leaves", 0.0], ["unique", 0.0], ["unique print", 0.0], ["unique print the", 0.0], ["unique print the result", 0.0], ["uniquely", 0.0], ["uniquely determined", 0.0], ["uniquely determined calculate", 0.0], ["uniquely determined calculate the", 0.0], ["units", 0.0], ["units print", 0.0], ["units print the", 0.0], ["units print the total", 0.0], ["unlucky", 0.0], ["unlucky ,", 0.0], ["unlucky , print", 0.0], ["unlucky , print 0", 0.0], ["unrated", 0.0], ["unrated due", 0.0], ["unrated due to", 0.0], ["unrated due to lower", 0.0], ["until", 0.0], ["until the", 0.0], ["until the barn", 0.0], ["u ,", 0.0], ["type the string if", 0.0], ["transformed if the", 0.0], ["type the string", 0.0], ["transformed if the required", 0.0], ["try", 0.0], ["try to", 0.0], ["try to fully", 0.0], ["try to fully solve", 0.0], ["turn", 0.0], ["turn get", 0.0], ["turn get the", 0.0], ["turn get the employee", 0.0], ["turns", 0.0], ["turns print", 0.0], ["turns print the", 0.0], ["turns print the result", 0.0], ["two", 0.0], ["two other", 0.0], ["two other nodes", 0.0], ["two other nodes with", 0.0], ["type", 0.0], ["type and", 0.0], ["type and then", 0.0], ["type and then by", 0.0], ["type that", 0.0], ["type that can", 0.0], ["type that can be", 0.0], ["type the", 0.0], ["wall to the goalpost", 0.0], ["want", 0.0], ["want n-1", 0.0], ["xhit ,", 0.0], ["x/sqrt (", 0.0], ["x/sqrt ( xx+yy", 0.0], ["x/sqrt ( xx+yy )", 0.0], ["x2", 0.0], ["x2 ,", 0.0], ["x2 , y1", 0.0], ["x2 , y1 )", 0.0], ["x=str", 0.0], ["x=str (", 0.0], ["x=str ( j", 0.0], ["x=str ( j )", 0.0], ["xhit", 0.0], ["xhit , yhit", 0.0], ["want n-1 splits", 0.0], ["xhit , yhit )", 0.0], ["xx+yy", 0.0], ["xx+yy )", 0.0], ["xx+yy ) cos", 0.0], ["xx+yy ) cos =", 0.0], ["y1", 0.0], ["y1 )", 0.0], ["year", 0.0], ["year ,", 0.0], ["year , increment", 0.0], ["year , increment the", 0.0], ["year 2015", 0.0], ["x/sqrt", 0.0], ["x we want the", 0.0], ["x we want", 0.0], ["x we", 0.0], ["x ) ! /", 0.0], ["x ) a=l", 0.0], ["x ) a=l while", 0.0], ["x ) premissing.discard", 0.0], ["x ) premissing.discard (", 0.0], ["x ) print", 0.0], ["x ) print (", 0.0], ["x ,", 0.0], ["x , t", 0.0], ["x , t )", 0.0], ["x -", 0.0], ["x - 1", 0.0], ["x - 1 )", 0.0], ["x - 1 -", 0.0], ["x - chk_r", 0.0], ["x - chk_r )", 0.0], ["x [", 0.0], ["x [ a", 0.0], ["x [ a :", 0.0], ["x print", 0.0], ["x print the", 0.0], ["x print the beauty", 0.0], ["x that", 0.0], ["x that contains", 0.0], ["x that contains the", 0.0], ["year 2015 count", 0.0], ["year 2015 count the", 0.0], ["year find", 0.0], ["years with exactly one", 0.0], ["yhit )", 0.0], ["zero", 0.0], ["zero in", 0.0], ["zero in the", 0.0], ["zero in the binary", 0.0], ["zero to", 0.0], ["zero to each", 0.0], ["zero to each element", 0.0], ["zeroes", 0.0], ["zeroes [", 0.0], ["zeroes [ -1", 0.0], ["zeroes [ -1 ]", 0.0], ["zeroes print", 0.0], ["zeroes print the", 0.0], ["zeroes print the maximum", 0.0], ["zeros", 0.0], ["zeros .", 0.0], ["zeros . then", 0.0], ["zeros . then len", 0.0], ["zeros print", 0.0], ["zeros print the", 0.0], ["zeros print the number", 0.0], ["|v1||v2|", 0.0], ["~", 0.0], ["~ print", 0.0], ["yhit", 0.0], ["years with exactly", 0.0], ["year find the", 0.0], ["years with", 0.0], ["year find the next", 0.0], ["year if", 0.0], ["year if the", 0.0], ["year if the next", 0.0], ["year is", 0.0], ["year is found", 0.0], ["year is found print", 0.0], ["year is in", 0.0], ["year is in the", 0.0], ["year subtract", 0.0], ["year subtract the", 0.0], ["year subtract the dress", 0.0], ["year to", 0.0], ["year to a", 0.0], ["year to a string", 0.0], ["year until", 0.0], ["year until the", 0.0], ["year until the next", 0.0], ["years", 0.0], ["years in", 0.0], ["years in the", 0.0], ["years in the interval", 0.0], ["years until", 0.0], ["years until the", 0.0], ["years until the next", 0.0], ["x ) !", 0.0], ["x )", 0.0], ["x", 0.0], ["which employees will make", 0.0], ["which p holds", 0.0], ["while", 0.0], ["while a", 0.0], ["while a :", 0.0], ["while a : a-=1", 0.0], ["while gcd", 0.0], ["while gcd (", 0.0], ["while gcd ( k", 0.0], ["while j", 0.0], ["while j <", 0.0], ["while j < i", 0.0], ["white", 0.0], ["white and", 0.0], ["white and not", 0.0], ["white and not on", 0.0], ["who", 0.0], ["who can", 0.0], ["who can cover", 0.0], ["who can cover a", 0.0], ["will", 0.0], ["will be", 0.0], ["will be print", 0.0], ["will be print the", 0.0], ["will end", 0.0], ["will end game", 0.0], ["which p", 0.0], ["which employees will", 0.0], ["will fall", 0.0], ["which employees", 0.0], ["want n-1 splits in", 0.0], ["want the", 0.0], ["want the smallest", 0.0], ["want the smallest smallest", 0.0], ["wardrobe", 0.0], ["wardrobe find", 0.0], ["wardrobe find the", 0.0], ["wardrobe find the expected", 0.0], ["we", 0.0], ["we want", 0.0], ["we want the", 0.0], ["we want the smallest", 0.0], ["weight", 0.0], ["weight of", 0.0], ["weight of a", 0.0], ["weight of a good", 0.0], ["where", 0.0], ["where lara", 0.0], ["where lara will", 0.0], ["where lara will be", 0.0], ["whether", 0.0], ["whether an", 0.0], ["whether an employee", 0.0], ["whether an employee has", 0.0], ["which", 0.0], ["will end game wo", 0.0], ["will fall into", 0.0], ["written calculate the maximum", 0.0], ["with exactly", 0.0], ["with exactly one zero", 0.0], ["with the", 0.0], ["with the available", 0.0], ["with the available budget", 0.0], ["with the existing", 0.0], ["with the existing copybooks", 0.0], ["with the null", 0.0], ["with the null node", 0.0], ["with the same", 0.0], ["with the same academic", 0.0], ["with the same content", 0.0], ["wo", 0.0], ["wo n't", 0.0], ["wo n't end", 0.0], ["wo n't end calculate", 0.0], ["wood", 0.0], ["wood by", 0.0], ["wood by the", 0.0], ["wood by the length", 0.0], ["wood needed", 0.0], ["wood needed for", 0.0], ["wood needed for each", 0.0], ["written", 0.0], ["written calculate", 0.0], ["written calculate the", 0.0], ["with exactly one", 0.0], ["with base n", 0.0], ["will fall into a", 0.0], ["with base", 0.0], ["will make", 0.0], ["will make their", 0.0], ["will make their statements", 0.0], ["will move", 0.0], ["will move indefinitely", 0.0], ["willman", 0.0], ["willman and", 0.0], ["willman and bolt", 0.0], ["willman and bolt can", 0.0], ["winner", 0.0], ["winner is", 0.0], ["winner is the", 0.0], ["winner is the athlete", 0.0], ["winner print", 0.0], ["winner print the", 0.0], ["winner print the number", 0.0], ["winner print the winner", 0.0], ["wins", 0.0], ["wins otherwise", 0.0], ["wins otherwise ,", 0.0], ["wins otherwise , vasiliy", 0.0], ["with", 0.0], ["with added", 0.0], ["with added cost", 0.0], ["with added cost c+a+b", 0.0], ["to the last", 0.0], ["to the goalpost ,", 0.0], ["the number of pairs", 0.0], ["the team", 0.0], ["the sum", 0.0], ["the sum of", 0.0], ["the sum of f", 0.0], ["the system", 0.0], ["the system with", 0.0], ["the system with base", 0.0], ["the target", 0.0], ["the target floor", 0.0], ["the target floor of", 0.0], ["the teacher", 0.0], ["the teacher asked", 0.0], ["the teacher asked sergei", 0.0], ["the team size", 0.0], ["the same year ,", 0.0], ["the tiles", 0.0], ["the tiles in", 0.0], ["the tiles in tokitsukaze", 0.0], ["the time", 0.0], ["the time it", 0.0], ["the time it takes", 0.0], ["the time to", 0.0], ["the time to serve", 0.0], ["the total", 0.0], ["the total cost", 0.0], ["the total cost of", 0.0], ["the total length", 0.0], ["the string is balanced", 0.0], ["the string is 8", 0.0], ["the string is 11", 0.0], ["the string is", 0.0], ["the script file", 0.0], ["the script file rewrite", 0.0], ["the second", 0.0], ["the second progression", 0.0], ["the second progression find", 0.0], ["the second spell", 0.0], ["the second spell if", 0.0], ["the shortest", 0.0], ["the shortest possible", 0.0], ["the shortest possible accordion", 0.0], ["the smallest", 0.0], ["the smallest n", 0.0], ["the smallest n which", 0.0], ["the smallest smallest", 0.0], ["the smallest smallest such", 0.0], ["the snooze", 0.0], ["the snooze button", 0.0], ["the sofa", 0.0], ["the sofa that", 0.0], ["the sofa that meets", 0.0], ["the string", 0.0], ["the string can", 0.0], ["the string can encode", 0.0], ["the string if", 0.0], ["the string if there", 0.0], ["the total length of", 0.0], ["the total number", 0.0], ["the total number of", 0.0], ["the year", 0.0], ["the year 2015 count", 0.0], ["the year find", 0.0], ["the year find the", 0.0], ["the year subtract", 0.0], ["the year subtract the", 0.0], ["the year to", 0.0], ["the year to a", 0.0], ["the year until", 0.0], ["the year until the", 0.0], ["their", 0.0], ["their original", 0.0], ["their original order", 0.0], ["their original order sort", 0.0], ["their original positions", 0.0], ["their statement", 0.0], ["their statement once", 0.0], ["their statement once all", 0.0], ["their statement or", 0.0], ["their statement or is", 0.0], ["their statement store", 0.0], ["their statement store the", 0.0], ["their statements", 0.0], ["their statements ,", 0.0], ["their statements , the", 0.0], ["their statements if", 0.0], ["the year 2015", 0.0], ["the winner print the", 0.0], ["the value", 0.0], ["the winner print", 0.0], ["the value of", 0.0], ["the value of t", 0.0], ["the vote", 0.0], ["the vote loop", 0.0], ["the vote loop over", 0.0], ["the vote of", 0.0], ["the vote of an", 0.0], ["the waiting", 0.0], ["the waiting time", 0.0], ["the wake-up", 0.0], ["the wake-up time", 0.0], ["the wake-up time find", 0.0], ["the wall", 0.0], ["the wall ,", 0.0], ["the wall , it", 0.0], ["the wall if", 0.0], ["the wall if the", 0.0], ["the wall to", 0.0], ["the wall to the", 0.0], ["the wardrobe", 0.0], ["the wardrobe find", 0.0], ["the wardrobe find the", 0.0], ["the winner", 0.0], ["the winner is", 0.0], ["the winner is the", 0.0], ["the script", 0.0], ["the same year", 0.0], ["to the goalpost", 0.0], ["the pixel is", 0.0], ["the overlapping minutes", 0.0], ["the overlapping minutes between", 0.0], ["the pawns", 0.0], ["the pawns '", 0.0], ["the pawns ' positions", 0.0], ["the pedestrian", 0.0], ["the pedestrian light", 0.0], ["the pedestrian light is", 0.0], ["the perfect", 0.0], ["the perfect longcat", 0.0], ["the perfect longcat number", 0.0], ["the pixel", 0.0], ["the pixel is white", 0.0], ["the same print the", 0.0], ["the pixels", 0.0], ["the pixels check", 0.0], ["the pixels check if", 0.0], ["the point", 0.0], ["the point of", 0.0], ["the point of aiming", 0.0], ["the positions", 0.0], ["the positions of", 0.0], ["the positions of the", 0.0], ["the possible", 0.0], ["the possible sizes", 0.0], ["the possible sizes of", 0.0], ["the overlapping", 0.0], ["the outcome of the", 0.0], ["the outcome of", 0.0], ["the outcome", 0.0], ["the number of rows", 0.0], ["the number of sofas", 0.0], ["the number of sparrows", 0.0], ["the number of standing", 0.0], ["the number of steps", 0.0], ["the number of stones", 0.0], ["the number of students", 0.0], ["the number of swaps", 0.0], ["the number of terms", 0.0], ["the number of the", 0.0], ["the number of trailing", 0.0], ["the number of valid", 0.0], ["the number of years", 0.0], ["the number to", 0.0], ["the number to a", 0.0], ["the only", 0.0], ["the only survivor", 0.0], ["the only survivor print", 0.0], ["the operation", 0.0], ["the operation numbers", 0.0], ["the order", 0.0], ["the order in", 0.0], ["the order in which", 0.0], ["the order they", 0.0], ["the order they will", 0.0], ["the post", 0.0], ["the post office", 0.0], ["the post office find", 0.0], ["the required", 0.0], ["the required frame exists", 0.0], ["the required number", 0.0], ["the required number of", 0.0], ["the result", 0.0], ["the result calculate", 0.0], ["the result calculate the", 0.0], ["the results", 0.0], ["the round", 0.0], ["the round is", 0.0], ["the round is rated", 0.0], ["the round is unrated", 0.0], ["the row", 0.0], ["the row and", 0.0], ["the row and column", 0.0], ["the rows", 0.0], ["the rows to", 0.0], ["the rows to find", 0.0], ["the same", 0.0], ["the same academic", 0.0], ["the same academic performance", 0.0], ["the same and", 0.0], ["the same and the", 0.0], ["the same content", 0.0], ["the same content as", 0.0], ["the same print", 0.0], ["the required frame", 0.0], ["the remocrats faction if", 0.0], ["the previous", 0.0], ["the remocrats faction ,", 0.0], ["the previous file", 0.0], ["the probabilities", 0.0], ["the probability", 0.0], ["the probability of", 0.0], ["the probability of each", 0.0], ["the process", 0.0], ["the process print", 0.0], ["the process print the", 0.0], ["the records", 0.0], ["the records can", 0.0], ["the records can be", 0.0], ["the rectangle", 0.0], ["the region", 0.0], ["the region the", 0.0], ["the region the cow", 0.0], ["the remaining", 0.0], ["the remaining elements", 0.0], ["the remaining elements in", 0.0], ["the remaining employee", 0.0], ["the remaining employee votes", 0.0], ["the remaining manholes", 0.0], ["the remaining string", 0.0], ["the remaining string can", 0.0], ["the remocrats", 0.0], ["the remocrats faction", 0.0], ["their statements if the", 0.0], ["their statements loop", 0.0], ["their statements loop over", 0.0], ["to get from", 0.0], ["to each element", 0.0], ["to find", 0.0], ["to find the", 0.0], ["to find the length", 0.0], ["to find the number", 0.0], ["to fulfill", 0.0], ["to fulfill everyone", 0.0], ["to fulfill everyone 's", 0.0], ["to fully", 0.0], ["to fully solve", 0.0], ["to fully solve fully_solved", 0.0], ["to get", 0.0], ["to get from edvard", 0.0], ["their statements store", 0.0], ["to get k", 0.0], ["to get k in", 0.0], ["to hours", 0.0], ["to hours and", 0.0], ["to hours and minutes", 0.0], ["to k", 0.0], ["to k construct", 0.0], ["to k construct the", 0.0], ["to low", 0.0], ["to low illegal", 0.0], ["to low illegal :", 0.0], ["to lower", 0.0], ["to each", 0.0], ["to drive those kilometers", 0.0], ["to drive those", 0.0], ["to drive", 0.0], ["times to press", 0.0], ["times to press the", 0.0], ["tmp_mass", 0.0], ["tmp_mass )", 0.0], ["tmp_mass ) print", 0.0], ["tmp_mass ) print (", 0.0], ["to", 0.0], ["to a", 0.0], ["to a list", 0.0], ["to a list of", 0.0], ["to a string", 0.0], ["to a string count", 0.0], ["to a string find", 0.0], ["to be", 0.0], ["to be deleted", 0.0], ["to be deleted print", 0.0], ["to become", 0.0], ["to become empty", 0.0], ["to become empty iterate", 0.0], ["to buy", 0.0], ["to buy the", 0.0], ["to buy the required", 0.0], ["to check", 0.0], ["to check if", 0.0], ["to check if a", 0.0], ["to lower rated", 0.0], ["to lower rated participant", 0.0], ["to m", 0.0], ["to score", 0.0], ["to score calculate the", 0.0], ["to serve", 0.0], ["to serve passengers", 0.0], ["to serve passengers in", 0.0], ["to sleep", 0.0], ["to sleep print", 0.0], ["to sleep print the", 0.0], ["to store", 0.0], ["to store the", 0.0], ["to store the denied", 0.0], ["to store the direction", 0.0], ["to store the finger", 0.0], ["to store the information", 0.0], ["to store the number", 0.0], ["to store the positions", 0.0], ["to the", 0.0], ["to the back", 0.0], ["to the back is", 0.0], ["to the barn", 0.0], ["to the barn eat", 0.0], ["to the center", 0.0], ["to the center subtract", 0.0], ["to the first", 0.0], ["to the first floor", 0.0], ["to the first stone", 0.0], ["to score calculate", 0.0], ["to repair the car", 0.0], ["to m print", 0.0], ["to repair the", 0.0], ["to m print the", 0.0], ["to n", 0.0], ["to n print", 0.0], ["to n print the", 0.0], ["to natasha", 0.0], ["to natasha 's", 0.0], ["to natasha 's apartment", 0.0], ["to or", 0.0], ["to or from", 0.0], ["to or from that", 0.0], ["to prepare", 0.0], ["to prepare n", 0.0], ["to prepare n potions", 0.0], ["to press", 0.0], ["to press the", 0.0], ["to press the snooze", 0.0], ["to reach", 0.0], ["to reach the", 0.0], ["to reach the perfect", 0.0], ["to remove", 0.0], ["to remove ,", 0.0], ["to remove , return", 0.0], ["to remove and", 0.0], ["to remove and repeat", 0.0], ["to repair", 0.0], ["times to", 0.0], ["times the teacher asked", 0.0], ["times the teacher", 0.0], ["there are exactly k-1", 0.0], ["there is a", 0.0], ["there is a copy", 0.0], ["there is a path", 0.0], ["there is already", 0.0], ["there is already a", 0.0], ["there is no", 0.0], ["there is no koutsu", 0.0], ["they", 0.0], ["they can", 0.0], ["they can spend", 0.0], ["they can spend together", 0.0], ["they deny", 0.0], ["they deny the", 0.0], ["they deny the vote", 0.0], ["they skip", 0.0], ["they skip their", 0.0], ["they skip their turn", 0.0], ["they tie", 0.0], ["they tie otherwise", 0.0], ["they tie otherwise ,", 0.0], ["they will", 0.0], ["they will make", 0.0], ["they will make their", 0.0], ["this", 0.0], ["this code", 0.0], ["there is", 0.0], ["there are exactly", 0.0], ["this code is dedicated", 0.0], ["there are enough grapes", 0.0], ["their statements store the", 0.0], ["their sum", 0.0], ["their sum is", 0.0], ["their sum is divisible", 0.0], ["their turn", 0.0], ["their turn get", 0.0], ["their turn get the", 0.0], ["then", 0.0], ["then by", 0.0], ["then by name", 0.0], ["then by name calculate", 0.0], ["then len", 0.0], ["then len (", 0.0], ["then len ( a", 0.0], ["then there", 0.0], ["then there is", 0.0], ["then there is a", 0.0], ["then this", 0.0], ["then this is", 0.0], ["then this is our", 0.0], ["there", 0.0], ["there are", 0.0], ["there are at", 0.0], ["there are at least", 0.0], ["there are enough", 0.0], ["this code is", 0.0], ["this idx", 0.0], ["times the", 0.0], ["tiles in", 0.0], ["tiles in tokitsukaze 's", 0.0], ["tiles print", 0.0], ["tiles print the", 0.0], ["tiles print the result", 0.0], ["time", 0.0], ["time find", 0.0], ["time find the", 0.0], ["time find the multiple", 0.0], ["time it", 0.0], ["time it takes", 0.0], ["time it takes to", 0.0], ["time print", 0.0], ["time print the", 0.0], ["time print the minimum", 0.0], ["time t", 0.0], ["time to", 0.0], ["time to prepare", 0.0], ["time to prepare n", 0.0], ["time to serve", 0.0], ["time to serve passengers", 0.0], ["time_str", 0.0], ["time_str to", 0.0], ["time_str to hours", 0.0], ["time_str to hours and", 0.0], ["times", 0.0], ["tiles in tokitsukaze", 0.0], ["tiles get the tiles", 0.0], ["this idx done", 0.0], ["tiles get the", 0.0], ["this idx done to", 0.0], ["this is", 0.0], ["this is our", 0.0], ["this is our answer", 0.0], ["those", 0.0], ["those kilometers", 0.0], ["those kilometers calculate", 0.0], ["those kilometers calculate the", 0.0], ["ticket", 0.0], ["ticket number", 0.0], ["ticket number calculate", 0.0], ["ticket number calculate the", 0.0], ["tie", 0.0], ["tie otherwise", 0.0], ["tie otherwise ,", 0.0], ["tie otherwise , the", 0.0], ["tile", 0.0], ["tile otherwise", 0.0], ["tile otherwise ,", 0.0], ["tile otherwise , draw", 0.0], ["tiles", 0.0], ["tiles calculate", 0.0], ["tiles calculate the", 0.0], ["tiles calculate the total", 0.0], ["tiles get", 0.0], ["row print the waiting", 0.0], ["row print", 0.0], ["l , r ]", 0.0], ["number of bottles", 0.0], ["number is", 0.0], ["number is unique", 0.0], ["number is unique print", 0.0], ["number not", 0.0], ["number not exceeding", 0.0], ["number not exceeding b", 0.0], ["number number", 0.0], ["number number of", 0.0], ["number number of seconds", 0.0], ["number of", 0.0], ["number of bars", 0.0], ["number of bars needed", 0.0], ["number of bottles of", 0.0], ["not equal", 0.0], ["number of bourles", 0.0], ["number of bourles that", 0.0], ["number of bourles to", 0.0], ["number of candies", 0.0], ["number of candies that", 0.0], ["number of candy", 0.0], ["number of candy canes", 0.0], ["number of caught", 0.0], ["number of caught fishes", 0.0], ["number of chocolates", 0.0], ["number of chocolates print", 0.0], ["number of columns", 0.0], ["number check if the", 0.0], ["number check if", 0.0], ["number check", 0.0], ["number calculate the minimum", 0.0], ["not equal to n", 0.0], ["not exceeding", 0.0], ["not exceeding b", 0.0], ["not exceeding b remove", 0.0], ["not on", 0.0], ["not on the", 0.0], ["not on the border", 0.0], ["not pour", 0.0], ["not pour his", 0.0], ["not pour his glass", 0.0], ["not the", 0.0], ["not the same", 0.0], ["not the same and", 0.0], ["np", 0.0], ["np ,", 0.0], ["np , co1", 0.0], ["np , co1 ,", 0.0], ["null", 0.0], ["null node", 0.0], ["null node (", 0.0], ["null node ( prefix", 0.0], ["number", 0.0], ["number calculate", 0.0], ["number calculate the", 0.0], ["number calculate the finger", 0.0], ["number of columns print", 0.0], ["number of consecutive", 0.0], ["number of consecutive elements", 0.0], ["number of integers", 0.0], ["number of joy", 0.0], ["number of joy units", 0.0], ["number of k-divisible", 0.0], ["number of k-divisible numbers", 0.0], ["number of kilometers", 0.0], ["number of kilometers that", 0.0], ["number of letters", 0.0], ["number of letters to", 0.0], ["number of lines", 0.0], ["number of lines print", 0.0], ["number of lucky", 0.0], ["number of lucky years", 0.0], ["number of minutes", 0.0], ["number of minutes calculate", 0.0], ["number of minutes they", 0.0], ["number of minutes to", 0.0], ["number of minutes until", 0.0], ["number of moves", 0.0], ["number of moves and", 0.0], ["number of moves calculate", 0.0], ["number of moves get", 0.0], ["number of moves move", 0.0], ["number of moves print", 0.0], ["number of moves required", 0.0], ["number of moves to", 0.0], ["number of integers in", 0.0], ["number of grains that", 0.0], ["number of copybooks", 0.0], ["number of grains", 0.0], ["number of copybooks print", 0.0], ["number of copybooks that", 0.0], ["number of days", 0.0], ["number of days it", 0.0], ["number of days update", 0.0], ["number of digits", 0.0], ["number of digits to", 0.0], ["number of distinct", 0.0], ["number of distinct integers", 0.0], ["number of dresses", 0.0], ["number of dresses in", 0.0], ["number of dresses print", 0.0], ["number of examples", 0.0], ["number of examples print", 0.0], ["number of exchanges", 0.0], ["number of exchanges print", 0.0], ["number of extra", 0.0], ["number of extra tiles", 0.0], ["number of fights", 0.0], ["number of fights and", 0.0], ["number of fights check", 0.0], ["number of finger", 0.0], ["number of finger movements", 0.0], ["number of fishes", 0.0], ["number of fishes that", 0.0], ["not equal to", 0.0], ["not close enough to", 0.0], ["n and", 0.0], ["nearest zero to each", 0.0], ["n-1 splits in total", 0.0], ["name", 0.0], ["name calculate", 0.0], ["name calculate the", 0.0], ["name calculate the number", 0.0], ["natasha", 0.0], ["natasha 's", 0.0], ["natasha 's apartment", 0.0], ["natasha 's apartment calculate", 0.0], ["nearest", 0.0], ["nearest zero", 0.0], ["nearest zero to", 0.0], ["necessary", 0.0], ["not close enough", 0.0], ["necessary amount", 0.0], ["necessary amount of", 0.0], ["necessary amount of lemonade", 0.0], ["needed", 0.0], ["needed for", 0.0], ["needed for each", 0.0], ["needed for each door", 0.0], ["needed for each person", 0.0], ["needed print", 0.0], ["needed print the", 0.0], ["needed print the number", 0.0], ["needed to", 0.0], ["n-1 splits in", 0.0], ["n-1 splits", 0.0], ["n-1 ) r=0 f=", 0.0], ["n-1 ) r=0", 0.0], ["n and find the", 0.0], ["n j=10", 0.0], ["n j=10 *", 0.0], ["n j=10 * *", 0.0], ["n potions", 0.0], ["n potions use", 0.0], ["n potions use the", 0.0], ["n print", 0.0], ["n print the", 0.0], ["n print the result", 0.0], ["n that", 0.0], ["n that is", 0.0], ["n that is not", 0.0], ["n which", 0.0], ["n which p", 0.0], ["n which p holds", 0.0], ["n't", 0.0], ["n't end", 0.0], ["n't end calculate", 0.0], ["n't end calculate the", 0.0], ["n't have", 0.0], ["n't have leading", 0.0], ["n't have leading zeros", 0.0], ["n-1", 0.0], ["n-1 )", 0.0], ["needed to reach", 0.0], ["needed to reach the", 0.0], ["new", 0.0], ["nodes have prefix", 0.0], ["nodes with", 0.0], ["nodes with added", 0.0], ["nodes with added cost", 0.0], ["nom", 0.0], ["nom can", 0.0], ["nom can eat", 0.0], ["nom can eat calculate", 0.0], ["non-palindrome", 0.0], ["non-palindrome substring", 0.0], ["non-palindrome substring find", 0.0], ["non-palindrome substring find the", 0.0], ["non-palindrome substring print", 0.0], ["non-palindrome substring print the", 0.0], ["non-zero", 0.0], ["non-zero digits", 0.0], ["non-zero digits in", 0.0], ["non-zero digits in the", 0.0], ["not", 0.0], ["not an", 0.0], ["not an accordion", 0.0], ["not an accordion ,", 0.0], ["not be", 0.0], ["not be uniquely", 0.0], ["not be uniquely determined", 0.0], ["not close", 0.0], ["nodes have prefix costs", 0.0], ["nodes have", 0.0], ["new array", 0.0], ["nodes", 0.0], ["new nodes", 0.0], ["new nodes have", 0.0], ["new nodes have prefix", 0.0], ["next", 0.0], ["next lucky", 0.0], ["next lucky year", 0.0], ["next lucky year if", 0.0], ["next lucky year is", 0.0], ["no", 0.0], ["no extra", 0.0], ["no extra tiles", 0.0], ["no extra tiles get", 0.0], ["no koutsu", 0.0], ["no koutsu or", 0.0], ["no koutsu or shuntsu", 0.0], ["no path", 0.0], ["no path is", 0.0], ["no path is found", 0.0], ["node", 0.0], ["node (", 0.0], ["node ( prefix", 0.0], ["node ( prefix cost", 0.0], ["node into", 0.0], ["node into two", 0.0], ["node into two other", 0.0], ["number of multiples", 0.0], ["number of multiples of", 0.0], ["number of non-zero", 0.0], ["of each ribbon determine", 0.0], ["of distinct integers the", 0.0], ["of dresses", 0.0], ["of dresses in", 0.0], ["of dresses in the", 0.0], ["of dresses print", 0.0], ["of dresses print the", 0.0], ["of each", 0.0], ["of each bar", 0.0], ["of each bar to", 0.0], ["of each letter", 0.0], ["of each letter calculate", 0.0], ["of each ribbon", 0.0], ["of each species", 0.0], ["number of non-zero digits", 0.0], ["of each species being", 0.0], ["of each type", 0.0], ["of each type that", 0.0], ["of edvard", 0.0], ["of edvard 's", 0.0], ["of edvard 's apartment", 0.0], ["of examples", 0.0], ["of examples print", 0.0], ["of examples print the", 0.0], ["of exchanges", 0.0], ["of exchanges print", 0.0], ["of exchanges print the", 0.0], ["of distinct integers", 0.0], ["of distinct", 0.0], ["of digits to be", 0.0], ["of digits to", 0.0], ["of caught", 0.0], ["of caught fishes", 0.0], ["of caught fishes print", 0.0], ["of chocolates", 0.0], ["of chocolates print", 0.0], ["of chocolates print the", 0.0], ["of columns", 0.0], ["of columns print", 0.0], ["of columns print the", 0.0], ["of consecutive", 0.0], ["of consecutive elements", 0.0], ["of consecutive elements that", 0.0], ["of copybooks", 0.0], ["of copybooks print", 0.0], ["of copybooks print the", 0.0], ["of copybooks that", 0.0], ["of copybooks that can", 0.0], ["of days", 0.0], ["of days it", 0.0], ["of days it takes", 0.0], ["of days update", 0.0], ["of days update the", 0.0], ["of digits", 0.0], ["of digits sort", 0.0], ["of digits sort the", 0.0], ["of extra", 0.0], ["of extra tiles", 0.0], ["of extra tiles print", 0.0], ["of k", 0.0], ["of k between a", 0.0], ["of k-divisible", 0.0], ["of k-divisible numbers", 0.0], ["of kilometers", 0.0], ["of kilometers that", 0.0], ["of kilometers that vasiliy", 0.0], ["of kvass", 0.0], ["of kvass ,", 0.0], ["of kvass , print", 0.0], ["of kvass that", 0.0], ["of kvass that can", 0.0], ["of lemonade", 0.0], ["of lemonade print", 0.0], ["of lemonade print the", 0.0], ["of length", 0.0], ["of length k", 0.0], ["of length k calculate", 0.0], ["of length k print", 0.0], ["of letters", 0.0], ["of letters to", 0.0], ["of letters to remove", 0.0], ["of lines", 0.0], ["of lines print", 0.0], ["of lines print the", 0.0], ["of lucky", 0.0], ["of k between", 0.0], ["of joy units print", 0.0], ["of f", 0.0], ["of joy units", 0.0], ["of f (", 0.0], ["of f ( i", 0.0], ["of fights", 0.0], ["of fights and", 0.0], ["of fights and the", 0.0], ["of fights check", 0.0], ["of fights check if", 0.0], ["of finger", 0.0], ["of finger movements", 0.0], ["of finger movements for", 0.0], ["of fishes", 0.0], ["of fishes that", 0.0], ["of fishes that can", 0.0], ["of grains", 0.0], ["of grains that", 0.0], ["of grains that are", 0.0], ["of incidence", 0.0], ["of incidence and", 0.0], ["of incidence and reflection", 0.0], ["of integers", 0.0], ["of integers in", 0.0], ["of integers in the", 0.0], ["of integers such", 0.0], ["of integers such that", 0.0], ["of joy", 0.0], ["of candy canes is", 0.0], ["of candy canes and", 0.0], ["of candy canes", 0.0], ["number of standing spectators", 0.0], ["number of steps print", 0.0], ["number of steps to", 0.0], ["number of stones", 0.0], ["number of stones on", 0.0], ["number of students", 0.0], ["number of students with", 0.0], ["number of swaps", 0.0], ["number of terms", 0.0], ["number of terms if", 0.0], ["number of terms is", 0.0], ["number of terms otherwise", 0.0], ["number of terms that", 0.0], ["number of the", 0.0], ["number of the sofa", 0.0], ["number of times", 0.0], ["number of times to", 0.0], ["number of trailing", 0.0], ["number of trailing zeros", 0.0], ["number of turns", 0.0], ["number of turns print", 0.0], ["number of valid", 0.0], ["number of valid paths", 0.0], ["number of years", 0.0], ["number of years until", 0.0], ["number of years with", 0.0], ["number of steps", 0.0], ["number of standing", 0.0], ["number print the", 0.0], ["number of spheres that", 0.0], ["number of operations", 0.0], ["number of operations and", 0.0], ["number of operations needed", 0.0], ["number of painted", 0.0], ["number of painted tiles", 0.0], ["number of pairs", 0.0], ["number of pairs of", 0.0], ["number of pieces", 0.0], ["number of pieces that", 0.0], ["number of players", 0.0], ["number of players for", 0.0], ["number of questions", 0.0], ["number of questions a", 0.0], ["number of rows", 0.0], ["number of rows and", 0.0], ["number of rows served", 0.0], ["number of seconds", 0.0], ["number of seconds to", 0.0], ["number of seconds vasya", 0.0], ["number of sofas", 0.0], ["number of sofas that", 0.0], ["number of sparrows", 0.0], ["number of sparrows that", 0.0], ["number of spheres", 0.0], ["number of spheres is", 0.0], ["number print", 0.0], ["number print the maximum", 0.0], ["of candy", 0.0], ["of a+k and b+k", 0.0], ["of a_rest is", 0.0], ["of a_rest is larger", 0.0], ["of aiming", 0.0], ["of aiming print", 0.0], ["of aiming print the", 0.0], ["of an", 0.0], ["of an employee", 0.0], ["of an employee from", 0.0], ["of bars", 0.0], ["of bars needed", 0.0], ["of bars needed print", 0.0], ["of bottles", 0.0], ["of bottles of", 0.0], ["of bottles of each", 0.0], ["of bourles", 0.0], ["of bourles that", 0.0], ["of bourles that can", 0.0], ["of bourles to", 0.0], ["of bourles to the", 0.0], ["of buying", 0.0], ["of buying the", 0.0], ["of buying the necessary", 0.0], ["of candies", 0.0], ["of candies that", 0.0], ["of candies that om", 0.0], ["of a_rest", 0.0], ["of a+k and", 0.0], ["number print the number", 0.0], ["of a+k", 0.0], ["number to", 0.0], ["number to a", 0.0], ["number to a string", 0.0], ["number to get", 0.0], ["number to get k", 0.0], ["numbers", 0.0], ["numbers are", 0.0], ["numbers are <", 0.0], ["numbers are < x", 0.0], ["numbers if", 0.0], ["numbers if there", 0.0], ["numbers if there are", 0.0], ["nut", 0.0], ["nut can", 0.0], ["nut can not", 0.0], ["nut can not pour", 0.0], ["of", 0.0], ["of 0", 0.0], ["of 0 's", 0.0], ["of 0 's start", 0.0], ["of a", 0.0], ["of a and", 0.0], ["of a and b", 0.0], ["of a good", 0.0], ["of a good subset", 0.0], ["n and find", 0.0], ["n - x -", 0.0], ["of lucky years in", 0.0], ["longest non-palindrome substring print", 0.0], ["long", 0.0], ["long series", 0.0], ["long series of", 0.0], ["long series of 0", 0.0], ["longcat", 0.0], ["longcat number", 0.0], ["longcat number print", 0.0], ["longcat number print the", 0.0], ["longest", 0.0], ["longest non-palindrome", 0.0], ["longest non-palindrome substring", 0.0], ["longest non-palindrome substring find", 0.0], ["loop", 0.0], ["level < k :", 0.0], ["loop over", 0.0], ["loop over the", 0.0], ["loop over the employees", 0.0], ["low", 0.0], ["low ,", 0.0], ["low , left", 0.0], ["low , left ,", 0.0], ["low illegal", 0.0], ["low illegal :", 0.0], ["low illegal : pop", 0.0], ["lower", 0.0], ["lower rated", 0.0], ["liters of kvass ,", 0.0], ["liters of kvass", 0.0], ["liters of", 0.0], ["liters", 0.0], ["light is", 0.0], ["light is green", 0.0], ["light is green and", 0.0], ["light of", 0.0], ["light of the", 0.0], ["light of the lane", 0.0], ["lines", 0.0], ["lines calculate", 0.0], ["lines calculate the", 0.0], ["lines calculate the area", 0.0], ["lines print", 0.0], ["lines print the", 0.0], ["lines print the script", 0.0], ["list", 0.0], ["list (", 0.0], ["list ( map", 0.0], ["list ( map (", 0.0], ["list ( split", 0.0], ["list ( split (", 0.0], ["list of", 0.0], ["list of digits", 0.0], ["list of digits sort", 0.0], ["list to", 0.0], ["list to store", 0.0], ["list to store the", 0.0], ["lower rated participant", 0.0], ["lower rated participant taking", 0.0], ["lucky", 0.0], ["making their statements", 0.0], ["manhole", 0.0], ["manhole calculate", 0.0], ["manhole calculate the", 0.0], ["manhole calculate the minimum", 0.0], ["manhole pick", 0.0], ["manhole pick up", 0.0], ["manhole pick up all", 0.0], ["manholes", 0.0], ["manholes pick", 0.0], ["manholes pick up", 0.0], ["manholes pick up all", 0.0], ["many", 0.0], ["many numbers", 0.0], ["many numbers are", 0.0], ["many numbers are <", 0.0], ["many times", 0.0], ["many times the", 0.0], ["many times the teacher", 0.0], ["map", 0.0], ["map (", 0.0], ["map ( int", 0.0], ["map ( int ,", 0.0], ["map to", 0.0], ["map to store", 0.0], ["map to store the", 0.0], ["making their statements if", 0.0], ["making their", 0.0], ["lucky year", 0.0], ["making", 0.0], ["lucky year if", 0.0], ["lucky year if the", 0.0], ["lucky year is", 0.0], ["lucky year is found", 0.0], ["lucky year is in", 0.0], ["lucky years", 0.0], ["lucky years in", 0.0], ["lucky years in the", 0.0], ["m", 0.0], ["m print", 0.0], ["m print the", 0.0], ["m print the sum", 0.0], ["made", 0.0], ["made their", 0.0], ["made their statement", 0.0], ["made their statement once", 0.0], ["made their statement or", 0.0], ["made their statement store", 0.0], ["made their statements", 0.0], ["made their statements ,", 0.0], ["make", 0.0], ["make their", 0.0], ["make their statements", 0.0], ["make their statements loop", 0.0], ["make their statements store", 0.0], ["light", 0.0], ["level < k", 0.0], ["n - x )", 0.0], ["lcm of a+k and", 0.0], ["last one .", 0.0], ["last one . illegal", 0.0], ["last one al", 0.0], ["last one al =", 0.0], ["last_level", 0.0], ["lborder", 0.0], ["lborder )", 0.0], ["lborder ) print", 0.0], ["lborder ) print (", 0.0], ["lcm", 0.0], ["lcm of", 0.0], ["lcm of a+k", 0.0], ["leading", 0.0], ["level <", 0.0], ["leading zeroes", 0.0], ["leading zeroes print", 0.0], ["leading zeroes print the", 0.0], ["leading zeros", 0.0], ["leading zeros .", 0.0], ["leading zeros . then", 0.0], ["least", 0.0], ["least k-1", 0.0], ["least k-1 smaller", 0.0], ["least k-1 smaller numbers", 0.0], ["least one", 0.0], ["least one extra", 0.0], ["last one", 0.0], ["last", 0.0], ["larger than b_rest print", 0.0], ["larger than b_rest", 0.0], ["l ]", 0.0], ["l ] )", 0.0], ["l ] ) if", 0.0], ["l=len", 0.0], ["l=len (", 0.0], ["l=len ( x", 0.0], ["l=len ( x )", 0.0], ["l_1-r_1", 0.0], ["l_1-r_1 and", 0.0], ["l_1-r_1 and l_2-r_2", 0.0], ["l_1-r_1 and l_2-r_2 subtract", 0.0], ["l_2-r_2", 0.0], ["l_2-r_2 subtract", 0.0], ["l_2-r_2 subtract the", 0.0], ["l_2-r_2 subtract the minutes", 0.0], ["lane", 0.0], ["lane that", 0.0], ["lane that can", 0.0], ["lane that can get", 0.0], ["lara", 0.0], ["lara will", 0.0], ["lara will be", 0.0], ["lara will be print", 0.0], ["larger", 0.0], ["larger than", 0.0], ["least one extra tile", 0.0], ["leaves", 0.0], ["left", 0.0], ["length of the longest", 0.0], ["length of the shortest", 0.0], ["length of the string", 0.0], ["length of wood", 0.0], ["length of wood by", 0.0], ["length of wood needed", 0.0], ["less", 0.0], ["less than", 0.0], ["less than right", 0.0], ["less than right ,", 0.0], ["letter", 0.0], ["letter calculate", 0.0], ["letter calculate the", 0.0], ["letter calculate the total", 0.0], ["letter is", 0.0], ["letter is followed", 0.0], ["letter is followed by", 0.0], ["letter to", 0.0], ["letter to the", 0.0], ["letter to the message", 0.0], ["letters", 0.0], ["letters to", 0.0], ["letters to remove", 0.0], ["letters to remove ,", 0.0], ["letters to remove and", 0.0], ["level", 0.0], ["length of the result", 0.0], ["length of the golden", 0.0], ["left ,", 0.0], ["length of the", 0.0], ["left , right", 0.0], ["left , right )", 0.0], ["legal", 0.0], ["legal print", 0.0], ["legal print (", 0.0], ["legal print ( ``", 0.0], ["lemonade", 0.0], ["lemonade print", 0.0], ["lemonade print the", 0.0], ["lemonade print the total", 0.0], ["len", 0.0], ["len (", 0.0], ["len ( a", 0.0], ["len ( a )", 0.0], ["len ( b", 0.0], ["len ( b )", 0.0], ["length", 0.0], ["length k", 0.0], ["length k calculate", 0.0], ["length k calculate the", 0.0], ["length k print", 0.0], ["length k print the", 0.0], ["length of", 0.0], ["length of each", 0.0], ["length of each bar", 0.0], ["mark", 0.0], ["mark that", 0.0], ["mark that the", 0.0], ["minutes spent on printing", 0.0], ["minimum time to", 0.0], ["minimum time to prepare", 0.0], ["minutes", 0.0], ["minutes between", 0.0], ["minutes between l_1-r_1", 0.0], ["minutes between l_1-r_1 and", 0.0], ["minutes calculate", 0.0], ["minutes calculate the", 0.0], ["minutes calculate the minimum", 0.0], ["minutes calculate the possible", 0.0], ["minutes spent", 0.0], ["minutes spent on", 0.0], ["minutes they", 0.0], ["mark that the employee", 0.0], ["minutes they can", 0.0], ["minutes they can spend", 0.0], ["minutes to", 0.0], ["minutes to sleep", 0.0], ["minutes to sleep print", 0.0], ["minutes until", 0.0], ["minutes until the", 0.0], ["minutes until the wake-up", 0.0], ["move", 0.0], ["move indefinitely", 0.0], ["move to", 0.0], ["move to the", 0.0], ["minimum time print the", 0.0], ["minimum time print", 0.0], ["minimum time", 0.0], ["minimum operations to type", 0.0], ["minimum cost and", 0.0], ["minimum cost and the", 0.0], ["minimum cost of", 0.0], ["minimum cost of each", 0.0], ["minimum decimal", 0.0], ["minimum decimal number", 0.0], ["minimum decimal number to", 0.0], ["minimum grapes", 0.0], ["minimum grapes needed", 0.0], ["minimum grapes needed for", 0.0], ["minimum number", 0.0], ["minimum number of", 0.0], ["minimum number of exchanges", 0.0], ["minimum number of extra", 0.0], ["minimum number of lines", 0.0], ["minimum number of minutes", 0.0], ["minimum number of moves", 0.0], ["minimum number of questions", 0.0], ["minimum number of spheres", 0.0], ["minimum number of times", 0.0], ["minimum number of turns", 0.0], ["minimum operations", 0.0], ["minimum operations are", 0.0], ["minimum operations are reduced", 0.0], ["minimum operations to", 0.0], ["move to the first", 0.0], ["movements", 0.0], ["movements for", 0.0], ["multiple", 0.0], ["multiple of x", 0.0], ["multiple of x that", 0.0], ["multiples", 0.0], ["multiples count", 0.0], ["multiples count the", 0.0], ["multiples count the number", 0.0], ["multiples of", 0.0], ["multiples of a", 0.0], ["multiples of a and", 0.0], ["multiples of k", 0.0], ["multiples of k between", 0.0], ["multiplying", 0.0], ["multiplying all", 0.0], ["multiplying all values", 0.0], ["multiplying all values in", 0.0], ["n", 0.0], ["n )", 0.0], ["n ) :", 0.0], ["n ) : if", 0.0], ["n ) print", 0.0], ["n ) print (", 0.0], ["n -", 0.0], ["n - chk1", 0.0], ["n - chk1 -", 0.0], ["n - x", 0.0], ["multiple of", 0.0], ["moves to the center", 0.0], ["movements for each", 0.0], ["moves to the", 0.0], ["movements for each number", 0.0], ["movements for mike", 0.0], ["movements for mike 's", 0.0], ["moves", 0.0], ["moves and", 0.0], ["moves and the", 0.0], ["moves and the new", 0.0], ["moves calculate", 0.0], ["moves calculate the", 0.0], ["moves calculate the row", 0.0], ["moves get", 0.0], ["moves get the", 0.0], ["moves get the input", 0.0], ["moves move", 0.0], ["moves move to", 0.0], ["moves move to the", 0.0], ["moves print", 0.0], ["moves print the", 0.0], ["moves print the number", 0.0], ["moves required", 0.0], ["moves required print", 0.0], ["moves required print the", 0.0], ["moves required return", 0.0], ["moves required return the", 0.0], ["moves to", 0.0], ["minimum cost", 0.0], ["minimum and maximum elements", 0.0], ["minimum and maximum", 0.0], ["maximum length of the", 0.0], ["maximum messiness subtract", 0.0], ["maximum messiness subtract the", 0.0], ["maximum number", 0.0], ["maximum number not", 0.0], ["maximum number not exceeding", 0.0], ["maximum number of", 0.0], ["maximum number of bourles", 0.0], ["maximum number of candies", 0.0], ["maximum number of consecutive", 0.0], ["maximum number of fishes", 0.0], ["maximum number of lucky", 0.0], ["maximum number of pieces", 0.0], ["maximum number of players", 0.0], ["maximum number of questions", 0.0], ["maximum number of terms", 0.0], ["maximum number print", 0.0], ["maximum number print the", 0.0], ["maximum possible", 0.0], ["maximum possible divisor", 0.0], ["maximum possible divisor print", 0.0], ["maximum possible weight", 0.0], ["maximum possible weight of", 0.0], ["maximum subarray", 0.0], ["maximum subarray sum", 0.0], ["maximum subarray sum calculate", 0.0], ["maximum messiness", 0.0], ["maximum length of", 0.0], ["maximum team size", 0.0], ["maximum length", 0.0], ["math.inf", 0.0], ["math.inf :", 0.0], ["math.inf : sufflens", 0.0], ["math.inf : sufflens [", 0.0], ["matrix", 0.0], ["matrix formed", 0.0], ["matrix formed by", 0.0], ["matrix formed by the", 0.0], ["maximum", 0.0], ["maximum amount", 0.0], ["maximum amount of", 0.0], ["maximum amount of kvass", 0.0], ["maximum distance", 0.0], ["maximum distance between", 0.0], ["maximum distance between the", 0.0], ["maximum distance that", 0.0], ["maximum distance that willman", 0.0], ["maximum divisor", 0.0], ["maximum divisor of", 0.0], ["maximum divisor of n", 0.0], ["maximum elements", 0.0], ["maximum elements after", 0.0], ["maximum elements after swapping", 0.0], ["maximum elements calculate", 0.0], ["maximum elements calculate the", 0.0], ["maximum team", 0.0], ["maximum team size print", 0.0], ["minimum and", 0.0], ["message otherwise , return", 0.0], ["message return the", 0.0], ["message return the message", 0.0], ["messiness", 0.0], ["messiness subtract", 0.0], ["messiness subtract the", 0.0], ["messiness subtract the number", 0.0], ["mike", 0.0], ["mike 's", 0.0], ["mike 's number", 0.0], ["mike 's number is", 0.0], ["min", 0.0], ["min of", 0.0], ["min of a_rest", 0.0], ["min of a_rest is", 0.0], ["mincutlen", 0.0], ["mincutlen )", 0.0], ["mincutlen ) print", 0.0], ["mincutlen ) print (", 0.0], ["minimizes", 0.0], ["minimizes the", 0.0], ["minimizes the cost", 0.0], ["minimum", 0.0], ["minimum amount", 0.0], ["minimum amount of", 0.0], ["minimum amount of rubles", 0.0], ["message return", 0.0], ["message otherwise ,", 0.0], ["maximum value", 0.0], ["message otherwise", 0.0], ["maximum value find", 0.0], ["maximum value find the", 0.0], ["maximum value print", 0.0], ["maximum value print the", 0.0], ["maxpreflen", 0.0], ["maxpreflen )", 0.0], ["maxpreflen ) print", 0.0], ["maxpreflen ) print (", 0.0], ["maxsufflen", 0.0], ["maxsufflen )", 0.0], ["meet", 0.0], ["meet the", 0.0], ["meet the given", 0.0], ["meet the given conditions", 0.0], ["meets", 0.0], ["meets the", 0.0], ["meets the given", 0.0], ["meets the given conditions", 0.0], ["message", 0.0], ["message if", 0.0], ["message if the", 0.0], ["message if the letter", 0.0], ["message of", 0.0], ["message of length", 0.0], ["message of length k", 0.0], ["of lucky years", 0.0], ["of minutes", 0.0], ["row number of seconds", 0.0], ["print the cell number", 0.0], ["print ( xhit ,", 0.0], ["print -1", 0.0], ["print -1 otherwise", 0.0], ["print -1 otherwise ,", 0.0], ["print 0", 0.0], ["print no", 0.0], ["print the", 0.0], ["print the abscissa", 0.0], ["print the abscissa of", 0.0], ["print the answer", 0.0], ["print the beauty", 0.0], ["print the cell", 0.0], ["print the digit", 0.0], ["print ( maxsufflen", 0.0], ["print the expected", 0.0], ["print the expected number", 0.0], ["print the expression", 0.0], ["print the length", 0.0], ["print the length of", 0.0], ["print the maximum", 0.0], ["print the maximum distance", 0.0], ["print the maximum divisor", 0.0], ["print the maximum length", 0.0], ["print the maximum number", 0.0], ["print the maximum possible", 0.0], ["print the message", 0.0], ["print ( xhit", 0.0], ["print ( x ,", 0.0], ["print ( x", 0.0], ["print ( upp ,", 0.0], ["print ( mincutlen", 0.0], ["print ( mincutlen )", 0.0], ["print ( n", 0.0], ["print ( n )", 0.0], ["print ( pos", 0.0], ["print ( pos )", 0.0], ["print ( pref", 0.0], ["print ( pref ,", 0.0], ["print ( preflen", 0.0], ["print ( preflen )", 0.0], ["print ( preflens", 0.0], ["print ( preflens [", 0.0], ["print ( r", 0.0], ["print ( r )", 0.0], ["print ( rborder", 0.0], ["print ( rborder )", 0.0], ["print ( selection", 0.0], ["print ( selection )", 0.0], ["print ( sufflen", 0.0], ["print ( sufflen )", 0.0], ["print ( sufflens", 0.0], ["print ( sufflens [", 0.0], ["print ( tmp_mass", 0.0], ["print ( tmp_mass )", 0.0], ["print ( upp", 0.0], ["print the minimum", 0.0], ["print the minimum amount", 0.0], ["print the minimum number", 0.0], ["problems", 0.0], ["problems , remainder", 0.0], ["problems , remainder is", 0.0], ["process", 0.0], ["process print", 0.0], ["process print the", 0.0], ["process print the results", 0.0], ["progression", 0.0], ["progression calculate", 0.0], ["progression calculate the", 0.0], ["progression calculate the second", 0.0], ["progression find", 0.0], ["progression find the", 0.0], ["progression find the intersection", 0.0], ["ptr", 0.0], ["ptr )", 0.0], ["ptr ) solve3", 0.0], ["ptr ) solve3 (", 0.0], ["ptr ) sorted", 0.0], ["ptr ) sorted from", 0.0], ["ptr to", 0.0], ["ptr to the", 0.0], ["ptr to the back", 0.0], ["pupil", 0.0], ["pupil is", 0.0], ["pupil is asked", 0.0], ["problems ,", 0.0], ["probability of each species", 0.0], ["print the minimum time", 0.0], ["probability of each", 0.0], ["print the number", 0.0], ["print the number of", 0.0], ["print the outcome", 0.0], ["print the outcome of", 0.0], ["print the probabilities", 0.0], ["print the result", 0.0], ["print the results", 0.0], ["print the script", 0.0], ["print the script file", 0.0], ["print the sum", 0.0], ["print the team", 0.0], ["print the team size", 0.0], ["print the total", 0.0], ["print the total cost", 0.0], ["print the total number", 0.0], ["print the waiting", 0.0], ["print the waiting time", 0.0], ["print the winner", 0.0], ["printing", 0.0], ["printing calculate", 0.0], ["printing calculate the", 0.0], ["printing calculate the total", 0.0], ["probabilities", 0.0], ["probability", 0.0], ["probability of", 0.0], ["print ( maxsufflen )", 0.0], ["print ( maxpreflen )", 0.0], ["position k calculate", 0.0], ["pref ,", 0.0], ["potions use", 0.0], ["potions use the", 0.0], ["potions use the first", 0.0], ["pour", 0.0], ["pour his", 0.0], ["pour his glass", 0.0], ["pour his glass by", 0.0], ["poured", 0.0], ["poured from", 0.0], ["poured from the", 0.0], ["poured from the first", 0.0], ["pref", 0.0], ["pref , jump", 0.0], ["print ( maxpreflen", 0.0], ["pref , jump )", 0.0], ["pref , suff", 0.0], ["pref , suff ''", 0.0], ["prefix", 0.0], ["prefix cost", 0.0], ["prefix cost 0", 0.0], ["prefix cost 0 )", 0.0], ["prefix costs", 0.0], ["prefix costs c+a", 0.0], ["prefix costs c+a ,", 0.0], ["preflen", 0.0], ["preflen )", 0.0], ["potions", 0.0], ["postmissing.discard ( x )", 0.0], ["postmissing.discard ( x", 0.0], ["postmissing.discard (", 0.0], ["positions", 0.0], ["positions if", 0.0], ["positions if the", 0.0], ["positions if the difference", 0.0], ["positions of", 0.0], ["positions of the", 0.0], ["positions of the first", 0.0], ["possible", 0.0], ["possible accordion", 0.0], ["possible accordion print", 0.0], ["possible accordion print the", 0.0], ["possible divisor", 0.0], ["possible divisor print", 0.0], ["possible divisor print the", 0.0], ["possible sizes", 0.0], ["possible sizes of", 0.0], ["possible sizes of the", 0.0], ["possible weight", 0.0], ["possible weight of", 0.0], ["possible weight of a", 0.0], ["post", 0.0], ["post office", 0.0], ["post office find", 0.0], ["post office find the", 0.0], ["postmissing.discard", 0.0], ["preflen ) print", 0.0], ["preflen ) print (", 0.0], ["preflen ]", 0.0], ["print ( * preflens", 0.0], ["print ( ``", 0.0], ["print ( `` e=", 0.0], ["print ( `` enter", 0.0], ["print ( `` f=", 0.0], ["print ( `` pref", 0.0], ["print ( `` r=", 0.0], ["print ( `` repermute", 0.0], ["print ( a", 0.0], ["print ( a )", 0.0], ["print ( al", 0.0], ["print ( al ,", 0.0], ["print ( ans", 0.0], ["print ( ans )", 0.0], ["print ( b", 0.0], ["print ( b )", 0.0], ["print ( curcutlen", 0.0], ["print ( curcutlen )", 0.0], ["print ( dp", 0.0], ["print ( dp )", 0.0], ["print ( e", 0.0], ["print ( e ,", 0.0], ["print ( i", 0.0], ["print ( i ,", 0.0], ["print ( lborder", 0.0], ["print ( lborder )", 0.0], ["print ( * sufflens", 0.0], ["print ( *", 0.0], ["preflen ] )", 0.0], ["print ( ) print", 0.0], ["preflen ] ) print", 0.0], ["preflens", 0.0], ["preflens ,", 0.0], ["preflens , sep='\\t", 0.0], ["preflens , sep='\\t '", 0.0], ["preflens [", 0.0], ["preflens [ preflen", 0.0], ["preflens [ preflen ]", 0.0], ["premissing.discard", 0.0], ["premissing.discard (", 0.0], ["premissing.discard ( x", 0.0], ["premissing.discard ( x )", 0.0], ["prepare", 0.0], ["prepare n", 0.0], ["prepare n potions", 0.0], ["prepare n potions use", 0.0], ["press", 0.0], ["press the", 0.0], ["press the snooze", 0.0], ["press the snooze button", 0.0], ["previous", 0.0], ["previous file", 0.0], ["print", 0.0], ["print (", 0.0], ["print ( )", 0.0], ["pupil is asked calculate", 0.0], ["put", 0.0], ["put on", 0.0], ["required number of", 0.0], ["repermute ''", 0.0], ["repermute '' ,", 0.0], ["repermute '' , al", 0.0], ["representation", 0.0], ["representation of", 0.0], ["representation of the", 0.0], ["representation of the year", 0.0], ["required", 0.0], ["required frame", 0.0], ["required frame exists", 0.0], ["required frame exists check", 0.0], ["required number", 0.0], ["required number of copybooks", 0.0], ["put on each", 0.0], ["required number of spheres", 0.0], ["required print", 0.0], ["required print the", 0.0], ["required print the minimum", 0.0], ["required return", 0.0], ["required return the", 0.0], ["required return the minimum", 0.0], ["requirements", 0.0], ["requirements print", 0.0], ["requirements print the", 0.0], ["requirements print the result", 0.0], ["result", 0.0], ["repermute", 0.0], ["repeat it if the", 0.0], ["repeat it if", 0.0], ["repeat it", 0.0], ["remove", 0.0], ["remove ,", 0.0], ["remove , return", 0.0], ["remove , return impossible", 0.0], ["remove and", 0.0], ["remove and repeat", 0.0], ["remove and repeat check", 0.0], ["remove and repeat is", 0.0], ["remove it", 0.0], ["remove it otherwise", 0.0], ["remove it otherwise ,", 0.0], ["remove leading", 0.0], ["remove leading zeroes", 0.0], ["remove leading zeroes print", 0.0], ["repair", 0.0], ["repair the", 0.0], ["repair the car", 0.0], ["repair the car and", 0.0], ["repeat", 0.0], ["repeat check", 0.0], ["repeat check if", 0.0], ["repeat check if the", 0.0], ["repeat is", 0.0], ["repeat is equal", 0.0], ["repeat is equal to", 0.0], ["result calculate", 0.0], ["result calculate the", 0.0], ["result calculate the length", 0.0], ["ribbons calculate", 0.0], ["ribbons calculate the beauty", 0.0], ["right", 0.0], ["right )", 0.0], ["right ,", 0.0], ["right , then", 0.0], ["right , then this", 0.0], ["round", 0.0], ["round is", 0.0], ["round is rated", 0.0], ["round is rated check", 0.0], ["round is unrated", 0.0], ["round is unrated due", 0.0], ["row", 0.0], ["row ,", 0.0], ["row , how", 0.0], ["row , how many", 0.0], ["row add", 0.0], ["row add the", 0.0], ["row add the time", 0.0], ["row and", 0.0], ["row and column", 0.0], ["row and column of", 0.0], ["row number", 0.0], ["row number of", 0.0], ["row number of rows", 0.0], ["ribbons calculate the", 0.0], ["ribbons", 0.0], ["results", 0.0], ["ribbon determine the winner", 0.0], ["return", 0.0], ["return ``", 0.0], ["return `` inf", 0.0], ["return `` inf ''", 0.0], ["return impossible", 0.0], ["return impossible calculate", 0.0], ["return impossible calculate the", 0.0], ["return impossible get", 0.0], ["return impossible get the", 0.0], ["return the", 0.0], ["return the message", 0.0], ["return the message otherwise", 0.0], ["return the minimum", 0.0], ["return the minimum number", 0.0], ["return the number", 0.0], ["return the number of", 0.0], ["return the smallest", 0.0], ["return the smallest n", 0.0], ["rewrite", 0.0], ["rewrite the", 0.0], ["rewrite the file", 0.0], ["rewrite the file with", 0.0], ["ribbon", 0.0], ["ribbon determine", 0.0], ["ribbon determine the", 0.0], ["remocrats faction if the", 0.0], ["remocrats faction if", 0.0], ["remocrats faction , they", 0.0], ["r= '' ,", 0.0], ["r=0", 0.0], ["r=0 f=", 0.0], ["r=0 f= [", 0.0], ["r=0 f= [ 0", 0.0], ["range", 0.0], ["range (", 0.0], ["range ( getint", 0.0], ["range ( getint (", 0.0], ["range ( n", 0.0], ["range ( n )", 0.0], ["rated", 0.0], ["rated check", 0.0], ["rated check if", 0.0], ["rated check if the", 0.0], ["rated participant", 0.0], ["rated participant taking", 0.0], ["rated participant taking a", 0.0], ["rborder", 0.0], ["rborder )", 0.0], ["rborder ) print", 0.0], ["rborder ) print (", 0.0], ["reach", 0.0], ["reach from", 0.0], ["reach from position", 0.0], ["reach from position k", 0.0], ["r= '' , r", 0.0], ["r= ''", 0.0], ["reach the perfect", 0.0], ["r=", 0.0], ["put on each plate", 0.0], ["python3", 0.0], ["python3 (", 0.0], ["python3 ( l", 0.0], ["python3 ( l ,", 0.0], ["python3 p.py", 0.0], ["questions", 0.0], ["questions a", 0.0], ["questions a particular", 0.0], ["questions a particular pupil", 0.0], ["r", 0.0], ["r )", 0.0], ["r ) i=10", 0.0], ["r ) i=10 *", 0.0], ["r ]", 0.0], ["r ] ,", 0.0], ["r ] , return", 0.0], ["r ] are", 0.0], ["r ] are unlucky", 0.0], ["r ] find", 0.0], ["r ] find the", 0.0], ["r+=1", 0.0], ["r+=1 break", 0.0], ["r+=1 break j+=1", 0.0], ["r+=1 break j+=1 print", 0.0], ["reach the", 0.0], ["reach the perfect longcat", 0.0], ["remocrats faction ,", 0.0], ["region the", 0.0], ["region the cow can", 0.0], ["remainder", 0.0], ["remainder is", 0.0], ["remainder is for", 0.0], ["remainder is for remaining", 0.0], ["remaining", 0.0], ["remaining elements", 0.0], ["remaining elements in", 0.0], ["remaining elements in descending", 0.0], ["remaining employee", 0.0], ["remaining employee votes", 0.0], ["remaining employee votes print", 0.0], ["remaining manholes", 0.0], ["remaining string", 0.0], ["remaining string can", 0.0], ["remaining string can be", 0.0], ["remaining subproblems", 0.0], ["remaining subproblems for", 0.0], ["remaining subproblems for fully", 0.0], ["remaining_time", 0.0], ["remaining_time >", 0.0], ["remaining_time > 0", 0.0], ["remaining_time > 0 and", 0.0], ["remocrats", 0.0], ["remocrats faction", 0.0], ["region the cow", 0.0], ["region", 0.0], ["read", 0.0], ["reflection calculate the distance", 0.0], ["read input", 0.0], ["read input calculate", 0.0], ["read input calculate maximum", 0.0], ["read input calculate the", 0.0], ["read input create", 0.0], ["read input create grids", 0.0], ["read kuro", 0.0], ["read kuro 's", 0.0], ["read kuro 's ,", 0.0], ["read the", 0.0], ["read the coordinates", 0.0], ["read the coordinates of", 0.0], ["read the pixels", 0.0], ["read the pixels check", 0.0], ["records", 0.0], ["records can", 0.0], ["records can be", 0.0], ["records can be consistent", 0.0], ["rectangle", 0.0], ["reduced", 0.0], ["reduced by", 0.0], ["reduced by 1", 0.0], ["reflection", 0.0], ["reflection calculate", 0.0], ["reflection calculate the", 0.0], ["position k calculate the", 0.0], ["position k", 0.0], ["of minutes calculate", 0.0], ["of times to", 0.0], ["of the shortest", 0.0], ["of the shortest possible", 0.0], ["of the sofa", 0.0], ["of the sofa that", 0.0], ["of the string", 0.0], ["of the string is", 0.0], ["of the vote", 0.0], ["of the vote loop", 0.0], ["of the year", 0.0], ["of the year 2015", 0.0], ["of the year subtract", 0.0], ["of times", 0.0], ["of times to press", 0.0], ["of the array", 0.0], ["of trailing", 0.0], ["of trailing zeros", 0.0], ["of trailing zeros print", 0.0], ["of turns", 0.0], ["of turns print", 0.0], ["of turns print the", 0.0], ["of valid", 0.0], ["of valid paths", 0.0], ["of valid paths for", 0.0], ["of wood", 0.0], ["of wood by", 0.0], ["of wood by the", 0.0], ["of the result calculate", 0.0], ["of the result", 0.0], ["of the region the", 0.0], ["of the region", 0.0], ["of the bars", 0.0], ["of the bars after", 0.0], ["of the cell", 0.0], ["of the cell where", 0.0], ["of the cow", 0.0], ["of the cow and", 0.0], ["of the first", 0.0], ["of the first k", 0.0], ["of the frame", 0.0], ["of the frame check", 0.0], ["of the golden", 0.0], ["of the golden age", 0.0], ["of the lane", 0.0], ["of the lane that", 0.0], ["of the longest", 0.0], ["of the longest non-palindrome", 0.0], ["of the matrix", 0.0], ["of the matrix formed", 0.0], ["of the maximum", 0.0], ["of the maximum value", 0.0], ["of the nearest", 0.0], ["of the nearest zero", 0.0], ["of the point", 0.0], ["of the point of", 0.0], ["of the rectangle", 0.0], ["of wood needed", 0.0], ["of wood needed for", 0.0], ["of x", 0.0], ["on the k-th manhole", 0.0], ["once all", 0.0], ["once all employees", 0.0], ["once all employees have", 0.0], ["one", 0.0], ["one .", 0.0], ["one . illegal", 0.0], ["one . illegal ,", 0.0], ["one al", 0.0], ["one al =", 0.0], ["one al = sorted", 0.0], ["one element", 0.0], ["one element print", 0.0], ["one element print the", 0.0], ["one extra", 0.0], ["one extra tile", 0.0], ["one extra tile otherwise", 0.0], ["one zero", 0.0], ["one zero in", 0.0], ["one zero in the", 0.0], ["only", 0.0], ["only survivor", 0.0], ["only survivor print", 0.0], ["only survivor print the", 0.0], ["operation", 0.0], ["operation ,", 0.0], ["once", 0.0], ["on the k-th", 0.0], ["of x that", 0.0], ["on the border of", 0.0], ["of x that contains", 0.0], ["of years", 0.0], ["of years until", 0.0], ["of years until the", 0.0], ["of years with", 0.0], ["of years with exactly", 0.0], ["office", 0.0], ["office find", 0.0], ["office find the", 0.0], ["office find the minimum", 0.0], ["om", 0.0], ["om nom", 0.0], ["om nom can", 0.0], ["om nom can eat", 0.0], ["on", 0.0], ["on each", 0.0], ["on each manhole", 0.0], ["on each manhole calculate", 0.0], ["on each plate", 0.0], ["on each plate print", 0.0], ["on printing", 0.0], ["on printing calculate", 0.0], ["on printing calculate the", 0.0], ["on the", 0.0], ["on the border", 0.0], ["of the array after", 0.0], ["of the alphabet print", 0.0], ["position calculate the expected", 0.0], ["of operations needed to", 0.0], ["of n that", 0.0], ["of n that is", 0.0], ["of natasha", 0.0], ["of natasha 's", 0.0], ["of natasha 's apartment", 0.0], ["of non-zero", 0.0], ["of non-zero digits", 0.0], ["of non-zero digits in", 0.0], ["of operations", 0.0], ["of operations and", 0.0], ["of operations and the", 0.0], ["of operations needed", 0.0], ["of painted", 0.0], ["of the alphabet", 0.0], ["of painted tiles", 0.0], ["of painted tiles calculate", 0.0], ["of pairs", 0.0], ["of pairs of", 0.0], ["of pairs of integers", 0.0], ["of pieces", 0.0], ["of pieces that", 0.0], ["of pieces that can", 0.0], ["of players", 0.0], ["of players for", 0.0], ["of players for each", 0.0], ["of questions", 0.0], ["of n and find", 0.0], ["of n and", 0.0], ["of n", 0.0], ["of multiples of k", 0.0], ["of minutes calculate the", 0.0], ["of minutes they", 0.0], ["of minutes they can", 0.0], ["of minutes to", 0.0], ["of minutes to sleep", 0.0], ["of minutes until", 0.0], ["of minutes until the", 0.0], ["of moves", 0.0], ["of moves and", 0.0], ["of moves and the", 0.0], ["of moves calculate", 0.0], ["of moves calculate the", 0.0], ["of moves get", 0.0], ["of moves get the", 0.0], ["of moves move", 0.0], ["of moves move to", 0.0], ["of moves print", 0.0], ["of moves print the", 0.0], ["of moves required", 0.0], ["of moves required print", 0.0], ["of moves required return", 0.0], ["of moves to", 0.0], ["of moves to the", 0.0], ["of multiples", 0.0], ["of multiples of", 0.0], ["of questions a", 0.0], ["of questions a particular", 0.0], ["of rows", 0.0], ["of steps print the", 0.0], ["of steps to get", 0.0], ["of steps to the", 0.0], ["of stones", 0.0], ["of stones on", 0.0], ["of stones on each", 0.0], ["of streets", 0.0], ["of streets check", 0.0], ["of streets check if", 0.0], ["of students", 0.0], ["of students with", 0.0], ["of students with the", 0.0], ["of swaps", 0.0], ["of t", 0.0], ["of t that", 0.0], ["of t that minimizes", 0.0], ["of terms", 0.0], ["of terms if", 0.0], ["of terms if the", 0.0], ["of terms is", 0.0], ["of terms is finite", 0.0], ["of terms otherwise", 0.0], ["of terms otherwise ,", 0.0], ["of terms that", 0.0], ["of terms that can", 0.0], ["of the", 0.0], ["of steps to", 0.0], ["of steps print", 0.0], ["of rows and", 0.0], ["of steps", 0.0], ["of rows and seat", 0.0], ["of rows served", 0.0], ["of rows served before", 0.0], ["of rubles", 0.0], ["of rubles to", 0.0], ["of rubles to buy", 0.0], ["of seconds", 0.0], ["of seconds to", 0.0], ["of seconds to serve", 0.0], ["of seconds vasya", 0.0], ["of seconds vasya has", 0.0], ["of sofas", 0.0], ["of sofas that", 0.0], ["of sofas that meet", 0.0], ["of sparrows", 0.0], ["of sparrows that", 0.0], ["of sparrows that come", 0.0], ["of spheres", 0.0], ["of spheres is", 0.0], ["of spheres is greater", 0.0], ["of spheres that", 0.0], ["of spheres that can", 0.0], ["of standing", 0.0], ["of standing spectators", 0.0], ["of standing spectators at", 0.0], ["operation , the", 0.0], ["operation , the minimum", 0.0], ["operation numbers", 0.0], ["pedestrian", 0.0], ["path if no path", 0.0], ["path is", 0.0], ["path is found", 0.0], ["path is found ,", 0.0], ["paths", 0.0], ["paths for", 0.0], ["paths for a", 0.0], ["paths for a given", 0.0], ["pawns", 0.0], ["pawns '", 0.0], ["pawns ' positions", 0.0], ["pawns ' positions if", 0.0], ["pedestrian light", 0.0], ["operations", 0.0], ["pedestrian light is", 0.0], ["pedestrian light is green", 0.0], ["perfect", 0.0], ["perfect longcat", 0.0], ["perfect longcat number", 0.0], ["perfect longcat number print", 0.0], ["performance", 0.0], ["performance in", 0.0], ["performance in both", 0.0], ["performance in both groups", 0.0], ["person", 0.0], ["person check", 0.0], ["path if no", 0.0], ["path if", 0.0], ["path between any junction", 0.0], ["path between any", 0.0], ["part is also green", 0.0], ["partially", 0.0], ["partially solved", 0.0], ["partially solved remaining_time", 0.0], ["partially solved remaining_time >", 0.0], ["participant", 0.0], ["participant taking", 0.0], ["participant taking a", 0.0], ["participant taking a better", 0.0], ["particular", 0.0], ["particular pupil", 0.0], ["particular pupil is", 0.0], ["particular pupil is asked", 0.0], ["passengers", 0.0], ["passengers in", 0.0], ["passengers in each", 0.0], ["passengers in each row", 0.0], ["passengers in vasya", 0.0], ["passengers in vasya 's", 0.0], ["password", 0.0], ["password complexity", 0.0], ["password complexity requirements", 0.0], ["password complexity requirements print", 0.0], ["path", 0.0], ["path between", 0.0], ["person check if", 0.0], ["person check if there", 0.0], ["pick", 0.0], ["players for each", 0.0], ["plus", 0.0], ["plus a", 0.0], ["plus a long", 0.0], ["plus a long series", 0.0], ["pocket", 0.0], ["pocket the", 0.0], ["pocket the ball", 0.0], ["pocket the ball will", 0.0], ["point", 0.0], ["point of", 0.0], ["point of aiming", 0.0], ["point of aiming print", 0.0], ["polycarp", 0.0], ["polycarp wins", 0.0], ["polycarp wins otherwise", 0.0], ["polycarp wins otherwise ,", 0.0], ["pop", 0.0], ["pop this", 0.0], ["pop this idx", 0.0], ["pop this idx done", 0.0], ["pos", 0.0], ["pos )", 0.0], ["position", 0.0], ["position calculate", 0.0], ["position calculate the", 0.0], ["players for each hand", 0.0], ["players for", 0.0], ["pick up", 0.0], ["players", 0.0], ["pick up all", 0.0], ["pick up all stones", 0.0], ["pieces", 0.0], ["pieces that", 0.0], ["pieces that can", 0.0], ["pieces that can be", 0.0], ["pixel", 0.0], ["pixel is", 0.0], ["pixel is white", 0.0], ["pixel is white and", 0.0], ["pixels", 0.0], ["pixels check", 0.0], ["pixels check if", 0.0], ["pixels check if the", 0.0], ["place", 0.0], ["place print", 0.0], ["place print the", 0.0], ["place print the result", 0.0], ["place the", 0.0], ["place the first", 0.0], ["place the first k", 0.0], ["plate", 0.0], ["plate print", 0.0], ["plate print the", 0.0], ["plate print the maximum", 0.0], ["part is also", 0.0], ["part is", 0.0], ["part", 0.0], ["or shuntsu if there", 0.0], ["order construct", 0.0], ["order construct the", 0.0], ["order construct the maximum", 0.0], ["order in", 0.0], ["order in which", 0.0], ["order in which employees", 0.0], ["order place", 0.0], ["order place the", 0.0], ["order place the first", 0.0], ["order sort", 0.0], ["order sort the", 0.0], ["order sort the remaining", 0.0], ["order they", 0.0], ["order they will", 0.0], ["order they will make", 0.0], ["original", 0.0], ["original order", 0.0], ["original order sort", 0.0], ["original order sort the", 0.0], ["original positions", 0.0], ["other", 0.0], ["other junction", 0.0], ["other junction iterate", 0.0], ["other junction iterate over", 0.0], ["other nodes", 0.0], ["order", 0.0], ["or shuntsu if", 0.0], ["other nodes with added", 0.0], ["or shuntsu , draw", 0.0], ["operations and", 0.0], ["operations and the", 0.0], ["operations and the operation", 0.0], ["operations are", 0.0], ["operations are reduced", 0.0], ["operations are reduced by", 0.0], ["operations needed", 0.0], ["operations needed to", 0.0], ["operations needed to reach", 0.0], ["operations to", 0.0], ["operations to type", 0.0], ["operations to type the", 0.0], ["optimal", 0.0], ["optimal ,", 0.0], ["optimal , plus", 0.0], ["optimal , plus a", 0.0], ["or", 0.0], ["or from", 0.0], ["or from that", 0.0], ["or from that same", 0.0], ["or is", 0.0], ["or is denied", 0.0], ["or is denied ,", 0.0], ["or shuntsu", 0.0], ["or shuntsu ,", 0.0], ["other nodes with", 0.0], ["otherwise", 0.0], ["parity calculate the answer", 0.0], ["over the days until", 0.0], ["over the employees in", 0.0], ["over the employees making", 0.0], ["over the rows", 0.0], ["over the rows to", 0.0], ["overlapping", 0.0], ["overlapping minutes", 0.0], ["overlapping minutes between", 0.0], ["overlapping minutes between l_1-r_1", 0.0], ["p", 0.0], ["p )", 0.0], ["p ) print", 0.0], ["p ) print (", 0.0], ["p holds", 0.0], ["p.py", 0.0], ["painted", 0.0], ["painted tiles", 0.0], ["painted tiles calculate", 0.0], ["painted tiles calculate the", 0.0], ["pairs", 0.0], ["pairs of", 0.0], ["pairs of integers", 0.0], ["pairs of integers such", 0.0], ["parity", 0.0], ["parity calculate", 0.0], ["parity calculate the", 0.0], ["over the employees", 0.0], ["over the days", 0.0], ["otherwise ,", 0.0], ["over the", 0.0], ["otherwise , add", 0.0], ["otherwise , add the", 0.0], ["otherwise , draw", 0.0], ["otherwise , draw no", 0.0], ["otherwise , find", 0.0], ["otherwise , find the", 0.0], ["otherwise , return", 0.0], ["otherwise , return ``", 0.0], ["otherwise , return impossible", 0.0], ["otherwise , the", 0.0], ["otherwise , the winner", 0.0], ["otherwise , vasiliy", 0.0], ["otherwise , vasiliy wins", 0.0], ["our", 0.0], ["our answer", 0.0], ["our answer for", 0.0], ["our answer for _", 0.0], ["outcome", 0.0], ["outcome of", 0.0], ["outcome of the", 0.0], ["outcome of the vote", 0.0], ["over", 0.0], ["over all", 0.0], ["over all junctions", 0.0], ["over all junctions if", 0.0], ["!", 0.0]]}